[{"path":"https://qfes.github.io/rdeck/CONTRIBUTING.html","id":"dev-environment","dir":"","previous_headings":"","what":"Dev environment","title":"NA","text":"master branch active development branch. R users commonly install straight default branch, master kept installable state (necessarily bug-free). Use feature branches anything experimental, potentially breaking. following tools required local development build: - git - R >= 4 - nodejs >= 14 - npm >= 7 also recommended install React Developer Tools client-side debugging. Install npm dependencies: Install R packages development:","code":"npm install install.packages(\"devtools\") install.packages(\"styler\")"},{"path":"https://qfes.github.io/rdeck/CONTRIBUTING.html","id":"debug","dir":"","previous_headings":"","what":"Debug","title":"NA","text":"’re debugging rdeck maps browser, won’t get far without development build javascript css. development build isn’t minified includes inline sourcemaps. careful accidentally commit development build. Start development build watcher running: Debugging package R side things pretty standard. Load package using devtools: Now can create test maps interactively hit breakpoints browser javascript console.","code":"npm run watch-dev devtools::load_all()"},{"path":"https://qfes.github.io/rdeck/CONTRIBUTING.html","id":"build","dir":"","previous_headings":"","what":"Build","title":"NA","text":"Building client assets:","code":"npm run build"},{"path":"https://qfes.github.io/rdeck/CONTRIBUTING.html","id":"code-generation","dir":"","previous_headings":"","what":"Code generation","title":"NA","text":"R api creating deck.gl layers layer validation code generated deck.gl javascript. code-generation logic written javascript leverages ejs templates. code can found scripts/ folder. R scripts containing generated code : - R/deckgl-layers.R - R/deckgl-validators.R files annotated standard # Generated rdeck: edit hand reminder avoid modifying manually. files regenerated updating deck.gl dependency, modifying layer function templates. regenerating R api, good idea diff latest see parameters changed might require documentation. re-generate files:","code":"npm run codegen"},{"path":"https://qfes.github.io/rdeck/CONTRIBUTING.html","id":"layer-documentation","dir":"","previous_headings":"","what":"Layer documentation","title":"NA","text":"R deck.gl layer functions generated code, documentation layers manual. documentation layers can found R/doc-deckgl-layers.R. Parameters common among layers (e.g. name) located bottom script, attached layer_props. Anything unique layer customisation generic parameters added appropriate layer documentation block file. documentation method leveraging roxygen inheritance heavily, name doesn’t exist package: layer_props. bit hack, ’s elegant saves lot duplication.","code":""},{"path":"https://qfes.github.io/rdeck/CONTRIBUTING.html","id":"style-conventions","dir":"","previous_headings":"","what":"Style conventions","title":"NA","text":"Code conventions pretty standard. Prettier typescript, javascript css Styler used R","code":""},{"path":"https://qfes.github.io/rdeck/articles/rdeck.html","id":"packages","dir":"Articles","previous_headings":"","what":"Packages","title":"Introduction to rdeck","text":"packages required following examples. exception RcppSimdJson, packages frequently used creating rdeck maps.","code":"library(rdeck) library(dplyr) library(sf) library(viridis) # loading deck.gl example data library(RcppSimdJson)"},{"path":"https://qfes.github.io/rdeck/articles/rdeck.html","id":"loading-example-data","dir":"Articles","previous_headings":"","what":"Loading example data","title":"Introduction to rdeck","text":"example, create simple scatterplot layer using manhattan example data deck.gl. data can used directly URL, however typical usage rdeck, first ’ll load data data frame. manhattan data loaded. scatterplot layer make use position column define centre rendered point, species column change point colours sizes. lon lat aren’t used layer parameters, won’t serialised.","code":"url <- file.path(   \"https://raw.githubusercontent.com/visgl/deck.gl-data/master\",   \"examples/scatterplot/manhattan.json\",   fsep = \"/\" ) manhattan_data <- fload(url) %>%   as_tibble(.name_repair = ~ c(\"lon\", \"lat\", \"species\")) %>%   mutate(     position = sfc_point(lon, lat),     species = as.factor(species),     species_name = if_else(species == 1, \"dog\", \"cat\")   ) #> # A tibble: 13,987 × 5 #>      lon   lat species             position species_name #>    <dbl> <dbl> <fct>            <POINT [°]> <chr>        #>  1 -74.0  40.7 2       (-73.98602 40.73074) cat          #>  2 -74.0  40.7 1       (-73.98429 40.72947) dog          #>  3 -74.0  40.7 1       (-73.98775 40.73202) dog          #>  4 -74.0  40.7 2       (-73.98689 40.73011) cat          #>  5 -74.0  40.7 2       (-73.98516 40.72883) cat          #>  6 -74.0  40.7 1       (-73.98818 40.72979) dog          #>  7 -74.0  40.7 1       (-73.98646 40.73106) dog          #>  8 -74.0  40.7 1        (-73.98386 40.7317) dog          #>  9 -74.0  40.7 1       (-73.98559 40.73042) dog          #> 10 -74.0  40.7 2       (-73.98883 40.73058) cat          #> # … with 13,977 more rows"},{"path":"https://qfes.github.io/rdeck/articles/rdeck.html","id":"scatterplot-map","dir":"Articles","previous_headings":"","what":"Scatterplot map","title":"Introduction to rdeck","text":"create simple scatterplot map dark vector basemap cividis() colour scale scatterplot layer. scatterplot points scaled species categories found data (dataset dog cat); colour scale generates categorical legend. Point density highlighted additive blending, making dense areas appear brighter. points radius 30 metres, minimum 0.5 pixels (prevent disappearing low zooms). Hovered points become brighter — using similar colour scale get_fill_color — render tooltip containing species category data.","code":"rdeck(   map_style = mapbox_dark(),   # set the bounds of the map to include all of the manhattan data   initial_bounds = st_bbox(manhattan_data$position),   # add a 2 pixel buffer to each point, making it easier to hover   picking_radius = 2 ) %>%   add_scatterplot_layer(     name = \"manhattan_animals\",     data = manhattan_data,     # the coloumn in manhattan_data which contains the location of each point     get_position = position,     # a categorical colour scale, using the species column and a cividis colour palette     get_fill_color = scale_color_category(       col = species,       palette = cividis(2)     ),     # the radius of each point (default 1 metre) is scaled by 30     radius_scale = 30,     radius_min_pixels = 0.5,     # highlight dot density     blending_mode = \"additive\",     # interactivity     pickable = TRUE,     auto_highlight = TRUE,     # per-species highlight colour     highlight_color = scale_color_category(       col = species,       palette = c(\"#0060e6\", \"#fff399\"),       legend = FALSE     ),     tooltip = c(species, species_name)   ) #> Warning in mapbox_access_token(): ! Assertion failed: length(tokens) == 0 #> ! No mapbox access token found, mapbox basemap won't be shown. #> ℹ Set mapbox token with one of: #> • option `options(rdeck.mapbox_access_token = <token>)` #> • environment variable `MAPBOX_ACCESS_TOKEN = <token>` #> • environment variable `MAPBOX_TOKEN = <token>` #>    #> ℹ See <https://docs.mapbox.com/help/glossary/access-token>"},{"path":"https://qfes.github.io/rdeck/articles/rdeck.html","id":"grouping-points","dir":"Articles","previous_headings":"","what":"Grouping points","title":"Introduction to rdeck","text":"following example, group points species_name can highlight points given species . grouped data: following map almost identical previous map, replaced data parameter, scales use species_name tooltip include new column, count.","code":"manhattan_data_grouped <- manhattan_data %>%   group_by(species_name) %>%   summarise(     position = st_union(position),     count = n(),     .groups = \"drop\"   ) #> # A tibble: 2 × 3 #>   species_name                                                    position count #>   <chr>                                                   <MULTIPOINT [°]> <int> #> 1 cat          ((-73.99674 40.76856), (-73.99555 40.76893), (-74.00115 40…  7554 #> 2 dog          ((-73.99592 40.7739), (-73.99528 40.77207), (-73.99829 40.…  6433 rdeck(   map_style = mapbox_dark(),   # set the bounds of the map to include all of the manhattan data   initial_bounds = st_bbox(manhattan_data_grouped$position),   # add a 2 pixel buffer to each point, making it easier to hover   picking_radius = 2 ) %>%   add_scatterplot_layer(     name = \"manhattan_animals\",     data = manhattan_data_grouped,     # the coloumn in manhattan_data which contains the location of each point     get_position = position,     # a categorical colour scale, using the species column and a cividis colour palette     get_fill_color = scale_color_category(       col = species_name,       palette = cividis(2)     ),     # the radius of each point (default 1 metre) is scaled by 30     radius_scale = 30,     radius_min_pixels = 0.5,     # highlight dot density     blending_mode = \"additive\",     # interactivity     pickable = TRUE,     auto_highlight = TRUE,     # per-species highlight colour     highlight_color = scale_color_category(       col = species_name,       palette = c(\"#0060e6\", \"#fff399\"),       legend = FALSE     ),     tooltip = everything()   ) #> Warning in mapbox_access_token(): ! Assertion failed: length(tokens) == 0 #> ! No mapbox access token found, mapbox basemap won't be shown. #> ℹ Set mapbox token with one of: #> • option `options(rdeck.mapbox_access_token = <token>)` #> • environment variable `MAPBOX_ACCESS_TOKEN = <token>` #> • environment variable `MAPBOX_TOKEN = <token>` #>    #> ℹ See <https://docs.mapbox.com/help/glossary/access-token>"},{"path":"https://qfes.github.io/rdeck/articles/rdeck.html","id":"scaling-additional-parameters","dir":"Articles","previous_headings":"","what":"Scaling additional parameters","title":"Introduction to rdeck","text":"able scale many parameters layer. following example, additionally scale radius count species_name.","code":"rdeck(   map_style = mapbox_dark(),   # set the bounds of the map to include all of the manhattan data   initial_bounds = st_bbox(manhattan_data_grouped$position),   # add a 2 pixel buffer to each point, making it easier to hover   picking_radius = 2 ) %>%   add_scatterplot_layer(     name = \"manhattan_animals\",     data = manhattan_data_grouped,     # the coloumn in manhattan_data which contains the location of each point     get_position = position,     # a categorical colour scale, using the species column and a cividis colour palette     get_fill_color = scale_color_category(       col = species_name,       palette = cividis(2)     ),     # we only have 2 groups, so this scale is equivalent to a categorical scale with the     # same parameters     get_radius = scale_linear(       col = count,       range = sqrt(1:2)     ),     # the radius of each point is scaled by 30     radius_scale = 30,     radius_min_pixels = 0.5,     # highlight dot density     blending_mode = \"additive\",     # interactivity     pickable = TRUE,     auto_highlight = TRUE,     # per-species highlight colour     highlight_color = scale_color_category(       col = species_name,       palette = c(\"#0060e6\", \"#fff399\"),       legend = FALSE     ),     tooltip = everything()   ) #> Warning in mapbox_access_token(): ! Assertion failed: length(tokens) == 0 #> ! No mapbox access token found, mapbox basemap won't be shown. #> ℹ Set mapbox token with one of: #> • option `options(rdeck.mapbox_access_token = <token>)` #> • environment variable `MAPBOX_ACCESS_TOKEN = <token>` #> • environment variable `MAPBOX_TOKEN = <token>` #>    #> ℹ See <https://docs.mapbox.com/help/glossary/access-token>"},{"path":"https://qfes.github.io/rdeck/articles/rdeck.html","id":"high-level-layers","dir":"Articles","previous_headings":"","what":"High-level layers","title":"Introduction to rdeck","text":"example code repetitive, copy-pasta inevitably result maintenance problems, well increased developer effort. Generally creating maps, encapsulate creation one layers function. Similar creating functions encapsulate tidy-methods, use curly-curly needed parameters accept accessor parameter. rule creating layer function function takes rdeck map parameter (typically first parameter) map must returned; makes function chainable. following example, parameterise data, fill palette, highlight palette, get radius (require curl-curly) original scatterplot layer. Usage new function like adding layer, just now opinionated isn’t limited adding single layer.","code":"add_manhattan_layer <- function(rdeck, manhattan_data,                                 fill_palette, highlight_palette, get_radius) {   rdeck %>%     add_scatterplot_layer(       name = \"manhattan_animals\",       data = manhattan_data,       get_position = position,       get_fill_color = scale_color_category(         col = species_name,         palette = fill_palette       ),       # we need curly-curly for get_radius       get_radius = {{ get_radius }},       radius_scale = 30,       radius_min_pixels = 0.5,       blending_mode = \"additive\",       pickable = TRUE,       auto_highlight = TRUE,       highlight_color = scale_color_category(         col = species_name,         palette = highlight_palette,         legend = FALSE       ),       tooltip = everything()     ) } rdeck(   map_style = mapbox_dark(),   # set the bounds of the map to include all of the manhattan data   initial_bounds = st_bbox(manhattan_data$position),   # add a 2 pixel buffer to each point, making it easier to hover   picking_radius = 2 ) %>%   add_manhattan_layer(     manhattan_data = manhattan_data_grouped,     fill_palette = viridis(2, alpha = 0.7),     highlight_palette = viridis(2),     get_radius = scale_category(       col = species_name,       # swap the levels order, dogs are now bigger       levels = c(\"cat\", \"dog\"),       range = c(1, sqrt(3))     )   ) #> Warning in mapbox_access_token(): ! Assertion failed: length(tokens) == 0 #> ! No mapbox access token found, mapbox basemap won't be shown. #> ℹ Set mapbox token with one of: #> • option `options(rdeck.mapbox_access_token = <token>)` #> • environment variable `MAPBOX_ACCESS_TOKEN = <token>` #> • environment variable `MAPBOX_TOKEN = <token>` #>    #> ℹ See <https://docs.mapbox.com/help/glossary/access-token>"},{"path":"https://qfes.github.io/rdeck/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Anthony North. Author, maintainer.","code":""},{"path":"https://qfes.github.io/rdeck/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"North (2022). rdeck: Deck.gl Widget. https://qfes.github.io/rdeck, https://github.com/qfes/rdeck.","code":"@Manual{,   title = {rdeck: Deck.gl Widget},   author = {Anthony North},   year = {2022},   note = {https://qfes.github.io/rdeck, https://github.com/qfes/rdeck}, }"},{"path":"https://qfes.github.io/rdeck/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Deck.gl Widget","text":"","code":"# install latest release remotes::install_github(\"qfes/rdeck@*release\") # or install development version remotes::install_github(\"qfes/rdeck\")"},{"path":"https://qfes.github.io/rdeck/index.html","id":"mapbox-access-token","dir":"","previous_headings":"","what":"Mapbox access token","title":"Deck.gl Widget","text":"Mapbox account mapbox access token required Mapbox basemaps, without Mapbox data service. See mapbox_access_token usage.","code":""},{"path":"https://qfes.github.io/rdeck/index.html","id":"similar-work","dir":"","previous_headings":"","what":"Similar work","title":"Deck.gl Widget","text":"rdeck draws much inspiration kepler.gl {mapdeck}. rdeck’s design choices make convenient use static reports, certain Shiny usecases highly performant. notable differences mapdeck: column-major data storage client-side visual attributes scaling client-side tooltip formatting automatic filtering data used map Tidy evaluation supported column specifications. Extensive validation layer properties R preferred, rather throwing errors browser. e.g. scale_color_power, scale_color_log etc. Automatic creation formatted tooltips Choice light dark themes tooltips legends. every deck.gl layer supported degree every layer property snake_case version camelCase deck.gl counterpart. Traditional Shiny interactivity using whole datasets also possible, slightly slower mapdeck present.","code":""},{"path":"https://qfes.github.io/rdeck/reference/accessor.html","id":null,"dir":"Reference","previous_headings":"","what":"Prop Type: Accessor — accessor","title":"Prop Type: Accessor — accessor","text":"Accessors map data columns visual representations, primarily colours: fill, line, highlight sizes: radius, elevation, width, height. client, accessor translated javascript function retrieves specified column values rendered feature. equivalent R function look something like function(data, col, index) data[[index, col]].","code":""},{"path":"https://qfes.github.io/rdeck/reference/accessor.html","id":"tidy-eval","dir":"Reference","previous_headings":"","what":"Tidy-eval","title":"Prop Type: Accessor — accessor","text":"Accessors support tidy-eval expressions. Rules referencing column vs. value environment similar dplyr::mutate(), main difference names assumed columns data, falling back environment found. Like dplyr::mutate(), using string literals reference columns supported -- interpreted literal string. may reference column : name (e.g. my_col) call evaluating name, e.g. .name(), rlang::sym(), etc injecting variable environment containing name !!my_var, {{myvar}} Literal expressions -- except calls evaluating name scale -- interpreted constant values (e.g. \"#ff0000\", 1, TRUE, etc.). use value variable environment, use injection operators, e.g. !!my_constant. Examples: get_fill_color = color: column accessor, referencing \"color\" column get_fill_color = \"#ff0000\": constant value (red) get_fill_color = !!color: injects value color environment; name column value color (e.g. color <- .name(\"my_color_column\")) get_fill_color = rlang::sym(\"my_color\"): column accessor, referencing \"my_color\" column get_fill_color = scale_color_threshold(color): threshold scale, transforms \"color\" column","code":""},{"path":"https://qfes.github.io/rdeck/reference/accessor.html","id":"accessors-vs-scales","dir":"Reference","previous_headings":"","what":"Accessors vs. Scales","title":"Prop Type: Accessor — accessor","text":"parameters accept either accessor scale. Scales transform numeric categorical vectors colours numeric values, optionally render legend; similar ggplot scaling aesthetics. accessor can perform task manually transforming input vector colours numbers, worse : transformed output (e.g. colour vector) must stored data (data bloat) visual representations data legend rendered","code":""},{"path":"https://qfes.github.io/rdeck/reference/accessor.html","id":"accessors-vs-values","dir":"Reference","previous_headings":"","what":"Accessors vs. Values","title":"Prop Type: Accessor — accessor","text":"parameters accept either accessor value; get_radius example accepts either scalar numeric value, accessor numeric column, numeric scale. value can thought accessor values referenced column (.e. constant column), optimised file size render speed.","code":""},{"path":"https://qfes.github.io/rdeck/reference/arc_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Arc Layer — arc_layer","title":"Arc Layer — arc_layer","text":"Arc Layer","code":""},{"path":"https://qfes.github.io/rdeck/reference/arc_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arc Layer — arc_layer","text":"","code":"add_arc_layer(   rdeck,   ...,   id = uuid::UUIDgenerate(),   name = \"ArcLayer\",   group_name = NULL,   data = NULL,   visible = TRUE,   pickable = FALSE,   opacity = 1,   wrap_longitude = FALSE,   position_format = \"XYZ\",   color_format = \"RGBA\",   auto_highlight = FALSE,   highlight_color = \"#00008080\",   get_source_position = source_position,   get_target_position = target_position,   get_source_color = \"#000000ff\",   get_target_color = \"#000000ff\",   get_width = 1,   get_height = 1,   get_tilt = 0,   great_circle = FALSE,   width_units = \"pixels\",   width_scale = 1,   width_min_pixels = 0,   width_max_pixels = 9007199254740991,   blending_mode = \"normal\",   visibility_toggle = TRUE,   tooltip = NULL )  update_arc_layer(   rdeck,   ...,   id,   name = cur_value(),   group_name = cur_value(),   data = cur_value(),   visible = cur_value(),   pickable = cur_value(),   opacity = cur_value(),   wrap_longitude = cur_value(),   position_format = cur_value(),   color_format = cur_value(),   auto_highlight = cur_value(),   highlight_color = cur_value(),   get_source_position = cur_value(),   get_target_position = cur_value(),   get_source_color = cur_value(),   get_target_color = cur_value(),   get_width = cur_value(),   get_height = cur_value(),   get_tilt = cur_value(),   great_circle = cur_value(),   width_units = cur_value(),   width_scale = cur_value(),   width_min_pixels = cur_value(),   width_max_pixels = cur_value(),   blending_mode = cur_value(),   visibility_toggle = cur_value(),   tooltip = cur_value() )"},{"path":"https://qfes.github.io/rdeck/reference/arc_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arc Layer — arc_layer","text":"rdeck <rdeck | rdeck_proxy> rdeck map instance. ... Additional parameters forwarded deck.gl javascript without validation processing. dots must named camelCased serialised. warning raised dots used, warning class rdeck_dots_nonempty. id <string> layer's identifier must unique among layers type map. Defaults uuid::UUIDgenerate(), explicitly defined updatable layers shiny application. name <string> Identifies layer tooltips legends. need unique, brief. Defaults deck.gl class name layer. group_name <string> Defines group layer belongs . Currently effective layer selector, visibility_toggle = TRUE. data <data.frame | sf | string> layer's data. Data frames sf objects contain columns referenced layer's accessors. Strings interpreted URL data retrieved dynamically browser. visible <boolean> Determines whether layer visible ; also determines whether legend elements layer displayed. pickable <boolean> Determines layer responds pointer / touch events. opacity <number> Determines layer's opacity. wrap_longitude <boolean> Normalises geometry longitudes. position_format <\"XY\" | \"XYZ\"> Determines whether coordinate two (XY) three (XYZ) elements. color_format <\"RGB\" | \"RGBA\"> Determines whether alpha channel colours ignored accessors, making colours opaque. auto_highlight <boolean> TRUE, current object hovered cursor highlighted highlight_color. highlight_color <accessor | scale | color> auto_highlight pickable enabled, highlight_color determines colour currently highlighted object. single colour value supplied, colour used highlight objects layer. Per-object highlighting achieved colour scale, tidy-eval column colours. get_source_position <accessor> source position geometry column, either sfc_POINT sfc_MULTIPOINT column CRS EPSG:4326. Supports tidy-eval. get_target_position <accessor> target position geometry column, either sfc_POINT sfc_MULTIPOINT column CRS EPSG:4326. Supports tidy-eval. get_source_color <accessor | scale | color> colour source end arc. Accepts single colour value, colour scale, tidy-eval column colours. get_target_color <accessor | scale | color> colour target end arc. Accepts single colour value, colour scale, tidy-eval column colours. get_width <accessor | scale | number> width object, units specified width_scale. Accepts single numeric value, numeric scale, tidy-eval column numbers. get_height <accessor | scale | number> multiplier layer layer height. Accepts single numeric value, numeric scale, tidy-eval column numbers. value 0 make layer flat. get_tilt <accessor | number> Tilts arcs specified number degrees (c(-90, 90)). Accepts single numeric value tidy-eval column numbers. great_circle <boolean> TRUE, create arc along shortest path earth surface. width_units <\"pixels\" | \"common\" | \"meters\"> units line_width. width_scale <number> scaling multiplier width line. width_min_pixels <number> minimum line width pixels. width_max_pixels <number> maximum line width pixels. blending_mode <\"normal\" | \"additive\" | \"subtractive\"> Sets blending mode. Blending modes: normal: Normal blending alter colours overlapping objects. additive: Additive blending adds colours overlapping objects. Useful highlighting dot density dark maps. subtractive: Subtractive blending darkens overlapping objects. Useful highlighting dot density light maps. visibility_toggle <boolean> Whether layer appear layer selector. tooltip <tooltip> Defines columns (order) displayed layer tooltip, pickable == TRUE. Supports tidy-select data data.frame. sfc columns always removed.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/bitmap_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Bitmap Layer — bitmap_layer","title":"Bitmap Layer — bitmap_layer","text":"Bitmap Layer","code":""},{"path":"https://qfes.github.io/rdeck/reference/bitmap_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bitmap Layer — bitmap_layer","text":"","code":"add_bitmap_layer(   rdeck,   ...,   id = uuid::UUIDgenerate(),   name = \"BitmapLayer\",   group_name = NULL,   data = NULL,   visible = TRUE,   pickable = FALSE,   opacity = 1,   wrap_longitude = FALSE,   position_format = \"XYZ\",   color_format = \"RGBA\",   auto_highlight = FALSE,   highlight_color = \"#00008080\",   image = NULL,   bounds = c(1, 0, 0, 1),   desaturate = 0,   transparent_color = \"#00000000\",   tint_color = \"#ffffff\",   blending_mode = \"normal\",   visibility_toggle = TRUE,   tooltip = NULL )  update_bitmap_layer(   rdeck,   ...,   id,   name = cur_value(),   group_name = cur_value(),   data = cur_value(),   visible = cur_value(),   pickable = cur_value(),   opacity = cur_value(),   wrap_longitude = cur_value(),   position_format = cur_value(),   color_format = cur_value(),   auto_highlight = cur_value(),   highlight_color = cur_value(),   image = cur_value(),   bounds = cur_value(),   desaturate = cur_value(),   transparent_color = cur_value(),   tint_color = cur_value(),   blending_mode = cur_value(),   visibility_toggle = cur_value(),   tooltip = cur_value() )"},{"path":"https://qfes.github.io/rdeck/reference/bitmap_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bitmap Layer — bitmap_layer","text":"rdeck <rdeck | rdeck_proxy> rdeck map instance. ... Additional parameters forwarded deck.gl javascript without validation processing. dots must named camelCased serialised. warning raised dots used, warning class rdeck_dots_nonempty. id <string> layer's identifier must unique among layers type map. Defaults uuid::UUIDgenerate(), explicitly defined updatable layers shiny application. name <string> Identifies layer tooltips legends. need unique, brief. Defaults deck.gl class name layer. group_name <string> Defines group layer belongs . Currently effective layer selector, visibility_toggle = TRUE. data <data.frame | sf | string> layer's data. Data frames sf objects contain columns referenced layer's accessors. Strings interpreted URL data retrieved dynamically browser. visible <boolean> Determines whether layer visible ; also determines whether legend elements layer displayed. pickable <boolean> Determines layer responds pointer / touch events. opacity <number> Determines layer's opacity. wrap_longitude <boolean> Normalises geometry longitudes. position_format <\"XY\" | \"XYZ\"> Determines whether coordinate two (XY) three (XYZ) elements. color_format <\"RGB\" | \"RGBA\"> Determines whether alpha channel colours ignored accessors, making colours opaque. auto_highlight <boolean> TRUE, current object hovered cursor highlighted highlight_color. highlight_color <accessor | scale | color> auto_highlight pickable enabled, highlight_color determines colour currently highlighted object. single colour value supplied, colour used highlight objects layer. Per-object highlighting achieved colour scale, tidy-eval column colours. image <string | array> image display. Either string interpreted URL Data URL, image bitmap. bounds <bbox> st_bbox object CRS EPSG:4326. desaturate <number> desaturation bitmap. 0 1, original colour, 1 greyscale. transparent_color <color> colour use transparent pixels. tint_color <color> colour tint bitmap . Alpha channel ignored supplied. blending_mode <\"normal\" | \"additive\" | \"subtractive\"> Sets blending mode. Blending modes: normal: Normal blending alter colours overlapping objects. additive: Additive blending adds colours overlapping objects. Useful highlighting dot density dark maps. subtractive: Subtractive blending darkens overlapping objects. Useful highlighting dot density light maps. visibility_toggle <boolean> Whether layer appear layer selector. tooltip <tooltip> Defines columns (order) displayed layer tooltip, pickable == TRUE. Supports tidy-select data data.frame. sfc columns always removed.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/breaks_linear.html","id":null,"dir":"Reference","previous_headings":"","what":"Breaks linear — breaks_linear","title":"Breaks linear — breaks_linear","text":"Generate breaks vector size n linearly spaced breaks.","code":""},{"path":"https://qfes.github.io/rdeck/reference/breaks_linear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Breaks linear — breaks_linear","text":"","code":"breaks_linear(n = 10)"},{"path":"https://qfes.github.io/rdeck/reference/breaks_linear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Breaks linear — breaks_linear","text":"n <int> size output vector. Ouput size least length-2 finite input.","code":""},{"path":"https://qfes.github.io/rdeck/reference/breaks_linear.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Breaks linear — breaks_linear","text":"input range non-finite, empty vector returned.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/breaks_linear.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Breaks linear — breaks_linear","text":"","code":"breaks_linear(5)(-10:10) #> [1] -10  -5   0   5  10 breaks_linear()(-1:1) #>  [1] -1.0000000 -0.7777778 -0.5555556 -0.3333333 -0.1111111  0.1111111 #>  [7]  0.3333333  0.5555556  0.7777778  1.0000000"},{"path":"https://qfes.github.io/rdeck/reference/breaks_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Breaks log — breaks_log","title":"Breaks log — breaks_log","text":"Generate breaks vector size n log log_trans spaced breaks.","code":""},{"path":"https://qfes.github.io/rdeck/reference/breaks_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Breaks log — breaks_log","text":"","code":"breaks_log(n = 10, base = exp(1))"},{"path":"https://qfes.github.io/rdeck/reference/breaks_log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Breaks log — breaks_log","text":"n <int> size output vector. Ouput size least length-2 finite input. base <number> log base","code":""},{"path":"https://qfes.github.io/rdeck/reference/breaks_log.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Breaks log — breaks_log","text":"Input range must finite either strictly negative strictly positive; must cross, include 0. input range non-finite, empty vector returned.","code":""},{"path":"https://qfes.github.io/rdeck/reference/breaks_log.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Breaks log — breaks_log","text":"function different goal scales::breaks_log: produces evenly spaced log-breaks use d3-scale, produce breaks pretty labels.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/breaks_log.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Breaks log — breaks_log","text":"","code":"breaks_log(5)(-10:-1) #> [1] -10.000000  -5.623413  -3.162278  -1.778279  -1.000000 breaks_log(5)(1:10) #> [1]  1.000000  1.778279  3.162278  5.623413 10.000000"},{"path":"https://qfes.github.io/rdeck/reference/breaks_manual.html","id":null,"dir":"Reference","previous_headings":"","what":"Breaks manual — breaks_manual","title":"Breaks manual — breaks_manual","text":"Generate breaks vector pre-determined threshold values.","code":""},{"path":"https://qfes.github.io/rdeck/reference/breaks_manual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Breaks manual — breaks_manual","text":"","code":"breaks_manual(thresholds = 0.5)"},{"path":"https://qfes.github.io/rdeck/reference/breaks_manual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Breaks manual — breaks_manual","text":"thresholds <numeric> numeric vector ordered, finite thresholds.","code":""},{"path":"https://qfes.github.io/rdeck/reference/breaks_manual.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Breaks manual — breaks_manual","text":"Wraps thresholds range input data (may null non-finite). Thresholds fall outside range input omitted output.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/breaks_manual.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Breaks manual — breaks_manual","text":"","code":"breaks_manual(0)(-10:10) #> [1] -10   0  10 breaks_manual(c(-10, 0, 10))(-10:10) #> [1] -10   0  10 breaks_manual(-1:1 * 1e6)(NULL) #> [1]   -Inf -1e+06  0e+00  1e+06    Inf"},{"path":"https://qfes.github.io/rdeck/reference/breaks_power.html","id":null,"dir":"Reference","previous_headings":"","what":"Breaks power — breaks_power","title":"Breaks power — breaks_power","text":"Generate breaks vector size n exponentially power_trans spaced breaks.","code":""},{"path":"https://qfes.github.io/rdeck/reference/breaks_power.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Breaks power — breaks_power","text":"","code":"breaks_power(n = 10, exponent = 0.5)"},{"path":"https://qfes.github.io/rdeck/reference/breaks_power.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Breaks power — breaks_power","text":"n <int> size output vector. Ouput size least length-2 finite input. exponent <number> power exponent","code":""},{"path":"https://qfes.github.io/rdeck/reference/breaks_power.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Breaks power — breaks_power","text":"input range non-finite, empty vector returned.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/breaks_power.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Breaks power — breaks_power","text":"","code":"breaks_power(5)(-10:10) #> [1] -10.0  -2.5   0.0   2.5  10.0 breaks_power(5, exponent = 1 / 3)(-1:1) #> [1] -1.000 -0.125  0.000  0.125  1.000"},{"path":"https://qfes.github.io/rdeck/reference/breaks_symlog.html","id":null,"dir":"Reference","previous_headings":"","what":"Breaks symlog — breaks_symlog","title":"Breaks symlog — breaks_symlog","text":"Generate breaks vector size n log1p symlog_trans spaced breaks.","code":""},{"path":"https://qfes.github.io/rdeck/reference/breaks_symlog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Breaks symlog — breaks_symlog","text":"","code":"breaks_symlog(n = 10)"},{"path":"https://qfes.github.io/rdeck/reference/breaks_symlog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Breaks symlog — breaks_symlog","text":"n <int> size output vector. Ouput size least length-2 finite input.","code":""},{"path":"https://qfes.github.io/rdeck/reference/breaks_symlog.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Breaks symlog — breaks_symlog","text":"input range non-finite, empty vector returned.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/breaks_symlog.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Breaks symlog — breaks_symlog","text":"","code":"breaks_symlog(5)(-10:10) #> [1] -10.000000  -2.316625   0.000000   2.316625  10.000000 breaks_symlog(5)(0:10) #> [1]  0.0000000  0.8211603  2.3166248  5.0401054 10.0000000"},{"path":"https://qfes.github.io/rdeck/reference/breaks_trans.html","id":null,"dir":"Reference","previous_headings":"","what":"Breaks trans — breaks_trans","title":"Breaks trans — breaks_trans","text":"Generate breaks vector size n evenly spaced breaks trans domain.","code":""},{"path":"https://qfes.github.io/rdeck/reference/breaks_trans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Breaks trans — breaks_trans","text":"","code":"breaks_trans(n = 10, trans)"},{"path":"https://qfes.github.io/rdeck/reference/breaks_trans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Breaks trans — breaks_trans","text":"n <int> size output vector. Ouput size least length-2 finite input. trans <scales::trans> invertible transformer.","code":""},{"path":"https://qfes.github.io/rdeck/reference/breaks_trans.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Breaks trans — breaks_trans","text":"Breaks generated transforming input range trans domain, generating regular sequence size n transformed range, inverting transform. input range must finite input domain trans domain. input finite, empty vector returned.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/breaks_trans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Breaks trans — breaks_trans","text":"","code":"breaks_trans(trans = scales::identity_trans())(-10:10) #>  [1] -10.000000  -7.777778  -5.555556  -3.333333  -1.111111   1.111111 #>  [7]   3.333333   5.555556   7.777778  10.000000 breaks_trans(trans = symlog_trans())(-10:10) #>  [1] -10.0000000  -5.4561274  -2.7892346  -1.2239801  -0.3052999   0.3052999 #>  [7]   1.2239801   2.7892346   5.4561274  10.0000000 breaks_trans(trans = power_trans())(-10:10) #>  [1] -10.0000000  -6.0493827  -3.0864198  -1.1111111  -0.1234568   0.1234568 #>  [7]   1.1111111   3.0864198   6.0493827  10.0000000 breaks_manual(c(-10, 0, 10))(-10:10) #> [1] -10   0  10 breaks_manual(-1:1 * 1e6)(NULL) #> [1]   -Inf -1e+06  0e+00  1e+06    Inf"},{"path":"https://qfes.github.io/rdeck/reference/color.html","id":null,"dir":"Reference","previous_headings":"","what":"Prop Type: Color — color","title":"Prop Type: Color — color","text":"Colours represented RGB RGBA hex strings. Example: #663399ff","code":""},{"path":"https://qfes.github.io/rdeck/reference/column_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Column Layer — column_layer","title":"Column Layer — column_layer","text":"Column Layer","code":""},{"path":"https://qfes.github.io/rdeck/reference/column_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Column Layer — column_layer","text":"","code":"add_column_layer(   rdeck,   ...,   id = uuid::UUIDgenerate(),   name = \"ColumnLayer\",   group_name = NULL,   data = NULL,   visible = TRUE,   pickable = FALSE,   opacity = 1,   wrap_longitude = FALSE,   position_format = \"XYZ\",   color_format = \"RGBA\",   auto_highlight = FALSE,   highlight_color = \"#00008080\",   disk_resolution = 20,   vertices = NULL,   radius = 1000,   angle = 0,   offset = c(0, 0),   coverage = 1,   elevation_scale = 1,   radius_units = \"meters\",   line_width_units = \"meters\",   line_width_scale = 1,   line_width_min_pixels = 0,   line_width_max_pixels = 9007199254740991,   extruded = FALSE,   wireframe = FALSE,   filled = TRUE,   stroked = FALSE,   get_position = position,   get_fill_color = \"#000000ff\",   get_line_color = \"#000000ff\",   get_line_width = 1,   get_elevation = 1000,   material = TRUE,   blending_mode = \"normal\",   visibility_toggle = TRUE,   tooltip = NULL )  update_column_layer(   rdeck,   ...,   id,   name = cur_value(),   group_name = cur_value(),   data = cur_value(),   visible = cur_value(),   pickable = cur_value(),   opacity = cur_value(),   wrap_longitude = cur_value(),   position_format = cur_value(),   color_format = cur_value(),   auto_highlight = cur_value(),   highlight_color = cur_value(),   disk_resolution = cur_value(),   vertices = cur_value(),   radius = cur_value(),   angle = cur_value(),   offset = cur_value(),   coverage = cur_value(),   elevation_scale = cur_value(),   radius_units = cur_value(),   line_width_units = cur_value(),   line_width_scale = cur_value(),   line_width_min_pixels = cur_value(),   line_width_max_pixels = cur_value(),   extruded = cur_value(),   wireframe = cur_value(),   filled = cur_value(),   stroked = cur_value(),   get_position = cur_value(),   get_fill_color = cur_value(),   get_line_color = cur_value(),   get_line_width = cur_value(),   get_elevation = cur_value(),   material = cur_value(),   blending_mode = cur_value(),   visibility_toggle = cur_value(),   tooltip = cur_value() )"},{"path":"https://qfes.github.io/rdeck/reference/column_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Column Layer — column_layer","text":"rdeck <rdeck | rdeck_proxy> rdeck map instance. ... Additional parameters forwarded deck.gl javascript without validation processing. dots must named camelCased serialised. warning raised dots used, warning class rdeck_dots_nonempty. id <string> layer's identifier must unique among layers type map. Defaults uuid::UUIDgenerate(), explicitly defined updatable layers shiny application. name <string> Identifies layer tooltips legends. need unique, brief. Defaults deck.gl class name layer. group_name <string> Defines group layer belongs . Currently effective layer selector, visibility_toggle = TRUE. data <data.frame | sf | string> layer's data. Data frames sf objects contain columns referenced layer's accessors. Strings interpreted URL data retrieved dynamically browser. visible <boolean> Determines whether layer visible ; also determines whether legend elements layer displayed. pickable <boolean> Determines layer responds pointer / touch events. opacity <number> Determines layer's opacity. wrap_longitude <boolean> Normalises geometry longitudes. position_format <\"XY\" | \"XYZ\"> Determines whether coordinate two (XY) three (XYZ) elements. color_format <\"RGB\" | \"RGBA\"> Determines whether alpha channel colours ignored accessors, making colours opaque. auto_highlight <boolean> TRUE, current object hovered cursor highlighted highlight_color. highlight_color <accessor | scale | color> auto_highlight pickable enabled, highlight_color determines colour currently highlighted object. single colour value supplied, colour used highlight objects layer. Per-object highlighting achieved colour scale, tidy-eval column colours. disk_resolution <number> number sides render disk . disk regular polygon fits inside given radius. higher resolution yield smoother look close-, also need resources render. vertices matrix Replace default geometry (regular polygon fits inside unit circle) custom one. length array must least disk_resolution. vertex row c(x, y) offset instance position, relative radius. radius <number> radius column metres. angle <number> disk rotation, counter-clockwise radians. offset <number> disk offset position, relative radius. coverage <number> Radius multiplier, 0 - 1. radius disk calculated coverage * radius. elevation_scale <number> elevation multiplier. radius_units <\"pixels\" | \"common\" | \"meters\"> units point radius. line_width_units <\"pixels\" | \"common\" | \"meters\"> units outline width. Applied extruded == FALSE stroked == TRUE. line_width_scale <number> line width multiplier. line_width_min_pixels <number> minimum line width pixels. line_width_max_pixels <number> maximum line width pixels. extruded <boolean> TRUE, extrude objects along z-axis; FALSE, objects flat. wireframe <boolean> TRUE extruded == TRUE, draw line wireframe object. outline horizontal lines closing top bottom polygons vertical lines vertex polygon. filled <boolean> TRUE, draw filled area point. stroked <boolean> TRUE, draw outline around object. get_position <accessor> position geometry column, either sfc_POINT sfc_MULTIPOINT column CRS EPSG:4326. Supports tidy-eval. get_fill_color <accessor | scale | color> fill colour object. Accepts single colour value, colour scale, tidy-eval column colours. get_line_color <accessor | scale | color> line colour object. Accepts single colour value, colour scale, tidy-eval column colours. get_line_width <accessor | scale | number> outline object units specified line_width_units. Accepts single numeric value, numeric scale, tidy-eval column numbers. get_elevation <accessor | scale | number> elevation extrude object z-axis. Height units metres. Accepts single numeric value, numeric scale, tidy-eval column numbers. material <boolean> blending_mode <\"normal\" | \"additive\" | \"subtractive\"> Sets blending mode. Blending modes: normal: Normal blending alter colours overlapping objects. additive: Additive blending adds colours overlapping objects. Useful highlighting dot density dark maps. subtractive: Subtractive blending darkens overlapping objects. Useful highlighting dot density light maps. visibility_toggle <boolean> Whether layer appear layer selector. tooltip <tooltip> Defines columns (order) displayed layer tooltip, pickable == TRUE. Supports tidy-select data data.frame. sfc columns always removed.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/contour_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Contour Layer — contour_layer","title":"Contour Layer — contour_layer","text":"Contour Layer","code":""},{"path":"https://qfes.github.io/rdeck/reference/contour_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contour Layer — contour_layer","text":"","code":"add_contour_layer(   rdeck,   ...,   id = uuid::UUIDgenerate(),   name = \"ContourLayer\",   group_name = NULL,   data = NULL,   visible = TRUE,   pickable = FALSE,   opacity = 1,   wrap_longitude = FALSE,   position_format = \"XYZ\",   color_format = \"RGBA\",   auto_highlight = FALSE,   highlight_color = \"#00008080\",   cell_size = 1000,   get_position = position,   get_weight = 1,   gpu_aggregation = TRUE,   aggregation = \"SUM\",   contours = c(list(threshold = 1)),   z_offset = 0.005,   blending_mode = \"normal\",   visibility_toggle = TRUE )  update_contour_layer(   rdeck,   ...,   id,   name = cur_value(),   group_name = cur_value(),   data = cur_value(),   visible = cur_value(),   pickable = cur_value(),   opacity = cur_value(),   wrap_longitude = cur_value(),   position_format = cur_value(),   color_format = cur_value(),   auto_highlight = cur_value(),   highlight_color = cur_value(),   cell_size = cur_value(),   get_position = cur_value(),   get_weight = cur_value(),   gpu_aggregation = cur_value(),   aggregation = cur_value(),   contours = cur_value(),   z_offset = cur_value(),   blending_mode = cur_value(),   visibility_toggle = cur_value() )"},{"path":"https://qfes.github.io/rdeck/reference/contour_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Contour Layer — contour_layer","text":"rdeck <rdeck | rdeck_proxy> rdeck map instance. ... Additional parameters forwarded deck.gl javascript without validation processing. dots must named camelCased serialised. warning raised dots used, warning class rdeck_dots_nonempty. id <string> layer's identifier must unique among layers type map. Defaults uuid::UUIDgenerate(), explicitly defined updatable layers shiny application. name <string> Identifies layer tooltips legends. need unique, brief. Defaults deck.gl class name layer. group_name <string> Defines group layer belongs . Currently effective layer selector, visibility_toggle = TRUE. data <data.frame | sf | string> layer's data. Data frames sf objects contain columns referenced layer's accessors. Strings interpreted URL data retrieved dynamically browser. visible <boolean> Determines whether layer visible ; also determines whether legend elements layer displayed. pickable <boolean> Determines layer responds pointer / touch events. opacity <number> Determines layer's opacity. wrap_longitude <boolean> Normalises geometry longitudes. position_format <\"XY\" | \"XYZ\"> Determines whether coordinate two (XY) three (XYZ) elements. color_format <\"RGB\" | \"RGBA\"> Determines whether alpha channel colours ignored accessors, making colours opaque. auto_highlight <boolean> TRUE, current object hovered cursor highlighted highlight_color. highlight_color <accessor | scale | color> auto_highlight pickable enabled, highlight_color determines colour currently highlighted object. single colour value supplied, colour used highlight objects layer. Per-object highlighting achieved colour scale, tidy-eval column colours. cell_size <number> size cell metres. get_position <accessor> position geometry column, either sfc_POINT sfc_MULTIPOINT column CRS EPSG:4326. Supports tidy-eval. get_weight <accessor | scale | number> weight object. Accepts single numeric value, numeric scale, tidy-eval column numbers. gpu_aggregation <boolean> TRUE, aggregation performed GPU supported. Requires WebGL2. aggregation <\"SUM\" | \"MEAN\" | \"MIN\" | \"MAX\"> Defines aggregation function. contours array z_offset <number> small z offset added vertex contour (isoline isoband). Needed control layout contours. See deck.gl contours blending_mode <\"normal\" | \"additive\" | \"subtractive\"> Sets blending mode. Blending modes: normal: Normal blending alter colours overlapping objects. additive: Additive blending adds colours overlapping objects. Useful highlighting dot density dark maps. subtractive: Subtractive blending darkens overlapping objects. Useful highlighting dot density light maps. visibility_toggle <boolean> Whether layer appear layer selector.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/cpu_grid_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"CPU Grid Layer — cpu_grid_layer","title":"CPU Grid Layer — cpu_grid_layer","text":"CPU Grid Layer","code":""},{"path":"https://qfes.github.io/rdeck/reference/cpu_grid_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CPU Grid Layer — cpu_grid_layer","text":"","code":"add_cpu_grid_layer(   rdeck,   ...,   id = uuid::UUIDgenerate(),   name = \"CPUGridLayer\",   group_name = NULL,   data = NULL,   visible = TRUE,   pickable = FALSE,   opacity = 1,   wrap_longitude = FALSE,   position_format = \"XYZ\",   color_format = \"RGBA\",   auto_highlight = FALSE,   highlight_color = \"#00008080\",   color_domain = NULL,   color_range = c(\"#ffffb2\", \"#fed976\", \"#feb24c\", \"#fd8d3c\", \"#f03b20\", \"#bd0026\"),   get_color_value = NULL,   get_color_weight = 1,   color_aggregation = \"SUM\",   lower_percentile = 0,   upper_percentile = 100,   color_scale_type = \"quantize\",   elevation_domain = NULL,   elevation_range = c(0, 1000),   get_elevation_value = NULL,   get_elevation_weight = 1,   elevation_aggregation = \"SUM\",   elevation_lower_percentile = 0,   elevation_upper_percentile = 100,   elevation_scale = 1,   elevation_scale_type = \"linear\",   cell_size = 1000,   coverage = 1,   get_position = position,   extruded = FALSE,   material = TRUE,   blending_mode = \"normal\",   visibility_toggle = TRUE )  update_cpu_grid_layer(   rdeck,   ...,   id,   name = cur_value(),   group_name = cur_value(),   data = cur_value(),   visible = cur_value(),   pickable = cur_value(),   opacity = cur_value(),   wrap_longitude = cur_value(),   position_format = cur_value(),   color_format = cur_value(),   auto_highlight = cur_value(),   highlight_color = cur_value(),   color_domain = cur_value(),   color_range = cur_value(),   get_color_value = cur_value(),   get_color_weight = cur_value(),   color_aggregation = cur_value(),   lower_percentile = cur_value(),   upper_percentile = cur_value(),   color_scale_type = cur_value(),   elevation_domain = cur_value(),   elevation_range = cur_value(),   get_elevation_value = cur_value(),   get_elevation_weight = cur_value(),   elevation_aggregation = cur_value(),   elevation_lower_percentile = cur_value(),   elevation_upper_percentile = cur_value(),   elevation_scale = cur_value(),   elevation_scale_type = cur_value(),   cell_size = cur_value(),   coverage = cur_value(),   get_position = cur_value(),   extruded = cur_value(),   material = cur_value(),   blending_mode = cur_value(),   visibility_toggle = cur_value() )"},{"path":"https://qfes.github.io/rdeck/reference/cpu_grid_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CPU Grid Layer — cpu_grid_layer","text":"rdeck <rdeck | rdeck_proxy> rdeck map instance. ... Additional parameters forwarded deck.gl javascript without validation processing. dots must named camelCased serialised. warning raised dots used, warning class rdeck_dots_nonempty. id <string> layer's identifier must unique among layers type map. Defaults uuid::UUIDgenerate(), explicitly defined updatable layers shiny application. name <string> Identifies layer tooltips legends. need unique, brief. Defaults deck.gl class name layer. group_name <string> Defines group layer belongs . Currently effective layer selector, visibility_toggle = TRUE. data <data.frame | sf | string> layer's data. Data frames sf objects contain columns referenced layer's accessors. Strings interpreted URL data retrieved dynamically browser. visible <boolean> Determines whether layer visible ; also determines whether legend elements layer displayed. pickable <boolean> Determines layer responds pointer / touch events. opacity <number> Determines layer's opacity. wrap_longitude <boolean> Normalises geometry longitudes. position_format <\"XY\" | \"XYZ\"> Determines whether coordinate two (XY) three (XYZ) elements. color_format <\"RGB\" | \"RGBA\"> Determines whether alpha channel colours ignored accessors, making colours opaque. auto_highlight <boolean> TRUE, current object hovered cursor highlighted highlight_color. highlight_color <accessor | scale | color> auto_highlight pickable enabled, highlight_color determines colour currently highlighted object. single colour value supplied, colour used highlight objects layer. Per-object highlighting achieved colour scale, tidy-eval column colours. color_domain <number> colour scale domain, default set range aggregated weights bin. color_range <color> colour palette. color_domain divided length(color_range) equal segments, mapped one color color_range. get_color_value <JS> data objects aggregated bins, accessor called bin get value colour based . supplied, override effect get_color_weight color_aggregation props. See deck.gl docs details. get_color_weight <accessor | scale | number> weight object used calculate colour value bin. Accepts single numeric value, numeric scale, tidy-eval column numbers. color_aggregation <\"SUM\" | \"MEAN\" | \"MIN\" | \"MAX\">  Operation used aggregate data values/weights calculate bin's colour. lower_percentile <number> 0 100. Filter bins re-calculate colour lower_percentile. Cells value < lower_percentile hidden. upper_percentile <number> 0 100. Filter bins re-calculate colour upper_percentile. Cells value < upper_percentile hidden. color_scale_type <\"quantize\" | \"linear\" | \"quantile\" | \"ordinal\"> scaling function used determine colour grid cell. elevation_domain <number> elevation scale input domain. Defaults range aggregated weights bin. elevation_range <number> elevation scale output range. get_elevation_value <JS> data objects aggregated bins, accessor called bin get value elevation based . supplied, override effect get_elevation_weight elevation_aggregation props. See deck.gl docs details. get_elevation_weight <accessor | scale | `numeric> weight object used calculate elevation value bin. Accepts single numeric value, numeric scale, tidy-eval column numbers. elevation_aggregation <\"SUM\" | \"MEAN\" | \"MIN\" | \"MAX\"> Operation used aggregate data values/weights calculate bin's elevation value. elevation_lower_percentile <number> 0 100. Filter bins re-calculate elevation elevation_lower_percentile. Cells value < elevation_lower_percentile hidden. elevation_upper_percentile <number> 0 100. Filter bins re-calculate elevation elevation_upper_percentile. Cells value < elevation_upper_percentile hidden. elevation_scale <number> elevation multiplier. elevation_scale_type <\"quantize\" | \"linear\" | \"quantile\" | \"ordinal\"> scaling function used determine elevation grid cell. cell_size <number> size cell metres. coverage <number> Radius multiplier, 0 - 1. radius disk calculated coverage * radius. get_position <accessor> position geometry column, either sfc_POINT sfc_MULTIPOINT column CRS EPSG:4326. Supports tidy-eval. extruded <boolean> TRUE, extrude objects along z-axis; FALSE, objects flat. material <boolean> blending_mode <\"normal\" | \"additive\" | \"subtractive\"> Sets blending mode. Blending modes: normal: Normal blending alter colours overlapping objects. additive: Additive blending adds colours overlapping objects. Useful highlighting dot density dark maps. subtractive: Subtractive blending darkens overlapping objects. Useful highlighting dot density light maps. visibility_toggle <boolean> Whether layer appear layer selector.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/cur_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Cur value — cur_value","title":"Cur value — cur_value","text":"sentinel object represents current value browser. Use value indicate map / layer property remain unchanged. Intended use shiny applications.","code":""},{"path":"https://qfes.github.io/rdeck/reference/cur_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cur value — cur_value","text":"","code":"cur_value()"},{"path":"https://qfes.github.io/rdeck/reference/cur_value.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cur value — cur_value","text":"","code":"if (FALSE) { rdeck_proxy(\"map\") %>%   set_layer_visibility(\"layer_id\", visible = cur_value(), visibility_toggle = TRUE) }"},{"path":"https://qfes.github.io/rdeck/reference/editor_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Polygon editor options — editor_options","title":"Polygon editor options — editor_options","text":"Options polygon editor","code":""},{"path":"https://qfes.github.io/rdeck/reference/editor_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Polygon editor options — editor_options","text":"","code":"editor_options(mode = cur_value(), features = cur_value())"},{"path":"https://qfes.github.io/rdeck/reference/editor_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Polygon editor options — editor_options","text":"mode <editor-mode> polygon editor mode. One : view: editor readonly mode select: select/unselect features modify: add/move/delete vertices transform: move/scale/rotate selected features point: draw points linestring: draw linestrings clicking vertex polygon: draw polygons clicking vertex lasso: freehand polygon draw click-dragging features <sf | sfc> Features initialise editor","code":""},{"path":"https://qfes.github.io/rdeck/reference/format_number.html","id":null,"dir":"Reference","previous_headings":"","what":"Format number — format_number","title":"Format number — format_number","text":"Format numeric integer values.","code":""},{"path":"https://qfes.github.io/rdeck/reference/format_number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format number — format_number","text":"","code":"format_number(tick, digits = 2)"},{"path":"https://qfes.github.io/rdeck/reference/format_number.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format number — format_number","text":"tick vector tick values digits number digits output","code":""},{"path":"https://qfes.github.io/rdeck/reference/geojson_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"GeoJson Layer — geojson_layer","title":"GeoJson Layer — geojson_layer","text":"GeoJson Layer","code":""},{"path":"https://qfes.github.io/rdeck/reference/geojson_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GeoJson Layer — geojson_layer","text":"","code":"add_geojson_layer(   rdeck,   ...,   id = uuid::UUIDgenerate(),   name = \"GeoJsonLayer\",   group_name = NULL,   data = NULL,   visible = TRUE,   pickable = FALSE,   opacity = 1,   wrap_longitude = FALSE,   position_format = \"XYZ\",   color_format = \"RGBA\",   auto_highlight = FALSE,   highlight_color = \"#00008080\",   filled = TRUE,   stroked = TRUE,   line_width_max_pixels = 9007199254740991,   line_width_min_pixels = 0,   line_width_scale = 1,   line_width_units = \"meters\",   point_radius_max_pixels = 9007199254740991,   point_radius_min_pixels = 0,   point_radius_scale = 1,   point_radius_units = \"meters\",   point_antialiasing = TRUE,   point_billboard = FALSE,   get_fill_color = \"#000000ff\",   get_line_color = \"#000000ff\",   get_line_width = 1,   get_point_radius = 1,   icon_atlas = NULL,   icon_mapping = list(),   icon_size_max_pixels = 9007199254740991,   icon_size_min_pixels = 0,   icon_size_scale = 1,   icon_size_units = \"pixels\",   icon_alpha_cutoff = 0.05,   icon_billboard = TRUE,   get_icon = icon,   get_icon_angle = 0,   get_icon_color = \"#000000ff\",   get_icon_pixel_offset = c(0, 0),   get_icon_size = 1,   text_size_max_pixels = 9007199254740991,   text_size_min_pixels = 0,   text_size_scale = 1,   text_size_units = \"pixels\",   text_background = FALSE,   text_background_padding = c(0, 0, 0, 0),   text_font_family = \"Roboto, Helvetica, Arial, san-serif\",   text_font_weight = \"normal\",   text_line_height = 1,   text_max_width = -1,   text_outline_color = \"#000000ff\",   text_outline_width = 0,   text_word_break = \"break-word\",   text_billboard = TRUE,   text_font_settings = list(),   get_text = text,   get_text_angle = 0,   get_text_color = \"#000000ff\",   get_text_pixel_offset = c(0, 0),   get_text_size = 32,   get_text_anchor = \"middle\",   get_text_alignment_baseline = \"center\",   get_text_background_color = \"#ffffffff\",   get_text_border_color = \"#000000ff\",   get_text_border_width = 0,   line_joint_rounded = FALSE,   line_cap_rounded = FALSE,   line_miter_limit = 4,   line_billboard = FALSE,   extruded = FALSE,   wireframe = FALSE,   elevation_scale = 1,   material = TRUE,   get_elevation = 1000,   point_type = \"circle\",   blending_mode = \"normal\",   visibility_toggle = TRUE,   tooltip = NULL )  update_geojson_layer(   rdeck,   ...,   id,   name = cur_value(),   group_name = cur_value(),   data = cur_value(),   visible = cur_value(),   pickable = cur_value(),   opacity = cur_value(),   wrap_longitude = cur_value(),   position_format = cur_value(),   color_format = cur_value(),   auto_highlight = cur_value(),   highlight_color = cur_value(),   filled = cur_value(),   stroked = cur_value(),   line_width_max_pixels = cur_value(),   line_width_min_pixels = cur_value(),   line_width_scale = cur_value(),   line_width_units = cur_value(),   point_radius_max_pixels = cur_value(),   point_radius_min_pixels = cur_value(),   point_radius_scale = cur_value(),   point_radius_units = cur_value(),   point_antialiasing = cur_value(),   point_billboard = cur_value(),   get_fill_color = cur_value(),   get_line_color = cur_value(),   get_line_width = cur_value(),   get_point_radius = cur_value(),   icon_atlas = cur_value(),   icon_mapping = cur_value(),   icon_size_max_pixels = cur_value(),   icon_size_min_pixels = cur_value(),   icon_size_scale = cur_value(),   icon_size_units = cur_value(),   icon_alpha_cutoff = cur_value(),   icon_billboard = cur_value(),   get_icon = cur_value(),   get_icon_angle = cur_value(),   get_icon_color = cur_value(),   get_icon_pixel_offset = cur_value(),   get_icon_size = cur_value(),   text_size_max_pixels = cur_value(),   text_size_min_pixels = cur_value(),   text_size_scale = cur_value(),   text_size_units = cur_value(),   text_background = cur_value(),   text_background_padding = cur_value(),   text_font_family = cur_value(),   text_font_weight = cur_value(),   text_line_height = cur_value(),   text_max_width = cur_value(),   text_outline_color = cur_value(),   text_outline_width = cur_value(),   text_word_break = cur_value(),   text_billboard = cur_value(),   text_font_settings = cur_value(),   get_text = cur_value(),   get_text_angle = cur_value(),   get_text_color = cur_value(),   get_text_pixel_offset = cur_value(),   get_text_size = cur_value(),   get_text_anchor = cur_value(),   get_text_alignment_baseline = cur_value(),   get_text_background_color = cur_value(),   get_text_border_color = cur_value(),   get_text_border_width = cur_value(),   line_joint_rounded = cur_value(),   line_cap_rounded = cur_value(),   line_miter_limit = cur_value(),   line_billboard = cur_value(),   extruded = cur_value(),   wireframe = cur_value(),   elevation_scale = cur_value(),   material = cur_value(),   get_elevation = cur_value(),   point_type = cur_value(),   blending_mode = cur_value(),   visibility_toggle = cur_value(),   tooltip = cur_value() )"},{"path":"https://qfes.github.io/rdeck/reference/geojson_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GeoJson Layer — geojson_layer","text":"rdeck <rdeck | rdeck_proxy> rdeck map instance. ... Additional parameters forwarded deck.gl javascript without validation processing. dots must named camelCased serialised. warning raised dots used, warning class rdeck_dots_nonempty. id <string> layer's identifier must unique among layers type map. Defaults uuid::UUIDgenerate(), explicitly defined updatable layers shiny application. name <string> Identifies layer tooltips legends. need unique, brief. Defaults deck.gl class name layer. group_name <string> Defines group layer belongs . Currently effective layer selector, visibility_toggle = TRUE. data <sf | string> layer's data. Data frames sf objects contain columns referenced layer's accessors. Strings interpreted URL geojson data retrieved dynamically browser. visible <boolean> Determines whether layer visible ; also determines whether legend elements layer displayed. pickable <boolean> Determines layer responds pointer / touch events. opacity <number> Determines layer's opacity. wrap_longitude <boolean> Normalises geometry longitudes. position_format <\"XY\" | \"XYZ\"> Determines whether coordinate two (XY) three (XYZ) elements. color_format <\"RGB\" | \"RGBA\"> Determines whether alpha channel colours ignored accessors, making colours opaque. auto_highlight <boolean> TRUE, current object hovered cursor highlighted highlight_color. highlight_color <accessor | scale | color> auto_highlight pickable enabled, highlight_color determines colour currently highlighted object. single colour value supplied, colour used highlight objects layer. Per-object highlighting achieved colour scale, tidy-eval column colours. filled <boolean> TRUE, draw filled area point. stroked <boolean> TRUE, draw outline around object. line_width_max_pixels <number> maximum line width pixels. line_width_min_pixels <number> minimum line width pixels. line_width_scale <number> line width multiplier. line_width_units <\"pixels\" | \"common\" | \"meters\"> units line width. point_radius_max_pixels <number> maximum radius pixels. point_radius_min_pixels <number> minimum radius pixels. point_radius_scale <number> radius multiplier points. point_radius_units <\"pixels\" | \"common\" | \"meters\"> units point radius. point_antialiasing <boolean> TRUE, circles rendered smoothed edges. point_billboard <boolean> TRUE, circles always face camera; FALSE circles face (z). get_fill_color <accessor | scale | color> fill colour object. Accepts single colour value, colour scale, tidy-eval column colours. get_line_color <accessor | scale | color> line colour object. Accepts single colour value, colour scale, tidy-eval column colours. get_line_width <accessor | scale | number> outline object units specified line_width_units. Accepts single numeric value, numeric scale, tidy-eval column numbers. get_point_radius <accessor | scale | number> radius point, units specified radius_units. Accepts single numeric value, numeric scale, tidy-eval column numbers. icon_atlas <string|array> image sprite containing raster icons. Must either string interpreted URL image, image bitmap. icon_mapping <string|list> image sprite index. Must either string interpreted URL json document, named-list icon descriptors. See https://github.com/visgl/deck.gl/blob/master/docs/api-reference/layers/icon-layer.md#iconmapping-objectstring-optional icon descriptor fields. icon_size_max_pixels <number> maximum icon size pixels. icon_size_min_pixels <number> minimum icon size pixels. icon_size_scale <number> icon size multiplier. icon_size_units <\"pixels\" | \"common\" | \"meters\"> units icon size specified get_icon_size. icon_alpha_cutoff <number> Discard icon pixels whose opacity threshold. discarded pixel create \"hole\" icon considered part object. icon_billboard <boolean> TRUE, icon always faces camera, otherwise faces (z). get_icon <accessor> name icon feature. Icon name must present icon_mapping. get_icon_angle <accessor | number> rotating angle icon degrees. Accepts single numeric value, tidy-eval column numbers. get_icon_color <accessor | scale | color> colour icon. Accepts single colour value, colour scale, tidy-eval column colours. get_icon_pixel_offset <accessor | number> pixel offset icon. Accepts single length-2 numeric vector, tidy-eval list column. get_icon_size <accessor | scale | number> size icon, units specified size_units. Accepts single numeric value, numeric scale, tidy-eval column numbers. text_size_max_pixels <number> maximum text label size pixels. text_size_min_pixels <number> minimum text label size pixels. text_size_scale <number> text label size multiplier. text_size_units <\"pixels\" | \"common\" | \"meters\"> units text label size, specified get_text_size. text_background <boolean> Whether render background text labels. text_background_padding <numeric> text background padding. Must array 2 4 numbers. text_font_family <string> Specifies prioritised list one font family names. See font-family. text_font_weight <\"normal\" | \"bold\" | 100:900> font weight. See font-weight text_line_height <number> unitless number multiplied get_size set line height. text_max_width <number> Used together text_word_break wrapping text. Specifies width limit break text multiple lines. text_outline_color <color> text outline colour. Requires text_font_settings$sdf = TRUE. text_outline_width <number> text outline width, relative font size. Requires text_font_settings$sdf = TRUE. text_word_break <\"break-word\" | \"break-\"> Requires valid text_max_width. text_billboard <boolean> TRUE, text label always faces camera, otherwise faces (z). text_font_settings <font_settings> Advanced options fine tuning appearance performance generated font_atlas. get_text <accessor> text value text label. Accepts tidy-eval character column labels. get_text_angle <accessor | number> rotating angle text label degrees. Accepts single numeric value, tidy-eval column numbers. get_text_color <accessor | scale | color> colour text label. Accepts single colour value, colour scale, tidy-eval column colours. get_text_pixel_offset <accessor | number> pixel offset text label. Accepts single length-2 numeric vector, tidy-eval list column. get_text_size <accessor | scale | number> font size text label, units specified text_size_units. Accepts single numeric value, numeric scale, tidy-eval column numbers. get_text_anchor <accessor | \"start\" | \"middle\" | \"end\"> text label anchor. May single value, tidy-eval character column. get_text_alignment_baseline <accessor | \"top\" | \"center\" | \"bottom\"> text label alignment baseline. May single value, tidy-eval character column. get_text_background_color <accessor | scale | color> text background colour, text_background = TRUE. Accepts single colour value, colour scale, tidy-eval column colours. get_text_border_color <accessor | scale | color> text background border colour, text_background = TRUE. Accepts single colour value, colour scale, tidy-eval column colours. get_text_border_width <accessor | scale | number> text background border width, text_background = TRUE. Accepts single numeric value, numeric scale, tidy-eval column numbers. line_joint_rounded <boolean> TRUE, draw round joints; else draw square joints. line_cap_rounded <boolean> TRUE, draw round caps; else draw square caps. line_miter_limit number line_billboard <boolean> TRUE, extrude path screen space (width always faces) camera; FALSE, width always faces (z). extruded <boolean> TRUE, extrude objects along z-axis; FALSE, objects flat. wireframe <boolean> TRUE extruded == TRUE, draw line wireframe object. outline horizontal lines closing top bottom polygons vertical lines vertex polygon. elevation_scale <number> elevation multiplier. material <boolean> get_elevation <accessor | scale | number> elevation extrude object z-axis. Height units metres. Accepts single numeric value, numeric scale, tidy-eval column numbers. point_type <\"circle\"|\"icon\"|\"text\"|combination> Determines render point multipoint features. May one : \"circle\" \"icon\" \"text\" combination, separated \"+\", e.g. \"circle+text\". blending_mode <\"normal\" | \"additive\" | \"subtractive\"> Sets blending mode. Blending modes: normal: Normal blending alter colours overlapping objects. additive: Additive blending adds colours overlapping objects. Useful highlighting dot density dark maps. subtractive: Subtractive blending darkens overlapping objects. Useful highlighting dot density light maps. visibility_toggle <boolean> Whether layer appear layer selector. tooltip <tooltip> Defines columns (order) displayed layer tooltip, pickable == TRUE. Supports tidy-select data data.frame. sfc columns always removed.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/get_event_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get event data — get_event_data","title":"Get event data — get_event_data","text":"Get event data","code":""},{"path":"https://qfes.github.io/rdeck/reference/get_event_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get event data — get_event_data","text":"","code":"get_event_data(rdeck, event_name, session = shiny::getDefaultReactiveDomain())"},{"path":"https://qfes.github.io/rdeck/reference/get_event_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get event data — get_event_data","text":"rdeck <rdeck_proxy | string> map, map id event_name <string> event name session <ShinySession> shiny session","code":""},{"path":"https://qfes.github.io/rdeck/reference/gpu_grid_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"GPU Grid Layer — gpu_grid_layer","title":"GPU Grid Layer — gpu_grid_layer","text":"GPU Grid Layer","code":""},{"path":"https://qfes.github.io/rdeck/reference/gpu_grid_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GPU Grid Layer — gpu_grid_layer","text":"","code":"add_gpu_grid_layer(   rdeck,   ...,   id = uuid::UUIDgenerate(),   name = \"GPUGridLayer\",   group_name = NULL,   data = NULL,   visible = TRUE,   pickable = FALSE,   opacity = 1,   wrap_longitude = FALSE,   position_format = \"XYZ\",   color_format = \"RGBA\",   auto_highlight = FALSE,   highlight_color = \"#00008080\",   color_domain = NULL,   color_range = c(\"#ffffb2\", \"#fed976\", \"#feb24c\", \"#fd8d3c\", \"#f03b20\", \"#bd0026\"),   get_color_weight = 1,   color_aggregation = \"SUM\",   elevation_domain = NULL,   elevation_range = c(0, 1000),   get_elevation_weight = 1,   elevation_aggregation = \"SUM\",   elevation_scale = 1,   cell_size = 1000,   coverage = 1,   get_position = position,   extruded = FALSE,   material = TRUE,   blending_mode = \"normal\",   visibility_toggle = TRUE )  update_gpu_grid_layer(   rdeck,   ...,   id,   name = cur_value(),   group_name = cur_value(),   data = cur_value(),   visible = cur_value(),   pickable = cur_value(),   opacity = cur_value(),   wrap_longitude = cur_value(),   position_format = cur_value(),   color_format = cur_value(),   auto_highlight = cur_value(),   highlight_color = cur_value(),   color_domain = cur_value(),   color_range = cur_value(),   get_color_weight = cur_value(),   color_aggregation = cur_value(),   elevation_domain = cur_value(),   elevation_range = cur_value(),   get_elevation_weight = cur_value(),   elevation_aggregation = cur_value(),   elevation_scale = cur_value(),   cell_size = cur_value(),   coverage = cur_value(),   get_position = cur_value(),   extruded = cur_value(),   material = cur_value(),   blending_mode = cur_value(),   visibility_toggle = cur_value() )"},{"path":"https://qfes.github.io/rdeck/reference/gpu_grid_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GPU Grid Layer — gpu_grid_layer","text":"rdeck <rdeck | rdeck_proxy> rdeck map instance. ... Additional parameters forwarded deck.gl javascript without validation processing. dots must named camelCased serialised. warning raised dots used, warning class rdeck_dots_nonempty. id <string> layer's identifier must unique among layers type map. Defaults uuid::UUIDgenerate(), explicitly defined updatable layers shiny application. name <string> Identifies layer tooltips legends. need unique, brief. Defaults deck.gl class name layer. group_name <string> Defines group layer belongs . Currently effective layer selector, visibility_toggle = TRUE. data <data.frame | sf | string> layer's data. Data frames sf objects contain columns referenced layer's accessors. Strings interpreted URL data retrieved dynamically browser. visible <boolean> Determines whether layer visible ; also determines whether legend elements layer displayed. pickable <boolean> Determines layer responds pointer / touch events. opacity <number> Determines layer's opacity. wrap_longitude <boolean> Normalises geometry longitudes. position_format <\"XY\" | \"XYZ\"> Determines whether coordinate two (XY) three (XYZ) elements. color_format <\"RGB\" | \"RGBA\"> Determines whether alpha channel colours ignored accessors, making colours opaque. auto_highlight <boolean> TRUE, current object hovered cursor highlighted highlight_color. highlight_color <accessor | scale | color> auto_highlight pickable enabled, highlight_color determines colour currently highlighted object. single colour value supplied, colour used highlight objects layer. Per-object highlighting achieved colour scale, tidy-eval column colours. color_domain <number> colour scale domain, default set range aggregated weights bin. color_range <color> colour palette. color_domain divided length(color_range) equal segments, mapped one color color_range. get_color_weight <accessor | scale | number> weight object used calculate colour value bin. Accepts single numeric value, numeric scale, tidy-eval column numbers. color_aggregation <\"SUM\" | \"MEAN\" | \"MIN\" | \"MAX\">  Operation used aggregate data values/weights calculate bin's colour. elevation_domain <number> elevation scale input domain. Defaults range aggregated weights bin. elevation_range <number> elevation scale output range. get_elevation_weight <accessor | scale | `numeric> weight object used calculate elevation value bin. Accepts single numeric value, numeric scale, tidy-eval column numbers. elevation_aggregation <\"SUM\" | \"MEAN\" | \"MIN\" | \"MAX\"> Operation used aggregate data values/weights calculate bin's elevation value. elevation_scale <number> elevation multiplier. cell_size <number> size cell metres. coverage <number> Radius multiplier, 0 - 1. radius disk calculated coverage * radius. get_position <accessor> position geometry column, either sfc_POINT sfc_MULTIPOINT column CRS EPSG:4326. Supports tidy-eval. extruded <boolean> TRUE, extrude objects along z-axis; FALSE, objects flat. material <boolean> blending_mode <\"normal\" | \"additive\" | \"subtractive\"> Sets blending mode. Blending modes: normal: Normal blending alter colours overlapping objects. additive: Additive blending adds colours overlapping objects. Useful highlighting dot density dark maps. subtractive: Subtractive blending darkens overlapping objects. Useful highlighting dot density light maps. visibility_toggle <boolean> Whether layer appear layer selector.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/great_circle_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Great Circle Layer — great_circle_layer","title":"Great Circle Layer — great_circle_layer","text":"Great Circle Layer","code":""},{"path":"https://qfes.github.io/rdeck/reference/great_circle_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Great Circle Layer — great_circle_layer","text":"","code":"add_great_circle_layer(   rdeck,   ...,   id = uuid::UUIDgenerate(),   name = \"GreatCircleLayer\",   group_name = NULL,   data = NULL,   visible = TRUE,   pickable = FALSE,   opacity = 1,   wrap_longitude = FALSE,   position_format = \"XYZ\",   color_format = \"RGBA\",   auto_highlight = FALSE,   highlight_color = \"#00008080\",   get_source_position = source_position,   get_target_position = target_position,   get_source_color = \"#000000ff\",   get_target_color = \"#000000ff\",   get_width = 1,   get_height = 0,   get_tilt = 0,   great_circle = TRUE,   width_units = \"pixels\",   width_scale = 1,   width_min_pixels = 0,   width_max_pixels = 9007199254740991,   blending_mode = \"normal\",   visibility_toggle = TRUE,   tooltip = NULL )  update_great_circle_layer(   rdeck,   ...,   id,   name = cur_value(),   group_name = cur_value(),   data = cur_value(),   visible = cur_value(),   pickable = cur_value(),   opacity = cur_value(),   wrap_longitude = cur_value(),   position_format = cur_value(),   color_format = cur_value(),   auto_highlight = cur_value(),   highlight_color = cur_value(),   get_source_position = cur_value(),   get_target_position = cur_value(),   get_source_color = cur_value(),   get_target_color = cur_value(),   get_width = cur_value(),   get_height = cur_value(),   get_tilt = cur_value(),   great_circle = cur_value(),   width_units = cur_value(),   width_scale = cur_value(),   width_min_pixels = cur_value(),   width_max_pixels = cur_value(),   blending_mode = cur_value(),   visibility_toggle = cur_value(),   tooltip = cur_value() )"},{"path":"https://qfes.github.io/rdeck/reference/great_circle_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Great Circle Layer — great_circle_layer","text":"rdeck <rdeck | rdeck_proxy> rdeck map instance. ... Additional parameters forwarded deck.gl javascript without validation processing. dots must named camelCased serialised. warning raised dots used, warning class rdeck_dots_nonempty. id <string> layer's identifier must unique among layers type map. Defaults uuid::UUIDgenerate(), explicitly defined updatable layers shiny application. name <string> Identifies layer tooltips legends. need unique, brief. Defaults deck.gl class name layer. group_name <string> Defines group layer belongs . Currently effective layer selector, visibility_toggle = TRUE. data <data.frame | sf | string> layer's data. Data frames sf objects contain columns referenced layer's accessors. Strings interpreted URL data retrieved dynamically browser. visible <boolean> Determines whether layer visible ; also determines whether legend elements layer displayed. pickable <boolean> Determines layer responds pointer / touch events. opacity <number> Determines layer's opacity. wrap_longitude <boolean> Normalises geometry longitudes. position_format <\"XY\" | \"XYZ\"> Determines whether coordinate two (XY) three (XYZ) elements. color_format <\"RGB\" | \"RGBA\"> Determines whether alpha channel colours ignored accessors, making colours opaque. auto_highlight <boolean> TRUE, current object hovered cursor highlighted highlight_color. highlight_color <accessor | scale | color> auto_highlight pickable enabled, highlight_color determines colour currently highlighted object. single colour value supplied, colour used highlight objects layer. Per-object highlighting achieved colour scale, tidy-eval column colours. get_source_position <accessor> source position geometry column, either sfc_POINT sfc_MULTIPOINT column CRS EPSG:4326. Supports tidy-eval. get_target_position <accessor> target position geometry column, either sfc_POINT sfc_MULTIPOINT column CRS EPSG:4326. Supports tidy-eval. get_source_color <accessor | scale | color> colour source end arc. Accepts single colour value, colour scale, tidy-eval column colours. get_target_color <accessor | scale | color> colour target end arc. Accepts single colour value, colour scale, tidy-eval column colours. get_width <accessor | scale | number> width object, units specified width_scale. Accepts single numeric value, numeric scale, tidy-eval column numbers. get_height <accessor | scale | number> multiplier layer layer height. Accepts single numeric value, numeric scale, tidy-eval column numbers. value 0 make layer flat. get_tilt <accessor | number> Tilts arcs specified number degrees (c(-90, 90)). Accepts single numeric value tidy-eval column numbers. great_circle <boolean> TRUE, create arc along shortest path earth surface. width_units <\"pixels\" | \"common\" | \"meters\"> units line_width. width_scale <number> scaling multiplier width line. width_min_pixels <number> minimum line width pixels. width_max_pixels <number> maximum line width pixels. blending_mode <\"normal\" | \"additive\" | \"subtractive\"> Sets blending mode. Blending modes: normal: Normal blending alter colours overlapping objects. additive: Additive blending adds colours overlapping objects. Useful highlighting dot density dark maps. subtractive: Subtractive blending darkens overlapping objects. Useful highlighting dot density light maps. visibility_toggle <boolean> Whether layer appear layer selector. tooltip <tooltip> Defines columns (order) displayed layer tooltip, pickable == TRUE. Supports tidy-select data data.frame. sfc columns always removed.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/grid_cell_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Grid Cell Layer — grid_cell_layer","title":"Grid Cell Layer — grid_cell_layer","text":"Grid Cell Layer","code":""},{"path":"https://qfes.github.io/rdeck/reference/grid_cell_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grid Cell Layer — grid_cell_layer","text":"","code":"add_grid_cell_layer(   rdeck,   ...,   id = uuid::UUIDgenerate(),   name = \"GridCellLayer\",   group_name = NULL,   data = NULL,   visible = TRUE,   pickable = FALSE,   opacity = 1,   wrap_longitude = FALSE,   position_format = \"XYZ\",   color_format = \"RGBA\",   auto_highlight = FALSE,   highlight_color = \"#00008080\",   disk_resolution = 20,   vertices = NULL,   radius = 1000,   angle = 0,   offset = c(1, 1),   coverage = 1,   elevation_scale = 1,   radius_units = \"meters\",   line_width_units = \"meters\",   line_width_scale = 1,   line_width_min_pixels = 0,   line_width_max_pixels = 9007199254740991,   extruded = FALSE,   wireframe = FALSE,   filled = TRUE,   stroked = FALSE,   get_position = position,   get_fill_color = \"#000000ff\",   get_line_color = \"#000000ff\",   get_line_width = 1,   get_elevation = 1000,   material = TRUE,   cell_size = 1000,   blending_mode = \"normal\",   visibility_toggle = TRUE,   tooltip = NULL )  update_grid_cell_layer(   rdeck,   ...,   id,   name = cur_value(),   group_name = cur_value(),   data = cur_value(),   visible = cur_value(),   pickable = cur_value(),   opacity = cur_value(),   wrap_longitude = cur_value(),   position_format = cur_value(),   color_format = cur_value(),   auto_highlight = cur_value(),   highlight_color = cur_value(),   disk_resolution = cur_value(),   vertices = cur_value(),   radius = cur_value(),   angle = cur_value(),   offset = cur_value(),   coverage = cur_value(),   elevation_scale = cur_value(),   radius_units = cur_value(),   line_width_units = cur_value(),   line_width_scale = cur_value(),   line_width_min_pixels = cur_value(),   line_width_max_pixels = cur_value(),   extruded = cur_value(),   wireframe = cur_value(),   filled = cur_value(),   stroked = cur_value(),   get_position = cur_value(),   get_fill_color = cur_value(),   get_line_color = cur_value(),   get_line_width = cur_value(),   get_elevation = cur_value(),   material = cur_value(),   cell_size = cur_value(),   blending_mode = cur_value(),   visibility_toggle = cur_value(),   tooltip = cur_value() )"},{"path":"https://qfes.github.io/rdeck/reference/grid_cell_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grid Cell Layer — grid_cell_layer","text":"rdeck <rdeck | rdeck_proxy> rdeck map instance. ... Additional parameters forwarded deck.gl javascript without validation processing. dots must named camelCased serialised. warning raised dots used, warning class rdeck_dots_nonempty. id <string> layer's identifier must unique among layers type map. Defaults uuid::UUIDgenerate(), explicitly defined updatable layers shiny application. name <string> Identifies layer tooltips legends. need unique, brief. Defaults deck.gl class name layer. group_name <string> Defines group layer belongs . Currently effective layer selector, visibility_toggle = TRUE. data <data.frame | sf | string> layer's data. Data frames sf objects contain columns referenced layer's accessors. Strings interpreted URL data retrieved dynamically browser. visible <boolean> Determines whether layer visible ; also determines whether legend elements layer displayed. pickable <boolean> Determines layer responds pointer / touch events. opacity <number> Determines layer's opacity. wrap_longitude <boolean> Normalises geometry longitudes. position_format <\"XY\" | \"XYZ\"> Determines whether coordinate two (XY) three (XYZ) elements. color_format <\"RGB\" | \"RGBA\"> Determines whether alpha channel colours ignored accessors, making colours opaque. auto_highlight <boolean> TRUE, current object hovered cursor highlighted highlight_color. highlight_color <accessor | scale | color> auto_highlight pickable enabled, highlight_color determines colour currently highlighted object. single colour value supplied, colour used highlight objects layer. Per-object highlighting achieved colour scale, tidy-eval column colours. disk_resolution <number> number sides render disk . disk regular polygon fits inside given radius. higher resolution yield smoother look close-, also need resources render. vertices matrix Replace default geometry (regular polygon fits inside unit circle) custom one. length array must least disk_resolution. vertex row c(x, y) offset instance position, relative radius. radius <number> radius object metres. angle <number> disk rotation, counter-clockwise radians. offset <number> disk offset position, relative radius. coverage <number> Radius multiplier, 0 - 1. radius disk calculated coverage * radius. elevation_scale <number> elevation multiplier. radius_units <\"pixels\" | \"common\" | \"meters\"> units point radius. line_width_units <\"pixels\" | \"common\" | \"meters\"> units line width. line_width_scale <number> line width multiplier. line_width_min_pixels <number> minimum line width pixels. line_width_max_pixels <number> maximum line width pixels. extruded <boolean> TRUE, extrude objects along z-axis; FALSE, objects flat. wireframe <boolean> TRUE extruded == TRUE, draw line wireframe object. outline horizontal lines closing top bottom polygons vertical lines vertex polygon. filled <boolean> TRUE, draw filled area point. stroked <boolean> TRUE, draw outline around object. get_position <accessor> position geometry column, either sfc_POINT sfc_MULTIPOINT column CRS EPSG:4326. Supports tidy-eval. get_fill_color <accessor | scale | color> fill colour object. Accepts single colour value, colour scale, tidy-eval column colours. get_line_color <accessor | scale | color> line colour object. Accepts single colour value, colour scale, tidy-eval column colours. get_line_width <accessor | scale | number> outline object units specified line_width_units. Accepts single numeric value, numeric scale, tidy-eval column numbers. get_elevation <accessor | scale | number> elevation extrude object z-axis. Height units metres. Accepts single numeric value, numeric scale, tidy-eval column numbers. material <boolean> cell_size <number> size cell metres. blending_mode <\"normal\" | \"additive\" | \"subtractive\"> Sets blending mode. Blending modes: normal: Normal blending alter colours overlapping objects. additive: Additive blending adds colours overlapping objects. Useful highlighting dot density dark maps. subtractive: Subtractive blending darkens overlapping objects. Useful highlighting dot density light maps. visibility_toggle <boolean> Whether layer appear layer selector. tooltip <tooltip> Defines columns (order) displayed layer tooltip, pickable == TRUE. Supports tidy-select data data.frame. sfc columns always removed.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/grid_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Grid Layer — grid_layer","title":"Grid Layer — grid_layer","text":"Grid Layer","code":""},{"path":"https://qfes.github.io/rdeck/reference/grid_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grid Layer — grid_layer","text":"","code":"add_grid_layer(   rdeck,   ...,   id = uuid::UUIDgenerate(),   name = \"GridLayer\",   group_name = NULL,   data = NULL,   visible = TRUE,   pickable = FALSE,   opacity = 1,   wrap_longitude = FALSE,   position_format = \"XYZ\",   color_format = \"RGBA\",   auto_highlight = FALSE,   highlight_color = \"#00008080\",   color_domain = NULL,   color_range = c(\"#ffffb2\", \"#fed976\", \"#feb24c\", \"#fd8d3c\", \"#f03b20\", \"#bd0026\"),   get_color_weight = 1,   color_aggregation = \"SUM\",   elevation_domain = NULL,   elevation_range = c(0, 1000),   get_elevation_weight = 1,   elevation_aggregation = \"SUM\",   elevation_scale = 1,   cell_size = 1000,   coverage = 1,   get_position = position,   extruded = FALSE,   material = TRUE,   get_color_value = NULL,   lower_percentile = 0,   upper_percentile = 100,   color_scale_type = \"quantize\",   get_elevation_value = NULL,   elevation_lower_percentile = 0,   elevation_upper_percentile = 100,   elevation_scale_type = \"linear\",   gpu_aggregation = FALSE,   blending_mode = \"normal\",   visibility_toggle = TRUE )  update_grid_layer(   rdeck,   ...,   id,   name = cur_value(),   group_name = cur_value(),   data = cur_value(),   visible = cur_value(),   pickable = cur_value(),   opacity = cur_value(),   wrap_longitude = cur_value(),   position_format = cur_value(),   color_format = cur_value(),   auto_highlight = cur_value(),   highlight_color = cur_value(),   color_domain = cur_value(),   color_range = cur_value(),   get_color_weight = cur_value(),   color_aggregation = cur_value(),   elevation_domain = cur_value(),   elevation_range = cur_value(),   get_elevation_weight = cur_value(),   elevation_aggregation = cur_value(),   elevation_scale = cur_value(),   cell_size = cur_value(),   coverage = cur_value(),   get_position = cur_value(),   extruded = cur_value(),   material = cur_value(),   get_color_value = cur_value(),   lower_percentile = cur_value(),   upper_percentile = cur_value(),   color_scale_type = cur_value(),   get_elevation_value = cur_value(),   elevation_lower_percentile = cur_value(),   elevation_upper_percentile = cur_value(),   elevation_scale_type = cur_value(),   gpu_aggregation = cur_value(),   blending_mode = cur_value(),   visibility_toggle = cur_value() )"},{"path":"https://qfes.github.io/rdeck/reference/grid_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grid Layer — grid_layer","text":"rdeck <rdeck | rdeck_proxy> rdeck map instance. ... Additional parameters forwarded deck.gl javascript without validation processing. dots must named camelCased serialised. warning raised dots used, warning class rdeck_dots_nonempty. id <string> layer's identifier must unique among layers type map. Defaults uuid::UUIDgenerate(), explicitly defined updatable layers shiny application. name <string> Identifies layer tooltips legends. need unique, brief. Defaults deck.gl class name layer. group_name <string> Defines group layer belongs . Currently effective layer selector, visibility_toggle = TRUE. data <data.frame | sf | string> layer's data. Data frames sf objects contain columns referenced layer's accessors. Strings interpreted URL data retrieved dynamically browser. visible <boolean> Determines whether layer visible ; also determines whether legend elements layer displayed. pickable <boolean> Determines layer responds pointer / touch events. opacity <number> Determines layer's opacity. wrap_longitude <boolean> Normalises geometry longitudes. position_format <\"XY\" | \"XYZ\"> Determines whether coordinate two (XY) three (XYZ) elements. color_format <\"RGB\" | \"RGBA\"> Determines whether alpha channel colours ignored accessors, making colours opaque. auto_highlight <boolean> TRUE, current object hovered cursor highlighted highlight_color. highlight_color <accessor | scale | color> auto_highlight pickable enabled, highlight_color determines colour currently highlighted object. single colour value supplied, colour used highlight objects layer. Per-object highlighting achieved colour scale, tidy-eval column colours. color_domain <number> colour scale domain, default set range aggregated weights bin. color_range <color> colour palette. color_domain divided length(color_range) equal segments, mapped one color color_range. get_color_weight <accessor | scale | number> weight object used calculate colour value bin. Accepts single numeric value, numeric scale, tidy-eval column numbers. color_aggregation <\"SUM\" | \"MEAN\" | \"MIN\" | \"MAX\">  Operation used aggregate data values/weights calculate bin's colour. elevation_domain <number> elevation scale input domain. Defaults range aggregated weights bin. elevation_range <number> elevation scale output range. get_elevation_weight <accessor | scale | `numeric> weight object used calculate elevation value bin. Accepts single numeric value, numeric scale, tidy-eval column numbers. elevation_aggregation <\"SUM\" | \"MEAN\" | \"MIN\" | \"MAX\"> Operation used aggregate data values/weights calculate bin's elevation value. elevation_scale <number> elevation multiplier. cell_size <number> size cell metres. coverage <number> Radius multiplier, 0 - 1. radius disk calculated coverage * radius. get_position <accessor> position geometry column, either sfc_POINT sfc_MULTIPOINT column CRS EPSG:4326. Supports tidy-eval. extruded <boolean> TRUE, extrude objects along z-axis; FALSE, objects flat. material <boolean> get_color_value <JS> data objects aggregated bins, accessor called bin get value colour based . supplied, override effect get_color_weight color_aggregation props. See deck.gl docs details. lower_percentile <number> 0 100. Filter bins re-calculate colour lower_percentile. Cells value < lower_percentile hidden. upper_percentile <number> 0 100. Filter bins re-calculate colour upper_percentile. Cells value < upper_percentile hidden. color_scale_type <\"quantize\" | \"linear\" | \"quantile\" | \"ordinal\"> scaling function used determine colour grid cell. get_elevation_value <JS> data objects aggregated bins, accessor called bin get value elevation based . supplied, override effect get_elevation_weight elevation_aggregation props. See deck.gl docs details. elevation_lower_percentile <number> 0 100. Filter bins re-calculate elevation elevation_lower_percentile. Cells value < elevation_lower_percentile hidden. elevation_upper_percentile <number> 0 100. Filter bins re-calculate elevation elevation_upper_percentile. Cells value < elevation_upper_percentile hidden. elevation_scale_type <\"quantize\" | \"linear\" | \"quantile\" | \"ordinal\"> scaling function used determine elevation grid cell. gpu_aggregation <boolean> TRUE, aggregation performed GPU supported. Requires WebGL2. blending_mode <\"normal\" | \"additive\" | \"subtractive\"> Sets blending mode. Blending modes: normal: Normal blending alter colours overlapping objects. additive: Additive blending adds colours overlapping objects. Useful highlighting dot density dark maps. subtractive: Subtractive blending darkens overlapping objects. Useful highlighting dot density light maps. visibility_toggle <boolean> Whether layer appear layer selector.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/h3_cluster_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"H3 Cluster Layer — h3_cluster_layer","title":"H3 Cluster Layer — h3_cluster_layer","text":"H3 Cluster Layer","code":""},{"path":"https://qfes.github.io/rdeck/reference/h3_cluster_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"H3 Cluster Layer — h3_cluster_layer","text":"","code":"add_h3_cluster_layer(   rdeck,   ...,   id = uuid::UUIDgenerate(),   name = \"H3ClusterLayer\",   group_name = NULL,   data = NULL,   visible = TRUE,   pickable = FALSE,   opacity = 1,   wrap_longitude = FALSE,   position_format = \"XYZ\",   color_format = \"RGBA\",   auto_highlight = FALSE,   highlight_color = \"#00008080\",   stroked = TRUE,   filled = TRUE,   extruded = FALSE,   elevation_scale = 1,   wireframe = FALSE,   line_width_units = \"meters\",   line_width_scale = 1,   line_width_min_pixels = 0,   line_width_max_pixels = 9007199254740991,   line_joint_rounded = FALSE,   line_miter_limit = 4,   get_fill_color = \"#000000ff\",   get_line_color = \"#000000ff\",   get_line_width = 1,   get_elevation = 1000,   material = TRUE,   get_hexagons = hexagons,   blending_mode = \"normal\",   visibility_toggle = TRUE,   tooltip = NULL )  update_h3_cluster_layer(   rdeck,   ...,   id,   name = cur_value(),   group_name = cur_value(),   data = cur_value(),   visible = cur_value(),   pickable = cur_value(),   opacity = cur_value(),   wrap_longitude = cur_value(),   position_format = cur_value(),   color_format = cur_value(),   auto_highlight = cur_value(),   highlight_color = cur_value(),   stroked = cur_value(),   filled = cur_value(),   extruded = cur_value(),   elevation_scale = cur_value(),   wireframe = cur_value(),   line_width_units = cur_value(),   line_width_scale = cur_value(),   line_width_min_pixels = cur_value(),   line_width_max_pixels = cur_value(),   line_joint_rounded = cur_value(),   line_miter_limit = cur_value(),   get_fill_color = cur_value(),   get_line_color = cur_value(),   get_line_width = cur_value(),   get_elevation = cur_value(),   material = cur_value(),   get_hexagons = cur_value(),   blending_mode = cur_value(),   visibility_toggle = cur_value(),   tooltip = cur_value() )"},{"path":"https://qfes.github.io/rdeck/reference/h3_cluster_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"H3 Cluster Layer — h3_cluster_layer","text":"rdeck <rdeck | rdeck_proxy> rdeck map instance. ... Additional parameters forwarded deck.gl javascript without validation processing. dots must named camelCased serialised. warning raised dots used, warning class rdeck_dots_nonempty. id <string> layer's identifier must unique among layers type map. Defaults uuid::UUIDgenerate(), explicitly defined updatable layers shiny application. name <string> Identifies layer tooltips legends. need unique, brief. Defaults deck.gl class name layer. group_name <string> Defines group layer belongs . Currently effective layer selector, visibility_toggle = TRUE. data <data.frame | sf | string> layer's data. Data frames sf objects contain columns referenced layer's accessors. Strings interpreted URL data retrieved dynamically browser. visible <boolean> Determines whether layer visible ; also determines whether legend elements layer displayed. pickable <boolean> Determines layer responds pointer / touch events. opacity <number> Determines layer's opacity. wrap_longitude <boolean> Normalises geometry longitudes. position_format <\"XY\" | \"XYZ\"> Determines whether coordinate two (XY) three (XYZ) elements. color_format <\"RGB\" | \"RGBA\"> Determines whether alpha channel colours ignored accessors, making colours opaque. auto_highlight <boolean> TRUE, current object hovered cursor highlighted highlight_color. highlight_color <accessor | scale | color> auto_highlight pickable enabled, highlight_color determines colour currently highlighted object. single colour value supplied, colour used highlight objects layer. Per-object highlighting achieved colour scale, tidy-eval column colours. stroked <boolean> TRUE, draw outline around object. filled <boolean> TRUE, draw filled area point. extruded <boolean> TRUE, extrude objects along z-axis; FALSE, objects flat. elevation_scale <number> elevation multiplier. wireframe <boolean> TRUE extruded == TRUE, draw line wireframe object. outline horizontal lines closing top bottom polygons vertical lines vertex polygon. line_width_units <\"pixels\" | \"common\" | \"meters\"> units line width. line_width_scale <number> line width multiplier. line_width_min_pixels <number> minimum line width pixels. line_width_max_pixels <number> maximum line width pixels. line_joint_rounded <boolean> line_miter_limit number get_fill_color <accessor | scale | color> fill colour object. Accepts single colour value, colour scale, tidy-eval column colours. get_line_color <accessor | scale | color> line colour object. Accepts single colour value, colour scale, tidy-eval column colours. get_line_width <accessor | scale | number> outline object units specified line_width_units. Accepts single numeric value, numeric scale, tidy-eval column numbers. get_elevation <accessor | scale | number> elevation extrude object z-axis. Height units metres. Accepts single numeric value, numeric scale, tidy-eval column numbers. material <boolean> get_hexagons <accessor> blending_mode <\"normal\" | \"additive\" | \"subtractive\"> Sets blending mode. Blending modes: normal: Normal blending alter colours overlapping objects. additive: Additive blending adds colours overlapping objects. Useful highlighting dot density dark maps. subtractive: Subtractive blending darkens overlapping objects. Useful highlighting dot density light maps. visibility_toggle <boolean> Whether layer appear layer selector. tooltip <tooltip> Defines columns (order) displayed layer tooltip, pickable == TRUE. Supports tidy-select data data.frame. sfc columns always removed.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/h3_hexagon_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"H3 Hexagon Layer — h3_hexagon_layer","title":"H3 Hexagon Layer — h3_hexagon_layer","text":"H3 Hexagon Layer","code":""},{"path":"https://qfes.github.io/rdeck/reference/h3_hexagon_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"H3 Hexagon Layer — h3_hexagon_layer","text":"","code":"add_h3_hexagon_layer(   rdeck,   ...,   id = uuid::UUIDgenerate(),   name = \"H3HexagonLayer\",   group_name = NULL,   data = NULL,   visible = TRUE,   pickable = FALSE,   opacity = 1,   wrap_longitude = FALSE,   position_format = \"XYZ\",   color_format = \"RGBA\",   auto_highlight = FALSE,   highlight_color = \"#00008080\",   stroked = TRUE,   filled = TRUE,   extruded = FALSE,   elevation_scale = 1,   wireframe = FALSE,   line_width_units = \"meters\",   line_width_scale = 1,   line_width_min_pixels = 0,   line_width_max_pixels = 9007199254740991,   line_joint_rounded = FALSE,   line_miter_limit = 4,   get_fill_color = \"#000000ff\",   get_line_color = \"#000000ff\",   get_line_width = 1,   get_elevation = 1000,   material = TRUE,   high_precision = \"auto\",   coverage = 1,   center_hexagon = NULL,   get_hexagon = hexagon,   blending_mode = \"normal\",   visibility_toggle = TRUE,   tooltip = NULL )  update_h3_hexagon_layer(   rdeck,   ...,   id,   name = cur_value(),   group_name = cur_value(),   data = cur_value(),   visible = cur_value(),   pickable = cur_value(),   opacity = cur_value(),   wrap_longitude = cur_value(),   position_format = cur_value(),   color_format = cur_value(),   auto_highlight = cur_value(),   highlight_color = cur_value(),   stroked = cur_value(),   filled = cur_value(),   extruded = cur_value(),   elevation_scale = cur_value(),   wireframe = cur_value(),   line_width_units = cur_value(),   line_width_scale = cur_value(),   line_width_min_pixels = cur_value(),   line_width_max_pixels = cur_value(),   line_joint_rounded = cur_value(),   line_miter_limit = cur_value(),   get_fill_color = cur_value(),   get_line_color = cur_value(),   get_line_width = cur_value(),   get_elevation = cur_value(),   material = cur_value(),   high_precision = cur_value(),   coverage = cur_value(),   center_hexagon = cur_value(),   get_hexagon = cur_value(),   blending_mode = cur_value(),   visibility_toggle = cur_value(),   tooltip = cur_value() )"},{"path":"https://qfes.github.io/rdeck/reference/h3_hexagon_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"H3 Hexagon Layer — h3_hexagon_layer","text":"rdeck <rdeck | rdeck_proxy> rdeck map instance. ... Additional parameters forwarded deck.gl javascript without validation processing. dots must named camelCased serialised. warning raised dots used, warning class rdeck_dots_nonempty. id <string> layer's identifier must unique among layers type map. Defaults uuid::UUIDgenerate(), explicitly defined updatable layers shiny application. name <string> Identifies layer tooltips legends. need unique, brief. Defaults deck.gl class name layer. group_name <string> Defines group layer belongs . Currently effective layer selector, visibility_toggle = TRUE. data <data.frame | sf | string> layer's data. Data frames sf objects contain columns referenced layer's accessors. Strings interpreted URL data retrieved dynamically browser. visible <boolean> Determines whether layer visible ; also determines whether legend elements layer displayed. pickable <boolean> Determines layer responds pointer / touch events. opacity <number> Determines layer's opacity. wrap_longitude <boolean> Normalises geometry longitudes. position_format <\"XY\" | \"XYZ\"> Determines whether coordinate two (XY) three (XYZ) elements. color_format <\"RGB\" | \"RGBA\"> Determines whether alpha channel colours ignored accessors, making colours opaque. auto_highlight <boolean> TRUE, current object hovered cursor highlighted highlight_color. highlight_color <accessor | scale | color> auto_highlight pickable enabled, highlight_color determines colour currently highlighted object. single colour value supplied, colour used highlight objects layer. Per-object highlighting achieved colour scale, tidy-eval column colours. stroked <boolean> TRUE, draw outline around object. filled <boolean> TRUE, draw filled area point. extruded <boolean> TRUE, extrude objects along z-axis; FALSE, objects flat. elevation_scale <number> elevation multiplier. wireframe <boolean> TRUE extruded == TRUE, draw line wireframe object. outline horizontal lines closing top bottom polygons vertical lines vertex polygon. line_width_units <\"pixels\" | \"common\" | \"meters\"> units line width. line_width_scale <number> line width multiplier. line_width_min_pixels <number> minimum line width pixels. line_width_max_pixels <number> maximum line width pixels. line_joint_rounded <boolean> line_miter_limit number get_fill_color <accessor | scale | color> fill colour object. Accepts single colour value, colour scale, tidy-eval column colours. get_line_color <accessor | scale | color> line colour object. Accepts single colour value, colour scale, tidy-eval column colours. get_line_width <accessor | scale | number> outline object units specified line_width_units. Accepts single numeric value, numeric scale, tidy-eval column numbers. get_elevation <accessor | scale | number> elevation extrude object z-axis. Height units metres. Accepts single numeric value, numeric scale, tidy-eval column numbers. material <boolean> high_precision <boolean> TRUE, draw hexagon polygon using hexagon's true geometry. FALSE, draw hexagon shape center_hexagon. High precision trades rendering performance geometry precision. High precision required (forcibly enabled) : Rendering hex resolutions range c(0, 5) Pentagons present data Multiple resolution hexes present data coverage <number> Radius multiplier, 0 - 1. radius disk calculated coverage * radius. center_hexagon <string> high_precision == FALSE, defines H3 hexagon used shape hexagons layer. Defaults hexagon centre viewport. get_hexagon <accessor> H3 hex token H3 hexagon. Accepts tidy-eval character column. blending_mode <\"normal\" | \"additive\" | \"subtractive\"> Sets blending mode. Blending modes: normal: Normal blending alter colours overlapping objects. additive: Additive blending adds colours overlapping objects. Useful highlighting dot density dark maps. subtractive: Subtractive blending darkens overlapping objects. Useful highlighting dot density light maps. visibility_toggle <boolean> Whether layer appear layer selector. tooltip <tooltip> Defines columns (order) displayed layer tooltip, pickable == TRUE. Supports tidy-select data data.frame. sfc columns always removed.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/heatmap_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Heatmap Layer — heatmap_layer","title":"Heatmap Layer — heatmap_layer","text":"Heatmap Layer","code":""},{"path":"https://qfes.github.io/rdeck/reference/heatmap_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heatmap Layer — heatmap_layer","text":"","code":"add_heatmap_layer(   rdeck,   ...,   id = uuid::UUIDgenerate(),   name = \"HeatmapLayer\",   group_name = NULL,   data = NULL,   visible = TRUE,   pickable = FALSE,   opacity = 1,   wrap_longitude = FALSE,   position_format = \"XYZ\",   color_format = \"RGBA\",   auto_highlight = FALSE,   highlight_color = \"#00008080\",   get_position = position,   get_weight = 1,   intensity = 1,   radius_pixels = 50,   color_range = c(\"#ffffb2\", \"#fed976\", \"#feb24c\", \"#fd8d3c\", \"#f03b20\", \"#bd0026\"),   threshold = 0.05,   color_domain = NULL,   aggregation = \"SUM\",   weights_texture_size = 2048,   debounce_timeout = 500,   blending_mode = \"normal\",   visibility_toggle = TRUE )  update_heatmap_layer(   rdeck,   ...,   id,   name = cur_value(),   group_name = cur_value(),   data = cur_value(),   visible = cur_value(),   pickable = cur_value(),   opacity = cur_value(),   wrap_longitude = cur_value(),   position_format = cur_value(),   color_format = cur_value(),   auto_highlight = cur_value(),   highlight_color = cur_value(),   get_position = cur_value(),   get_weight = cur_value(),   intensity = cur_value(),   radius_pixels = cur_value(),   color_range = cur_value(),   threshold = cur_value(),   color_domain = cur_value(),   aggregation = cur_value(),   weights_texture_size = cur_value(),   debounce_timeout = cur_value(),   blending_mode = cur_value(),   visibility_toggle = cur_value() )"},{"path":"https://qfes.github.io/rdeck/reference/heatmap_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heatmap Layer — heatmap_layer","text":"rdeck <rdeck | rdeck_proxy> rdeck map instance. ... Additional parameters forwarded deck.gl javascript without validation processing. dots must named camelCased serialised. warning raised dots used, warning class rdeck_dots_nonempty. id <string> layer's identifier must unique among layers type map. Defaults uuid::UUIDgenerate(), explicitly defined updatable layers shiny application. name <string> Identifies layer tooltips legends. need unique, brief. Defaults deck.gl class name layer. group_name <string> Defines group layer belongs . Currently effective layer selector, visibility_toggle = TRUE. data <data.frame | sf | string> layer's data. Data frames sf objects contain columns referenced layer's accessors. Strings interpreted URL data retrieved dynamically browser. visible <boolean> Determines whether layer visible ; also determines whether legend elements layer displayed. pickable <boolean> Determines layer responds pointer / touch events. opacity <number> Determines layer's opacity. wrap_longitude <boolean> Normalises geometry longitudes. position_format <\"XY\" | \"XYZ\"> Determines whether coordinate two (XY) three (XYZ) elements. color_format <\"RGB\" | \"RGBA\"> Determines whether alpha channel colours ignored accessors, making colours opaque. auto_highlight <boolean> TRUE, current object hovered cursor highlighted highlight_color. highlight_color <accessor | scale | color> auto_highlight pickable enabled, highlight_color determines colour currently highlighted object. single colour value supplied, colour used highlight objects layer. Per-object highlighting achieved colour scale, tidy-eval column colours. get_position <accessor> position geometry column, either sfc_POINT sfc_MULTIPOINT column CRS EPSG:4326. Supports tidy-eval. get_weight <accessor | scale | number> weight object. Accepts single numeric value, numeric scale, tidy-eval column numbers. intensity <number> Value multiplied total weight pixel obtain final weight. value > 1 biases output colour towards higher end color_range, value < 1 biases output towards lower end color_range. radius_pixels <number> radius circle pixels. color_range <color> colour palette. color_domain divided length(color_range) equal segments, mapped one color color_range. threshold <number> Larger threshold values creates smoother boundaries colour blobs, making pixels low weight values transparent. Ignored color_domain specified. color_domain <number> colour scale domain, default set range aggregated weights bin. aggregation <\"SUM\" | \"MEAN\" | \"MIN\" | \"MAX\"> Defines aggregation function. weights_texture_size <number> size weight texture. Smaller texture sizes can improve rendering performance, lead visible pixelation. debounce_timeout <number> Debounce interval (milliseconds) triggering aggregation. blending_mode <\"normal\" | \"additive\" | \"subtractive\"> Sets blending mode. Blending modes: normal: Normal blending alter colours overlapping objects. additive: Additive blending adds colours overlapping objects. Useful highlighting dot density dark maps. subtractive: Subtractive blending darkens overlapping objects. Useful highlighting dot density light maps. visibility_toggle <boolean> Whether layer appear layer selector.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/hexagon_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Hexagon Layer — hexagon_layer","title":"Hexagon Layer — hexagon_layer","text":"Hexagon Layer","code":""},{"path":"https://qfes.github.io/rdeck/reference/hexagon_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hexagon Layer — hexagon_layer","text":"","code":"add_hexagon_layer(   rdeck,   ...,   id = uuid::UUIDgenerate(),   name = \"HexagonLayer\",   group_name = NULL,   data = NULL,   visible = TRUE,   pickable = FALSE,   opacity = 1,   wrap_longitude = FALSE,   position_format = \"XYZ\",   color_format = \"RGBA\",   auto_highlight = FALSE,   highlight_color = \"#00008080\",   color_domain = NULL,   color_range = c(\"#ffffb2\", \"#fed976\", \"#feb24c\", \"#fd8d3c\", \"#f03b20\", \"#bd0026\"),   get_color_value = NULL,   get_color_weight = 1,   color_aggregation = \"SUM\",   lower_percentile = 0,   upper_percentile = 100,   color_scale_type = \"quantize\",   elevation_domain = NULL,   elevation_range = c(0, 1000),   get_elevation_value = NULL,   get_elevation_weight = 1,   elevation_aggregation = \"SUM\",   elevation_lower_percentile = 0,   elevation_upper_percentile = 100,   elevation_scale = 1,   elevation_scale_type = \"linear\",   radius = 1000,   coverage = 1,   extruded = FALSE,   get_position = position,   material = TRUE,   blending_mode = \"normal\",   visibility_toggle = TRUE )  update_hexagon_layer(   rdeck,   ...,   id,   name = cur_value(),   group_name = cur_value(),   data = cur_value(),   visible = cur_value(),   pickable = cur_value(),   opacity = cur_value(),   wrap_longitude = cur_value(),   position_format = cur_value(),   color_format = cur_value(),   auto_highlight = cur_value(),   highlight_color = cur_value(),   color_domain = cur_value(),   color_range = cur_value(),   get_color_value = cur_value(),   get_color_weight = cur_value(),   color_aggregation = cur_value(),   lower_percentile = cur_value(),   upper_percentile = cur_value(),   color_scale_type = cur_value(),   elevation_domain = cur_value(),   elevation_range = cur_value(),   get_elevation_value = cur_value(),   get_elevation_weight = cur_value(),   elevation_aggregation = cur_value(),   elevation_lower_percentile = cur_value(),   elevation_upper_percentile = cur_value(),   elevation_scale = cur_value(),   elevation_scale_type = cur_value(),   radius = cur_value(),   coverage = cur_value(),   extruded = cur_value(),   get_position = cur_value(),   material = cur_value(),   blending_mode = cur_value(),   visibility_toggle = cur_value() )"},{"path":"https://qfes.github.io/rdeck/reference/hexagon_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hexagon Layer — hexagon_layer","text":"rdeck <rdeck | rdeck_proxy> rdeck map instance. ... Additional parameters forwarded deck.gl javascript without validation processing. dots must named camelCased serialised. warning raised dots used, warning class rdeck_dots_nonempty. id <string> layer's identifier must unique among layers type map. Defaults uuid::UUIDgenerate(), explicitly defined updatable layers shiny application. name <string> Identifies layer tooltips legends. need unique, brief. Defaults deck.gl class name layer. group_name <string> Defines group layer belongs . Currently effective layer selector, visibility_toggle = TRUE. data <data.frame | sf | string> layer's data. Data frames sf objects contain columns referenced layer's accessors. Strings interpreted URL data retrieved dynamically browser. visible <boolean> Determines whether layer visible ; also determines whether legend elements layer displayed. pickable <boolean> Determines layer responds pointer / touch events. opacity <number> Determines layer's opacity. wrap_longitude <boolean> Normalises geometry longitudes. position_format <\"XY\" | \"XYZ\"> Determines whether coordinate two (XY) three (XYZ) elements. color_format <\"RGB\" | \"RGBA\"> Determines whether alpha channel colours ignored accessors, making colours opaque. auto_highlight <boolean> TRUE, current object hovered cursor highlighted highlight_color. highlight_color <accessor | scale | color> auto_highlight pickable enabled, highlight_color determines colour currently highlighted object. single colour value supplied, colour used highlight objects layer. Per-object highlighting achieved colour scale, tidy-eval column colours. color_domain <number> colour scale domain, default set range aggregated weights bin. color_range <color> colour palette. color_domain divided length(color_range) equal segments, mapped one color color_range. get_color_value <JS> data objects aggregated bins, accessor called bin get value colour based . supplied, override effect get_color_weight color_aggregation props. See deck.gl docs details. get_color_weight <accessor | scale | number> weight object used calculate colour value bin. Accepts single numeric value, numeric scale, tidy-eval column numbers. color_aggregation <\"SUM\" | \"MEAN\" | \"MIN\" | \"MAX\">  Operation used aggregate data values/weights calculate bin's colour. lower_percentile <number> 0 100. Filter bins re-calculate colour lower_percentile. Cells value < lower_percentile hidden. upper_percentile <number> 0 100. Filter bins re-calculate colour upper_percentile. Cells value < upper_percentile hidden. color_scale_type <\"quantize\" | \"linear\" | \"quantile\" | \"ordinal\"> scaling function used determine colour grid cell. elevation_domain <number> elevation scale input domain. Defaults range aggregated weights bin. elevation_range <number> elevation scale output range. get_elevation_value <JS> data objects aggregated bins, accessor called bin get value elevation based . supplied, override effect get_elevation_weight elevation_aggregation props. See deck.gl docs details. get_elevation_weight <accessor | scale | `numeric> weight object used calculate elevation value bin. Accepts single numeric value, numeric scale, tidy-eval column numbers. elevation_aggregation <\"SUM\" | \"MEAN\" | \"MIN\" | \"MAX\"> Operation used aggregate data values/weights calculate bin's elevation value. elevation_lower_percentile <number> 0 100. Filter bins re-calculate elevation elevation_lower_percentile. Cells value < elevation_lower_percentile hidden. elevation_upper_percentile <number> 0 100. Filter bins re-calculate elevation elevation_upper_percentile. Cells value < elevation_upper_percentile hidden. elevation_scale <number> elevation multiplier. elevation_scale_type <\"quantize\" | \"linear\" | \"quantile\" | \"ordinal\"> scaling function used determine elevation grid cell. radius <number> radius hexagon bin metres. coverage <number> Radius multiplier, 0 - 1. radius disk calculated coverage * radius. extruded <boolean> TRUE, extrude objects along z-axis; FALSE, objects flat. get_position <accessor> position geometry column, either sfc_POINT sfc_MULTIPOINT column CRS EPSG:4326. Supports tidy-eval. material <boolean> blending_mode <\"normal\" | \"additive\" | \"subtractive\"> Sets blending mode. Blending modes: normal: Normal blending alter colours overlapping objects. additive: Additive blending adds colours overlapping objects. Useful highlighting dot density dark maps. subtractive: Subtractive blending darkens overlapping objects. Useful highlighting dot density light maps. visibility_toggle <boolean> Whether layer appear layer selector.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/icon_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Icon Layer — icon_layer","title":"Icon Layer — icon_layer","text":"Icon Layer","code":""},{"path":"https://qfes.github.io/rdeck/reference/icon_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Icon Layer — icon_layer","text":"","code":"add_icon_layer(   rdeck,   ...,   id = uuid::UUIDgenerate(),   name = \"IconLayer\",   group_name = NULL,   data = NULL,   visible = TRUE,   pickable = FALSE,   opacity = 1,   wrap_longitude = FALSE,   position_format = \"XYZ\",   color_format = \"RGBA\",   auto_highlight = FALSE,   highlight_color = \"#00008080\",   icon_atlas = NULL,   icon_mapping = list(),   size_scale = 1,   billboard = TRUE,   size_units = \"pixels\",   size_min_pixels = 0,   size_max_pixels = 9007199254740991,   alpha_cutoff = 0.05,   get_position = position,   get_icon = icon,   get_color = \"#000000ff\",   get_size = 1,   get_angle = 0,   get_pixel_offset = c(0, 0),   blending_mode = \"normal\",   visibility_toggle = TRUE,   tooltip = NULL )  update_icon_layer(   rdeck,   ...,   id,   name = cur_value(),   group_name = cur_value(),   data = cur_value(),   visible = cur_value(),   pickable = cur_value(),   opacity = cur_value(),   wrap_longitude = cur_value(),   position_format = cur_value(),   color_format = cur_value(),   auto_highlight = cur_value(),   highlight_color = cur_value(),   icon_atlas = cur_value(),   icon_mapping = cur_value(),   size_scale = cur_value(),   billboard = cur_value(),   size_units = cur_value(),   size_min_pixels = cur_value(),   size_max_pixels = cur_value(),   alpha_cutoff = cur_value(),   get_position = cur_value(),   get_icon = cur_value(),   get_color = cur_value(),   get_size = cur_value(),   get_angle = cur_value(),   get_pixel_offset = cur_value(),   blending_mode = cur_value(),   visibility_toggle = cur_value(),   tooltip = cur_value() )"},{"path":"https://qfes.github.io/rdeck/reference/icon_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Icon Layer — icon_layer","text":"rdeck <rdeck | rdeck_proxy> rdeck map instance. ... Additional parameters forwarded deck.gl javascript without validation processing. dots must named camelCased serialised. warning raised dots used, warning class rdeck_dots_nonempty. id <string> layer's identifier must unique among layers type map. Defaults uuid::UUIDgenerate(), explicitly defined updatable layers shiny application. name <string> Identifies layer tooltips legends. need unique, brief. Defaults deck.gl class name layer. group_name <string> Defines group layer belongs . Currently effective layer selector, visibility_toggle = TRUE. data <data.frame | sf | string> layer's data. Data frames sf objects contain columns referenced layer's accessors. Strings interpreted URL data retrieved dynamically browser. visible <boolean> Determines whether layer visible ; also determines whether legend elements layer displayed. pickable <boolean> Determines layer responds pointer / touch events. opacity <number> Determines layer's opacity. wrap_longitude <boolean> Normalises geometry longitudes. position_format <\"XY\" | \"XYZ\"> Determines whether coordinate two (XY) three (XYZ) elements. color_format <\"RGB\" | \"RGBA\"> Determines whether alpha channel colours ignored accessors, making colours opaque. auto_highlight <boolean> TRUE, current object hovered cursor highlighted highlight_color. highlight_color <accessor | scale | color> auto_highlight pickable enabled, highlight_color determines colour currently highlighted object. single colour value supplied, colour used highlight objects layer. Per-object highlighting achieved colour scale, tidy-eval column colours. icon_atlas <string|array> image sprite containing raster icons. Must either string interpreted URL image, image bitmap. icon_mapping <string|list> image sprite index. Must either string interpreted URL json document, named-list icon descriptors. See https://github.com/visgl/deck.gl/blob/master/docs/api-reference/layers/icon-layer.md#iconmapping-objectstring-optional icon descriptor fields. size_scale <number> size multiplier. billboard <boolean> TRUE, icon always faces camera, otherwise faces (z). size_units <\"pixels\" | \"common\" | \"meters\"> units size specified get_size. size_min_pixels <number> minimum size pixels. size_max_pixels <number> maximum size pixels. alpha_cutoff <number> Discard pixels whose opacity threshold. discarded pixel create \"hole\" icon considered part object. get_position <accessor> position geometry column, either sfc_POINT sfc_MULTIPOINT column CRS EPSG:4326. Supports tidy-eval. get_icon <accessor> name icon feature. Icon name must present icon_mapping. get_color <accessor | scale | color> colour object. Accepts single colour value, colour scale, tidy-eval column colours. get_size <accessor | scale | number> size icon, units specified size_units. Accepts single numeric value, numeric scale, tidy-eval column numbers. get_angle <accessor | number> rotating angle icon degrees. Accepts single numeric value, tidy-eval column numbers. get_pixel_offset <accessor | number> pixel offset object. Accepts single length-2 numeric vector, tidy-eval list column. blending_mode <\"normal\" | \"additive\" | \"subtractive\"> Sets blending mode. Blending modes: normal: Normal blending alter colours overlapping objects. additive: Additive blending adds colours overlapping objects. Useful highlighting dot density dark maps. subtractive: Subtractive blending darkens overlapping objects. Useful highlighting dot density light maps. visibility_toggle <boolean> Whether layer appear layer selector. tooltip <tooltip> Defines columns (order) displayed layer tooltip, pickable == TRUE. Supports tidy-select data data.frame. sfc columns always removed.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/layers.html","id":null,"dir":"Reference","previous_headings":"","what":"Layers — layers","title":"Layers — layers","text":"Get map layers","code":""},{"path":"https://qfes.github.io/rdeck/reference/layers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layers — layers","text":"","code":"layers(rdeck)"},{"path":"https://qfes.github.io/rdeck/reference/layers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layers — layers","text":"rdeck rdeck instance","code":""},{"path":"https://qfes.github.io/rdeck/reference/line_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Line Layer — line_layer","title":"Line Layer — line_layer","text":"Line Layer","code":""},{"path":"https://qfes.github.io/rdeck/reference/line_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Line Layer — line_layer","text":"","code":"add_line_layer(   rdeck,   ...,   id = uuid::UUIDgenerate(),   name = \"LineLayer\",   group_name = NULL,   data = NULL,   visible = TRUE,   pickable = FALSE,   opacity = 1,   wrap_longitude = FALSE,   position_format = \"XYZ\",   color_format = \"RGBA\",   auto_highlight = FALSE,   highlight_color = \"#00008080\",   get_source_position = source_position,   get_target_position = target_position,   get_color = \"#000000ff\",   get_width = 1,   width_units = \"pixels\",   width_scale = 1,   width_min_pixels = 0,   width_max_pixels = 9007199254740991,   blending_mode = \"normal\",   visibility_toggle = TRUE,   tooltip = NULL )  update_line_layer(   rdeck,   ...,   id,   name = cur_value(),   group_name = cur_value(),   data = cur_value(),   visible = cur_value(),   pickable = cur_value(),   opacity = cur_value(),   wrap_longitude = cur_value(),   position_format = cur_value(),   color_format = cur_value(),   auto_highlight = cur_value(),   highlight_color = cur_value(),   get_source_position = cur_value(),   get_target_position = cur_value(),   get_color = cur_value(),   get_width = cur_value(),   width_units = cur_value(),   width_scale = cur_value(),   width_min_pixels = cur_value(),   width_max_pixels = cur_value(),   blending_mode = cur_value(),   visibility_toggle = cur_value(),   tooltip = cur_value() )"},{"path":"https://qfes.github.io/rdeck/reference/line_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Line Layer — line_layer","text":"rdeck <rdeck | rdeck_proxy> rdeck map instance. ... Additional parameters forwarded deck.gl javascript without validation processing. dots must named camelCased serialised. warning raised dots used, warning class rdeck_dots_nonempty. id <string> layer's identifier must unique among layers type map. Defaults uuid::UUIDgenerate(), explicitly defined updatable layers shiny application. name <string> Identifies layer tooltips legends. need unique, brief. Defaults deck.gl class name layer. group_name <string> Defines group layer belongs . Currently effective layer selector, visibility_toggle = TRUE. data <data.frame | sf | string> layer's data. Data frames sf objects contain columns referenced layer's accessors. Strings interpreted URL data retrieved dynamically browser. visible <boolean> Determines whether layer visible ; also determines whether legend elements layer displayed. pickable <boolean> Determines layer responds pointer / touch events. opacity <number> Determines layer's opacity. wrap_longitude <boolean> Normalises geometry longitudes. position_format <\"XY\" | \"XYZ\"> Determines whether coordinate two (XY) three (XYZ) elements. color_format <\"RGB\" | \"RGBA\"> Determines whether alpha channel colours ignored accessors, making colours opaque. auto_highlight <boolean> TRUE, current object hovered cursor highlighted highlight_color. highlight_color <accessor | scale | color> auto_highlight pickable enabled, highlight_color determines colour currently highlighted object. single colour value supplied, colour used highlight objects layer. Per-object highlighting achieved colour scale, tidy-eval column colours. get_source_position <accessor> source position geometry column, either sfc_POINT sfc_MULTIPOINT column CRS EPSG:4326. Supports tidy-eval. get_target_position <accessor> target position geometry column, either sfc_POINT sfc_MULTIPOINT column CRS EPSG:4326. Supports tidy-eval. get_color <accessor | scale | color> colour object. Accepts single colour value, colour scale, tidy-eval column colours. get_width <accessor | scale | number> width object, units specified width_scale. Accepts single numeric value, numeric scale, tidy-eval column numbers. width_units <\"pixels\" | \"common\" | \"meters\"> units line_width. width_scale <number> scaling multiplier width line. width_min_pixels <number> minimum line width pixels. width_max_pixels <number> maximum line width pixels. blending_mode <\"normal\" | \"additive\" | \"subtractive\"> Sets blending mode. Blending modes: normal: Normal blending alter colours overlapping objects. additive: Additive blending adds colours overlapping objects. Useful highlighting dot density dark maps. subtractive: Subtractive blending darkens overlapping objects. Useful highlighting dot density light maps. visibility_toggle <boolean> Whether layer appear layer selector. tooltip <tooltip> Defines columns (order) displayed layer tooltip, pickable == TRUE. Supports tidy-select data data.frame. sfc columns always removed.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/log_trans.html","id":null,"dir":"Reference","previous_headings":"","what":"Log transformation — log_trans","title":"Log transformation — log_trans","text":"Applies log transform input: y = log(abs(x), b), : x input vector b log base","code":""},{"path":"https://qfes.github.io/rdeck/reference/log_trans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log transformation — log_trans","text":"","code":"log_trans(base = exp(1))"},{"path":"https://qfes.github.io/rdeck/reference/log_trans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log transformation — log_trans","text":"base <number> log base","code":""},{"path":"https://qfes.github.io/rdeck/reference/log_trans.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log transformation — log_trans","text":"x negative, result multiplied -1. transform requires input range cross zero. Transforming input crosses 0 succeed give predictable output, inverse , due unsigned 0 (.e. -1 * log(1) == log(1)).","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/mapbox_access_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Mapbox access token — mapbox_access_token","title":"Mapbox access token — mapbox_access_token","text":"mapbox access token required rendering mapbox basemap (regardless tiles used) mapbox services (tiles). use basemap, need register mapbox account. Mapbox generous free tier. rdeck map rendered equates map load web.","code":""},{"path":"https://qfes.github.io/rdeck/reference/mapbox_access_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mapbox access token — mapbox_access_token","text":"","code":"mapbox_access_token()"},{"path":"https://qfes.github.io/rdeck/reference/mapbox_access_token.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mapbox access token — mapbox_access_token","text":"mapbox token read following locations (order): getOption(\"rdeck.mapbox_access_token\") Sys.getenv(\"MAPBOX_ACCESS_TOKEN\") Sys.getenv(\"MAPBOX_TOKEN\")","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/mvt_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"MVT Layer — mvt_layer","title":"MVT Layer — mvt_layer","text":"MVT Layer","code":""},{"path":"https://qfes.github.io/rdeck/reference/mvt_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MVT Layer — mvt_layer","text":"","code":"add_mvt_layer(   rdeck,   ...,   id = uuid::UUIDgenerate(),   name = \"MVTLayer\",   group_name = NULL,   data = NULL,   visible = TRUE,   pickable = FALSE,   opacity = 1,   wrap_longitude = FALSE,   position_format = \"XYZ\",   color_format = \"RGBA\",   auto_highlight = FALSE,   highlight_color = \"#00008080\",   get_tile_data = NULL,   extent = NULL,   tile_size = 512,   max_zoom = NULL,   min_zoom = 0,   max_cache_size = NULL,   max_cache_byte_size = NULL,   refinement_strategy = \"best-available\",   z_range = NULL,   max_requests = 6,   zoom_offset = 0,   filled = TRUE,   stroked = TRUE,   line_width_max_pixels = 9007199254740991,   line_width_min_pixels = 0,   line_width_scale = 1,   line_width_units = \"meters\",   point_radius_max_pixels = 9007199254740991,   point_radius_min_pixels = 0,   point_radius_scale = 1,   point_radius_units = \"meters\",   point_antialiasing = TRUE,   point_billboard = FALSE,   get_fill_color = \"#000000ff\",   get_line_color = \"#000000ff\",   get_line_width = 1,   get_point_radius = 1,   icon_atlas = NULL,   icon_mapping = list(),   icon_size_max_pixels = 9007199254740991,   icon_size_min_pixels = 0,   icon_size_scale = 1,   icon_size_units = \"pixels\",   icon_alpha_cutoff = 0.05,   icon_billboard = TRUE,   get_icon = icon,   get_icon_angle = 0,   get_icon_color = \"#000000ff\",   get_icon_pixel_offset = c(0, 0),   get_icon_size = 1,   text_size_max_pixels = 9007199254740991,   text_size_min_pixels = 0,   text_size_scale = 1,   text_size_units = \"pixels\",   text_background = FALSE,   text_background_padding = c(0, 0, 0, 0),   text_font_family = \"Roboto, Helvetica, Arial, san-serif\",   text_font_weight = \"normal\",   text_line_height = 1,   text_max_width = -1,   text_outline_color = \"#000000ff\",   text_outline_width = 0,   text_word_break = \"break-word\",   text_billboard = TRUE,   text_font_settings = list(),   get_text = text,   get_text_angle = 0,   get_text_color = \"#000000ff\",   get_text_pixel_offset = c(0, 0),   get_text_size = 32,   get_text_anchor = \"middle\",   get_text_alignment_baseline = \"center\",   get_text_background_color = \"#ffffffff\",   get_text_border_color = \"#000000ff\",   get_text_border_width = 0,   line_joint_rounded = FALSE,   line_cap_rounded = FALSE,   line_miter_limit = 4,   line_billboard = FALSE,   extruded = FALSE,   wireframe = FALSE,   elevation_scale = 1,   material = TRUE,   get_elevation = 1000,   point_type = \"circle\",   unique_id_property = \"\",   highlighted_feature_id = NULL,   binary = TRUE,   blending_mode = \"normal\",   visibility_toggle = TRUE,   tooltip = NULL )  update_mvt_layer(   rdeck,   ...,   id,   name = cur_value(),   group_name = cur_value(),   data = cur_value(),   visible = cur_value(),   pickable = cur_value(),   opacity = cur_value(),   wrap_longitude = cur_value(),   position_format = cur_value(),   color_format = cur_value(),   auto_highlight = cur_value(),   highlight_color = cur_value(),   get_tile_data = cur_value(),   extent = cur_value(),   tile_size = cur_value(),   max_zoom = cur_value(),   min_zoom = cur_value(),   max_cache_size = cur_value(),   max_cache_byte_size = cur_value(),   refinement_strategy = cur_value(),   z_range = cur_value(),   max_requests = cur_value(),   zoom_offset = cur_value(),   filled = cur_value(),   stroked = cur_value(),   line_width_max_pixels = cur_value(),   line_width_min_pixels = cur_value(),   line_width_scale = cur_value(),   line_width_units = cur_value(),   point_radius_max_pixels = cur_value(),   point_radius_min_pixels = cur_value(),   point_radius_scale = cur_value(),   point_radius_units = cur_value(),   point_antialiasing = cur_value(),   point_billboard = cur_value(),   get_fill_color = cur_value(),   get_line_color = cur_value(),   get_line_width = cur_value(),   get_point_radius = cur_value(),   icon_atlas = cur_value(),   icon_mapping = cur_value(),   icon_size_max_pixels = cur_value(),   icon_size_min_pixels = cur_value(),   icon_size_scale = cur_value(),   icon_size_units = cur_value(),   icon_alpha_cutoff = cur_value(),   icon_billboard = cur_value(),   get_icon = cur_value(),   get_icon_angle = cur_value(),   get_icon_color = cur_value(),   get_icon_pixel_offset = cur_value(),   get_icon_size = cur_value(),   text_size_max_pixels = cur_value(),   text_size_min_pixels = cur_value(),   text_size_scale = cur_value(),   text_size_units = cur_value(),   text_background = cur_value(),   text_background_padding = cur_value(),   text_font_family = cur_value(),   text_font_weight = cur_value(),   text_line_height = cur_value(),   text_max_width = cur_value(),   text_outline_color = cur_value(),   text_outline_width = cur_value(),   text_word_break = cur_value(),   text_billboard = cur_value(),   text_font_settings = cur_value(),   get_text = cur_value(),   get_text_angle = cur_value(),   get_text_color = cur_value(),   get_text_pixel_offset = cur_value(),   get_text_size = cur_value(),   get_text_anchor = cur_value(),   get_text_alignment_baseline = cur_value(),   get_text_background_color = cur_value(),   get_text_border_color = cur_value(),   get_text_border_width = cur_value(),   line_joint_rounded = cur_value(),   line_cap_rounded = cur_value(),   line_miter_limit = cur_value(),   line_billboard = cur_value(),   extruded = cur_value(),   wireframe = cur_value(),   elevation_scale = cur_value(),   material = cur_value(),   get_elevation = cur_value(),   point_type = cur_value(),   unique_id_property = cur_value(),   highlighted_feature_id = cur_value(),   binary = cur_value(),   blending_mode = cur_value(),   visibility_toggle = cur_value(),   tooltip = cur_value() )"},{"path":"https://qfes.github.io/rdeck/reference/mvt_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MVT Layer — mvt_layer","text":"rdeck <rdeck | rdeck_proxy> rdeck map instance. ... Additional parameters forwarded deck.gl javascript without validation processing. dots must named camelCased serialised. warning raised dots used, warning class rdeck_dots_nonempty. id <string> layer's identifier must unique among layers type map. Defaults uuid::UUIDgenerate(), explicitly defined updatable layers shiny application. name <string> Identifies layer tooltips legends. need unique, brief. Defaults deck.gl class name layer. group_name <string> Defines group layer belongs . Currently effective layer selector, visibility_toggle = TRUE. data <character | tile_json> Defines remote data layer. May take : tile_json() object string valid URL tilejson character vector tile url templates, containing placeholders tile coordinates: {z}/{x}/{y} visible <boolean> Determines whether layer visible ; also determines whether legend elements layer displayed. pickable <boolean> Determines layer responds pointer / touch events. opacity <number> Determines layer's opacity. wrap_longitude <boolean> Normalises geometry longitudes. position_format <\"XY\" | \"XYZ\"> Determines whether coordinate two (XY) three (XYZ) elements. color_format <\"RGB\" | \"RGBA\"> Determines whether alpha channel colours ignored accessors, making colours opaque. auto_highlight <boolean> TRUE, current object hovered cursor highlighted highlight_color. highlight_color <accessor | scale | color> auto_highlight pickable enabled, highlight_color determines colour currently highlighted object. single colour value supplied, colour used highlight objects layer. Per-object highlighting achieved colour scale, tidy-eval column colours. get_tile_data <JS> retrieves data tile. See deck.gl getTileData. extent <c(min_x, min_y, max_x, max_y)> Tiles bounding box rendered min_zoom, zoomed min_zoom. tile_size <number> power 2 pixel dimensions tile. max_zoom <number> Tiles zoom level shown. Defaults NULL. min_zoom <number> Tiles zoom level shown. Defaults 0. max_cache_size <number> Maximum number tiles can cached. Defaults 5x number tiles current viewport. max_cache_byte_size <number> Maximum memory used caching tiles. refinement_strategy <\"best-available\" | \"-overlap\" | \"never\"> tile layer refines visibility tiles. Defaults \"best-available\". z_range <c(min, max)> Array representing range heights tile. max_requests <number> Maximum number concurrent HTTP requests across specified tile provider domains. negative number supplied throttling occurs (HTTP/2 ). zoom_offset <int> offset changes zoom level tiles fetched. filled <boolean> TRUE, draw filled area point. stroked <boolean> TRUE, draw outline around object. line_width_max_pixels <number> maximum line width pixels. line_width_min_pixels <number> minimum line width pixels. line_width_scale <number> line width multiplier. line_width_units <\"pixels\" | \"common\" | \"meters\"> units line width. point_radius_max_pixels <number> maximum radius pixels. point_radius_min_pixels <number> minimum radius pixels. point_radius_scale <number> radius multiplier points. point_radius_units <\"pixels\" | \"common\" | \"meters\"> units point radius. point_antialiasing <boolean> TRUE, circles rendered smoothed edges. point_billboard <boolean> TRUE, circles always face camera; FALSE circles face (z). get_fill_color <accessor | scale | color> fill colour object. Accepts single colour value, colour scale, tidy-eval column colours. get_line_color <accessor | scale | color> line colour object. Accepts single colour value, colour scale, tidy-eval column colours. get_line_width <accessor | scale | number> outline object units specified line_width_units. Accepts single numeric value, numeric scale, tidy-eval column numbers. get_point_radius <accessor | scale | number> radius point, units specified radius_units. Accepts single numeric value, numeric scale, tidy-eval column numbers. icon_atlas <string|array> image sprite containing raster icons. Must either string interpreted URL image, image bitmap. icon_mapping <string|list> image sprite index. Must either string interpreted URL json document, named-list icon descriptors. See https://github.com/visgl/deck.gl/blob/master/docs/api-reference/layers/icon-layer.md#iconmapping-objectstring-optional icon descriptor fields. icon_size_max_pixels <number> maximum icon size pixels. icon_size_min_pixels <number> minimum icon size pixels. icon_size_scale <number> icon size multiplier. icon_size_units <\"pixels\" | \"common\" | \"meters\"> units icon size specified get_icon_size. icon_alpha_cutoff <number> Discard icon pixels whose opacity threshold. discarded pixel create \"hole\" icon considered part object. icon_billboard <boolean> TRUE, icon always faces camera, otherwise faces (z). get_icon <accessor> name icon feature. Icon name must present icon_mapping. get_icon_angle <accessor | number> rotating angle icon degrees. Accepts single numeric value, tidy-eval column numbers. get_icon_color <accessor | scale | color> colour icon. Accepts single colour value, colour scale, tidy-eval column colours. get_icon_pixel_offset <accessor | number> pixel offset icon. Accepts single length-2 numeric vector, tidy-eval list column. get_icon_size <accessor | scale | number> size icon, units specified size_units. Accepts single numeric value, numeric scale, tidy-eval column numbers. text_size_max_pixels <number> maximum text label size pixels. text_size_min_pixels <number> minimum text label size pixels. text_size_scale <number> text label size multiplier. text_size_units <\"pixels\" | \"common\" | \"meters\"> units text label size, specified get_text_size. text_background <boolean> Whether render background text labels. text_background_padding <numeric> text background padding. Must array 2 4 numbers. text_font_family <string> Specifies prioritised list one font family names. See font-family. text_font_weight <\"normal\" | \"bold\" | 100:900> font weight. See font-weight text_line_height <number> unitless number multiplied get_size set line height. text_max_width <number> Used together text_word_break wrapping text. Specifies width limit break text multiple lines. text_outline_color <color> text outline colour. Requires text_font_settings$sdf = TRUE. text_outline_width <number> text outline width, relative font size. Requires text_font_settings$sdf = TRUE. text_word_break <\"break-word\" | \"break-\"> Requires valid text_max_width. text_billboard <boolean> TRUE, text label always faces camera, otherwise faces (z). text_font_settings <font_settings> Advanced options fine tuning appearance performance generated font_atlas. get_text <accessor> text value text label. Accepts tidy-eval character column labels. get_text_angle <accessor | number> rotating angle text label degrees. Accepts single numeric value, tidy-eval column numbers. get_text_color <accessor | scale | color> colour text label. Accepts single colour value, colour scale, tidy-eval column colours. get_text_pixel_offset <accessor | number> pixel offset text label. Accepts single length-2 numeric vector, tidy-eval list column. get_text_size <accessor | scale | number> font size text label, units specified text_size_units. Accepts single numeric value, numeric scale, tidy-eval column numbers. get_text_anchor <accessor | \"start\" | \"middle\" | \"end\"> text label anchor. May single value, tidy-eval character column. get_text_alignment_baseline <accessor | \"top\" | \"center\" | \"bottom\"> text label alignment baseline. May single value, tidy-eval character column. get_text_background_color <accessor | scale | color> text background colour, text_background = TRUE. Accepts single colour value, colour scale, tidy-eval column colours. get_text_border_color <accessor | scale | color> text background border colour, text_background = TRUE. Accepts single colour value, colour scale, tidy-eval column colours. get_text_border_width <accessor | scale | number> text background border width, text_background = TRUE. Accepts single numeric value, numeric scale, tidy-eval column numbers. line_joint_rounded <boolean> line_cap_rounded <boolean> TRUE, draw round caps; else draw square caps. line_miter_limit number line_billboard <boolean> TRUE, extrude path screen space (width always faces) camera; FALSE, width always faces (z). extruded <boolean> TRUE, extrude objects along z-axis; FALSE, objects flat. wireframe <boolean> TRUE extruded == TRUE, draw line wireframe object. outline horizontal lines closing top bottom polygons vertical lines vertex polygon. elevation_scale <number> elevation multiplier. material <boolean> get_elevation <accessor | scale | number> elevation extrude object z-axis. Height units metres. Accepts single numeric value, numeric scale, tidy-eval column numbers. point_type <\"circle\"|\"icon\"|\"text\"|combination> Determines render point multipoint features. May one : \"circle\" \"icon\" \"text\" combination, separated \"+\", e.g. \"circle+text\". unique_id_property <string> Used highlighting features across tiles. Features separate tiles deemed feature supplied property name. value supplied, feature id used. highlighted_feature_id <number | string> provided, feature ID corresponding supplied value highlighted highlight_color. binary <boolean> Improves rendering performance removing tile serialisation deserialisation worker main thread. blending_mode <\"normal\" | \"additive\" | \"subtractive\"> Sets blending mode. Blending modes: normal: Normal blending alter colours overlapping objects. additive: Additive blending adds colours overlapping objects. Useful highlighting dot density dark maps. subtractive: Subtractive blending darkens overlapping objects. Useful highlighting dot density light maps. visibility_toggle <boolean> Whether layer appear layer selector. tooltip <tooltip> Defines columns (order) displayed layer tooltip, pickable == TRUE. Supports tidy-select data data.frame. sfc columns always removed.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/mvt_url.html","id":null,"dir":"Reference","previous_headings":"","what":"MVT URL — mvt_url","title":"MVT URL — mvt_url","text":"Please url tile_json() instead","code":""},{"path":"https://qfes.github.io/rdeck/reference/mvt_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MVT URL — mvt_url","text":"","code":"mvt_url(tileset_id)"},{"path":"https://qfes.github.io/rdeck/reference/mvt_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MVT URL — mvt_url","text":"tileset_id mapbox tileset identifier form: mapbox.mapbox-streets-v8, mapbox://mapbox.mapbox-streets-v8","code":""},{"path":"https://qfes.github.io/rdeck/reference/path_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Path Layer — path_layer","title":"Path Layer — path_layer","text":"Path Layer","code":""},{"path":"https://qfes.github.io/rdeck/reference/path_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Path Layer — path_layer","text":"","code":"add_path_layer(   rdeck,   ...,   id = uuid::UUIDgenerate(),   name = \"PathLayer\",   group_name = NULL,   data = NULL,   visible = TRUE,   pickable = FALSE,   opacity = 1,   wrap_longitude = FALSE,   position_format = \"XYZ\",   color_format = \"RGBA\",   auto_highlight = FALSE,   highlight_color = \"#00008080\",   width_units = \"meters\",   width_scale = 1,   width_min_pixels = 0,   width_max_pixels = 9007199254740991,   joint_rounded = FALSE,   cap_rounded = FALSE,   miter_limit = 4,   billboard = FALSE,   get_path = path,   get_color = \"#000000ff\",   get_width = 1,   blending_mode = \"normal\",   visibility_toggle = TRUE,   tooltip = NULL )  update_path_layer(   rdeck,   ...,   id,   name = cur_value(),   group_name = cur_value(),   data = cur_value(),   visible = cur_value(),   pickable = cur_value(),   opacity = cur_value(),   wrap_longitude = cur_value(),   position_format = cur_value(),   color_format = cur_value(),   auto_highlight = cur_value(),   highlight_color = cur_value(),   width_units = cur_value(),   width_scale = cur_value(),   width_min_pixels = cur_value(),   width_max_pixels = cur_value(),   joint_rounded = cur_value(),   cap_rounded = cur_value(),   miter_limit = cur_value(),   billboard = cur_value(),   get_path = cur_value(),   get_color = cur_value(),   get_width = cur_value(),   blending_mode = cur_value(),   visibility_toggle = cur_value(),   tooltip = cur_value() )"},{"path":"https://qfes.github.io/rdeck/reference/path_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Path Layer — path_layer","text":"rdeck <rdeck | rdeck_proxy> rdeck map instance. ... Additional parameters forwarded deck.gl javascript without validation processing. dots must named camelCased serialised. warning raised dots used, warning class rdeck_dots_nonempty. id <string> layer's identifier must unique among layers type map. Defaults uuid::UUIDgenerate(), explicitly defined updatable layers shiny application. name <string> Identifies layer tooltips legends. need unique, brief. Defaults deck.gl class name layer. group_name <string> Defines group layer belongs . Currently effective layer selector, visibility_toggle = TRUE. data <data.frame | sf | string> layer's data. Data frames sf objects contain columns referenced layer's accessors. Strings interpreted URL data retrieved dynamically browser. visible <boolean> Determines whether layer visible ; also determines whether legend elements layer displayed. pickable <boolean> Determines layer responds pointer / touch events. opacity <number> Determines layer's opacity. wrap_longitude <boolean> Normalises geometry longitudes. position_format <\"XY\" | \"XYZ\"> Determines whether coordinate two (XY) three (XYZ) elements. color_format <\"RGB\" | \"RGBA\"> Determines whether alpha channel colours ignored accessors, making colours opaque. auto_highlight <boolean> TRUE, current object hovered cursor highlighted highlight_color. highlight_color <accessor | scale | color> auto_highlight pickable enabled, highlight_color determines colour currently highlighted object. single colour value supplied, colour used highlight objects layer. Per-object highlighting achieved colour scale, tidy-eval column colours. width_units <\"pixels\" | \"common\" | \"meters\"> units line_width. width_scale <number> scaling multiplier width line. width_min_pixels <number> minimum line width pixels. width_max_pixels <number> maximum line width pixels. joint_rounded <boolean> TRUE, draw round joints; else draw square joints. cap_rounded <boolean> TRUE, draw round caps; else draw square caps. miter_limit <number> maximum extent joint ratio stroke width. applicable rounded == FALSE. billboard <boolean> TRUE, extrude path screen space (width always faces) camera; FALSE, width always faces (z). get_path <accessor> path geometry column, either sfc_LINESTRING sfc_MULTILINESTRING column CRS EPSG:4326. Supports tidy-eval. get_color <accessor | scale | color> colour object. Accepts single colour value, colour scale, tidy-eval column colours. get_width <accessor | scale | number> width object, units specified width_scale. Accepts single numeric value, numeric scale, tidy-eval column numbers. blending_mode <\"normal\" | \"additive\" | \"subtractive\"> Sets blending mode. Blending modes: normal: Normal blending alter colours overlapping objects. additive: Additive blending adds colours overlapping objects. Useful highlighting dot density dark maps. subtractive: Subtractive blending darkens overlapping objects. Useful highlighting dot density light maps. visibility_toggle <boolean> Whether layer appear layer selector. tooltip <tooltip> Defines columns (order) displayed layer tooltip, pickable == TRUE. Supports tidy-select data data.frame. sfc columns always removed.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/point_cloud_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Point Cloud Layer — point_cloud_layer","title":"Point Cloud Layer — point_cloud_layer","text":"Point Cloud Layer","code":""},{"path":"https://qfes.github.io/rdeck/reference/point_cloud_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Point Cloud Layer — point_cloud_layer","text":"","code":"add_point_cloud_layer(   rdeck,   ...,   id = uuid::UUIDgenerate(),   name = \"PointCloudLayer\",   group_name = NULL,   data = NULL,   visible = TRUE,   pickable = FALSE,   opacity = 1,   wrap_longitude = FALSE,   position_format = \"XYZ\",   color_format = \"RGBA\",   auto_highlight = FALSE,   highlight_color = \"#00008080\",   size_units = \"pixels\",   point_size = 10,   get_position = position,   get_normal = c(0, 0, 1),   get_color = \"#000000ff\",   material = TRUE,   blending_mode = \"normal\",   visibility_toggle = TRUE,   tooltip = NULL )  update_point_cloud_layer(   rdeck,   ...,   id,   name = cur_value(),   group_name = cur_value(),   data = cur_value(),   visible = cur_value(),   pickable = cur_value(),   opacity = cur_value(),   wrap_longitude = cur_value(),   position_format = cur_value(),   color_format = cur_value(),   auto_highlight = cur_value(),   highlight_color = cur_value(),   size_units = cur_value(),   point_size = cur_value(),   get_position = cur_value(),   get_normal = cur_value(),   get_color = cur_value(),   material = cur_value(),   blending_mode = cur_value(),   visibility_toggle = cur_value(),   tooltip = cur_value() )"},{"path":"https://qfes.github.io/rdeck/reference/point_cloud_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Point Cloud Layer — point_cloud_layer","text":"rdeck <rdeck | rdeck_proxy> rdeck map instance. ... Additional parameters forwarded deck.gl javascript without validation processing. dots must named camelCased serialised. warning raised dots used, warning class rdeck_dots_nonempty. id <string> layer's identifier must unique among layers type map. Defaults uuid::UUIDgenerate(), explicitly defined updatable layers shiny application. name <string> Identifies layer tooltips legends. need unique, brief. Defaults deck.gl class name layer. group_name <string> Defines group layer belongs . Currently effective layer selector, visibility_toggle = TRUE. data <data.frame | sf | string> layer's data. Data frames sf objects contain columns referenced layer's accessors. Strings interpreted URL data retrieved dynamically browser. visible <boolean> Determines whether layer visible ; also determines whether legend elements layer displayed. pickable <boolean> Determines layer responds pointer / touch events. opacity <number> Determines layer's opacity. wrap_longitude <boolean> Normalises geometry longitudes. position_format <\"XY\" | \"XYZ\"> Determines whether coordinate two (XY) three (XYZ) elements. color_format <\"RGB\" | \"RGBA\"> Determines whether alpha channel colours ignored accessors, making colours opaque. auto_highlight <boolean> TRUE, current object hovered cursor highlighted highlight_color. highlight_color <accessor | scale | color> auto_highlight pickable enabled, highlight_color determines colour currently highlighted object. single colour value supplied, colour used highlight objects layer. Per-object highlighting achieved colour scale, tidy-eval column colours. size_units <\"pixels\" | \"common\" | \"meters\"> units size specified get_size. point_size <number> radius points units specified size_units. get_position <accessor> position geometry column, either sfc_POINT sfc_MULTIPOINT column CRS EPSG:4326. Supports tidy-eval. get_normal <accessor | numeric> normal object, c(nx, ny, nz). Accepts length-3 numeric vector, tidy-eval 3-column matrix column. get_color <accessor | scale | color> colour object. Accepts single colour value, colour scale, tidy-eval column colours. material <boolean> blending_mode <\"normal\" | \"additive\" | \"subtractive\"> Sets blending mode. Blending modes: normal: Normal blending alter colours overlapping objects. additive: Additive blending adds colours overlapping objects. Useful highlighting dot density dark maps. subtractive: Subtractive blending darkens overlapping objects. Useful highlighting dot density light maps. visibility_toggle <boolean> Whether layer appear layer selector. tooltip <tooltip> Defines columns (order) displayed layer tooltip, pickable == TRUE. Supports tidy-select data data.frame. sfc columns always removed.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/polygon_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Polygon Layer — polygon_layer","title":"Polygon Layer — polygon_layer","text":"Polygon Layer","code":""},{"path":"https://qfes.github.io/rdeck/reference/polygon_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Polygon Layer — polygon_layer","text":"","code":"add_polygon_layer(   rdeck,   ...,   id = uuid::UUIDgenerate(),   name = \"PolygonLayer\",   group_name = NULL,   data = NULL,   visible = TRUE,   pickable = FALSE,   opacity = 1,   wrap_longitude = FALSE,   position_format = \"XYZ\",   color_format = \"RGBA\",   auto_highlight = FALSE,   highlight_color = \"#00008080\",   stroked = TRUE,   filled = TRUE,   extruded = FALSE,   elevation_scale = 1,   wireframe = FALSE,   line_width_units = \"meters\",   line_width_scale = 1,   line_width_min_pixels = 0,   line_width_max_pixels = 9007199254740991,   line_joint_rounded = FALSE,   line_miter_limit = 4,   get_polygon = polygon,   get_fill_color = \"#000000ff\",   get_line_color = \"#000000ff\",   get_line_width = 1,   get_elevation = 1000,   material = TRUE,   blending_mode = \"normal\",   visibility_toggle = TRUE,   tooltip = NULL )  update_polygon_layer(   rdeck,   ...,   id,   name = cur_value(),   group_name = cur_value(),   data = cur_value(),   visible = cur_value(),   pickable = cur_value(),   opacity = cur_value(),   wrap_longitude = cur_value(),   position_format = cur_value(),   color_format = cur_value(),   auto_highlight = cur_value(),   highlight_color = cur_value(),   stroked = cur_value(),   filled = cur_value(),   extruded = cur_value(),   elevation_scale = cur_value(),   wireframe = cur_value(),   line_width_units = cur_value(),   line_width_scale = cur_value(),   line_width_min_pixels = cur_value(),   line_width_max_pixels = cur_value(),   line_joint_rounded = cur_value(),   line_miter_limit = cur_value(),   get_polygon = cur_value(),   get_fill_color = cur_value(),   get_line_color = cur_value(),   get_line_width = cur_value(),   get_elevation = cur_value(),   material = cur_value(),   blending_mode = cur_value(),   visibility_toggle = cur_value(),   tooltip = cur_value() )"},{"path":"https://qfes.github.io/rdeck/reference/polygon_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Polygon Layer — polygon_layer","text":"rdeck <rdeck | rdeck_proxy> rdeck map instance. ... Additional parameters forwarded deck.gl javascript without validation processing. dots must named camelCased serialised. warning raised dots used, warning class rdeck_dots_nonempty. id <string> layer's identifier must unique among layers type map. Defaults uuid::UUIDgenerate(), explicitly defined updatable layers shiny application. name <string> Identifies layer tooltips legends. need unique, brief. Defaults deck.gl class name layer. group_name <string> Defines group layer belongs . Currently effective layer selector, visibility_toggle = TRUE. data <data.frame | sf | string> layer's data. Data frames sf objects contain columns referenced layer's accessors. Strings interpreted URL data retrieved dynamically browser. visible <boolean> Determines whether layer visible ; also determines whether legend elements layer displayed. pickable <boolean> Determines layer responds pointer / touch events. opacity <number> Determines layer's opacity. wrap_longitude <boolean> Normalises geometry longitudes. position_format <\"XY\" | \"XYZ\"> Determines whether coordinate two (XY) three (XYZ) elements. color_format <\"RGB\" | \"RGBA\"> Determines whether alpha channel colours ignored accessors, making colours opaque. auto_highlight <boolean> TRUE, current object hovered cursor highlighted highlight_color. highlight_color <accessor | scale | color> auto_highlight pickable enabled, highlight_color determines colour currently highlighted object. single colour value supplied, colour used highlight objects layer. Per-object highlighting achieved colour scale, tidy-eval column colours. stroked <boolean> TRUE, draw outline around object. filled <boolean> TRUE, draw filled area point. extruded <boolean> TRUE, extrude objects along z-axis; FALSE, objects flat. elevation_scale <number> elevation multiplier. wireframe <boolean> TRUE extruded == TRUE, draw line wireframe object. outline horizontal lines closing top bottom polygons vertical lines vertex polygon. line_width_units <\"pixels\" | \"common\" | \"meters\"> units line width. line_width_scale <number> line width multiplier. line_width_min_pixels <number> minimum line width pixels. line_width_max_pixels <number> maximum line width pixels. line_joint_rounded <boolean> line_miter_limit number get_polygon <accessor> polygon geometry column, either sfc_POLYGON sfc_MULTIPOLYGON column CRS EPSG:4326. Supports tidy-eval. get_fill_color <accessor | scale | color> fill colour object. Accepts single colour value, colour scale, tidy-eval column colours. get_line_color <accessor | scale | color> line colour object. Accepts single colour value, colour scale, tidy-eval column colours. get_line_width <accessor | scale | number> outline object units specified line_width_units. Accepts single numeric value, numeric scale, tidy-eval column numbers. get_elevation <accessor | scale | number> elevation extrude object z-axis. Height units metres. Accepts single numeric value, numeric scale, tidy-eval column numbers. material <boolean> blending_mode <\"normal\" | \"additive\" | \"subtractive\"> Sets blending mode. Blending modes: normal: Normal blending alter colours overlapping objects. additive: Additive blending adds colours overlapping objects. Useful highlighting dot density dark maps. subtractive: Subtractive blending darkens overlapping objects. Useful highlighting dot density light maps. visibility_toggle <boolean> Whether layer appear layer selector. tooltip <tooltip> Defines columns (order) displayed layer tooltip, pickable == TRUE. Supports tidy-select data data.frame. sfc columns always removed.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/power_trans.html","id":null,"dir":"Reference","previous_headings":"","what":"Power transformation — power_trans","title":"Power transformation — power_trans","text":"Applies exponential transform input: y = abs(x)^k, : x input vector k exponent","code":""},{"path":"https://qfes.github.io/rdeck/reference/power_trans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Power transformation — power_trans","text":"","code":"power_trans(exponent = 0.5)"},{"path":"https://qfes.github.io/rdeck/reference/power_trans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Power transformation — power_trans","text":"exponent <number> power exponent","code":""},{"path":"https://qfes.github.io/rdeck/reference/power_trans.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Power transformation — power_trans","text":"x negative, result multiplied -1.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/props.html","id":null,"dir":"Reference","previous_headings":"","what":"Props — props","title":"Props — props","text":"Get map props","code":""},{"path":"https://qfes.github.io/rdeck/reference/props.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Props — props","text":"","code":"props(rdeck)"},{"path":"https://qfes.github.io/rdeck/reference/props.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Props — props","text":"rdeck rdeck instance","code":""},{"path":"https://qfes.github.io/rdeck/reference/quadkey_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Quadkey Layer — quadkey_layer","title":"Quadkey Layer — quadkey_layer","text":"Quadkey Layer","code":""},{"path":"https://qfes.github.io/rdeck/reference/quadkey_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quadkey Layer — quadkey_layer","text":"","code":"add_quadkey_layer(   rdeck,   ...,   id = uuid::UUIDgenerate(),   name = \"QuadkeyLayer\",   group_name = NULL,   data = NULL,   visible = TRUE,   pickable = FALSE,   opacity = 1,   wrap_longitude = FALSE,   position_format = \"XYZ\",   color_format = \"RGBA\",   auto_highlight = FALSE,   highlight_color = \"#00008080\",   stroked = TRUE,   filled = TRUE,   extruded = FALSE,   elevation_scale = 1,   wireframe = FALSE,   line_width_units = \"meters\",   line_width_scale = 1,   line_width_min_pixels = 0,   line_width_max_pixels = 9007199254740991,   line_joint_rounded = FALSE,   line_miter_limit = 4,   get_polygon = polygon,   get_fill_color = \"#000000ff\",   get_line_color = \"#000000ff\",   get_line_width = 1,   get_elevation = 1000,   material = TRUE,   get_quadkey = quadkey,   blending_mode = \"normal\",   visibility_toggle = TRUE,   tooltip = NULL )  update_quadkey_layer(   rdeck,   ...,   id,   name = cur_value(),   group_name = cur_value(),   data = cur_value(),   visible = cur_value(),   pickable = cur_value(),   opacity = cur_value(),   wrap_longitude = cur_value(),   position_format = cur_value(),   color_format = cur_value(),   auto_highlight = cur_value(),   highlight_color = cur_value(),   stroked = cur_value(),   filled = cur_value(),   extruded = cur_value(),   elevation_scale = cur_value(),   wireframe = cur_value(),   line_width_units = cur_value(),   line_width_scale = cur_value(),   line_width_min_pixels = cur_value(),   line_width_max_pixels = cur_value(),   line_joint_rounded = cur_value(),   line_miter_limit = cur_value(),   get_polygon = cur_value(),   get_fill_color = cur_value(),   get_line_color = cur_value(),   get_line_width = cur_value(),   get_elevation = cur_value(),   material = cur_value(),   get_quadkey = cur_value(),   blending_mode = cur_value(),   visibility_toggle = cur_value(),   tooltip = cur_value() )"},{"path":"https://qfes.github.io/rdeck/reference/quadkey_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quadkey Layer — quadkey_layer","text":"rdeck <rdeck | rdeck_proxy> rdeck map instance. ... Additional parameters forwarded deck.gl javascript without validation processing. dots must named camelCased serialised. warning raised dots used, warning class rdeck_dots_nonempty. id <string> layer's identifier must unique among layers type map. Defaults uuid::UUIDgenerate(), explicitly defined updatable layers shiny application. name <string> Identifies layer tooltips legends. need unique, brief. Defaults deck.gl class name layer. group_name <string> Defines group layer belongs . Currently effective layer selector, visibility_toggle = TRUE. data <data.frame | sf | string> layer's data. Data frames sf objects contain columns referenced layer's accessors. Strings interpreted URL data retrieved dynamically browser. visible <boolean> Determines whether layer visible ; also determines whether legend elements layer displayed. pickable <boolean> Determines layer responds pointer / touch events. opacity <number> Determines layer's opacity. wrap_longitude <boolean> Normalises geometry longitudes. position_format <\"XY\" | \"XYZ\"> Determines whether coordinate two (XY) three (XYZ) elements. color_format <\"RGB\" | \"RGBA\"> Determines whether alpha channel colours ignored accessors, making colours opaque. auto_highlight <boolean> TRUE, current object hovered cursor highlighted highlight_color. highlight_color <accessor | scale | color> auto_highlight pickable enabled, highlight_color determines colour currently highlighted object. single colour value supplied, colour used highlight objects layer. Per-object highlighting achieved colour scale, tidy-eval column colours. stroked <boolean> TRUE, draw outline around object. filled <boolean> TRUE, draw filled area point. extruded <boolean> TRUE, extrude objects along z-axis; FALSE, objects flat. elevation_scale <number> elevation multiplier. wireframe <boolean> TRUE extruded == TRUE, draw line wireframe object. outline horizontal lines closing top bottom polygons vertical lines vertex polygon. line_width_units <\"pixels\" | \"common\" | \"meters\"> units line width. line_width_scale <number> line width multiplier. line_width_min_pixels <number> minimum line width pixels. line_width_max_pixels <number> maximum line width pixels. line_joint_rounded <boolean> line_miter_limit number get_polygon <accessor> polygon geometry column, either sfc_POLYGON sfc_MULTIPOLYGON column CRS EPSG:4326. Supports tidy-eval. get_fill_color <accessor | scale | color> fill colour object. Accepts single colour value, colour scale, tidy-eval column colours. get_line_color <accessor | scale | color> line colour object. Accepts single colour value, colour scale, tidy-eval column colours. get_line_width <accessor | scale | number> outline object units specified line_width_units. Accepts single numeric value, numeric scale, tidy-eval column numbers. get_elevation <accessor | scale | number> elevation extrude object z-axis. Height units metres. Accepts single numeric value, numeric scale, tidy-eval column numbers. material <boolean> get_quadkey <accessor> column containing quadkey identifier. blending_mode <\"normal\" | \"additive\" | \"subtractive\"> Sets blending mode. Blending modes: normal: Normal blending alter colours overlapping objects. additive: Additive blending adds colours overlapping objects. Useful highlighting dot density dark maps. subtractive: Subtractive blending darkens overlapping objects. Useful highlighting dot density light maps. visibility_toggle <boolean> Whether layer appear layer selector. tooltip <tooltip> Defines columns (order) displayed layer tooltip, pickable == TRUE. Supports tidy-select data data.frame. sfc columns always removed.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/rdeck-package.html","id":null,"dir":"Reference","previous_headings":"","what":"rdeck: Deck.gl Widget — rdeck-package","title":"rdeck: Deck.gl Widget — rdeck-package","text":"Deck.gl widget R.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/rdeck-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"rdeck: Deck.gl Widget — rdeck-package","text":"Maintainer: Anthony North anthony.jl.north@gmail.com","code":""},{"path":"https://qfes.github.io/rdeck/reference/rdeck-shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny bindings for rdeck — rdeck-shiny","title":"Shiny bindings for rdeck — rdeck-shiny","text":"Output render functions using rdeck within Shiny applications interactive Rmd documents.","code":""},{"path":"https://qfes.github.io/rdeck/reference/rdeck-shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny bindings for rdeck — rdeck-shiny","text":"","code":"rdeckOutput(outputId, width = \"100%\", height = \"400px\")  renderRdeck(expr, env = parent.frame(), quoted = FALSE)"},{"path":"https://qfes.github.io/rdeck/reference/rdeck-shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny bindings for rdeck — rdeck-shiny","text":"outputId output variable read width, height Must valid CSS unit (like '100%', '400px', 'auto') number, coerced string 'px' appended. expr expression generates rdeck env environment evaluate expr. quoted expr quoted expression (quote())? useful want save expression variable.","code":""},{"path":"https://qfes.github.io/rdeck/reference/rdeck.html","id":null,"dir":"Reference","previous_headings":"","what":"RDeck — rdeck","title":"RDeck — rdeck","text":"Create Deck.GL map. Rendering mapbox basemap requires mapbox account mapbox access token.","code":""},{"path":"https://qfes.github.io/rdeck/reference/rdeck.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RDeck — rdeck","text":"","code":"rdeck(   map_style = mapbox_dark(),   theme = \"kepler\",   initial_bounds = NULL,   initial_view_state = view_state(center = c(0, 0), zoom = 1),   controller = TRUE,   picking_radius = 0,   use_device_pixels = TRUE,   blending_mode = \"normal\",   layer_selector = TRUE,   editor = FALSE,   lazy_load = deprecated(),   width = NULL,   height = NULL,   id = NULL,   ... )"},{"path":"https://qfes.github.io/rdeck/reference/rdeck.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RDeck — rdeck","text":"map_style <string> mapbox basemap style url. See https://docs.mapbox.com/api/maps/#mapbox-styles theme <\"kepler\" | \"light\"> widget theme alters style legend tooltips. initial_bounds <st_bbox | sf | sfc> initial bounds map; overwrites initial_view_state. initial_view_state <view_state> Defines map position, zoom, bearing pitch. controller <logical> NULL FALSE, map interactive. picking_radius <number> Extra pixels around pointer include picking; useful rendering objects difficult hover, e.g. thin lines, small points, etc. use_device_pixels <logical | number> Controls resolution drawing buffer used rendering. TRUE: Resolution defined window.devicePixelRatio. Retina/HD displays, resolution usually twice big CSS pixels resolution. FALSE: CSS pixels resolution used rendering. number: Custom ratio (drawing buffer resolution CSS pixel) determine drawing buffer size. value less 1 uses resolution smaller CSS pixels, improving rendering performance expense image quality; value greater 1 improves image quality expense rendering performance. blending_mode <\"normal\" | \"additive\" | \"subtractive\"> Sets blending mode. Blending modes: normal: Normal blending alter colours overlapping objects. additive: Additive blending adds colours overlapping objects. Useful highlighting dot density dark maps. subtractive: Subtractive blending darkens overlapping objects. Useful highlighting dot density light maps. layer_selector <boolean> TRUE, layer selector control enabled layers visibility_toggle = TRUE may toggled. FALSE, layer selector control rendered. editor <boolean|editor_options> Whether render polygon editor. TRUE, renders default editor_options(). FALSE, polygon editor rendered. lazy_load . Maps always eagerly rendered. width <number> width map canvas. height <number> height map canvas. id <string> map element id. used shiny applications. ... Additional parameters forwarded deck.gl javascript without validation processing. dots must named camelCased serialised. warning raised dots used, warning class rdeck_dots_nonempty.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/rdeck_proxy.html","id":null,"dir":"Reference","previous_headings":"","what":"RDeck proxy — rdeck_proxy","title":"RDeck proxy — rdeck_proxy","text":"Creates rdeck() interface asynchronous updates pre-rendered rdeck map Shiny apps. rdeck props can updated proxy (NULL values discarded), layers added proxy (e.g. rdeck_proxy %>% add_h3_hexagon_layer()) merged pre-rendered rdeck layers. Layers merged id. Matched layers updated place, new layers appended hence drawn top existing layers. layer updates, may omit data prop avoid re-serialising unchanged data. props assume defaults omitted.","code":""},{"path":"https://qfes.github.io/rdeck/reference/rdeck_proxy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RDeck proxy — rdeck_proxy","text":"","code":"rdeck_proxy(   id,   session = shiny::getDefaultReactiveDomain(),   map_style = cur_value(),   theme = cur_value(),   initial_bounds = cur_value(),   initial_view_state = cur_value(),   controller = cur_value(),   picking_radius = cur_value(),   use_device_pixels = cur_value(),   blending_mode = cur_value(),   layer_selector = cur_value(),   editor = cur_value(),   lazy_load = deprecated(),   ... )"},{"path":"https://qfes.github.io/rdeck/reference/rdeck_proxy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RDeck proxy — rdeck_proxy","text":"id <string> map id session <ShinySession> shiny session map_style <string> mapbox basemap style url. See https://docs.mapbox.com/api/maps/#mapbox-styles theme <\"kepler\" | \"light\"> widget theme alters style legend tooltips. initial_bounds <st_bbox | sf | sfc> initial bounds map; overwrites initial_view_state. initial_view_state <view_state> Defines map position, zoom, bearing pitch. controller <logical> NULL FALSE, map interactive. picking_radius <number> Extra pixels around pointer include picking; useful rendering objects difficult hover, e.g. thin lines, small points, etc. use_device_pixels <logical | number> Controls resolution drawing buffer used rendering. TRUE: Resolution defined window.devicePixelRatio. Retina/HD displays, resolution usually twice big CSS pixels resolution. FALSE: CSS pixels resolution used rendering. number: Custom ratio (drawing buffer resolution CSS pixel) determine drawing buffer size. value less 1 uses resolution smaller CSS pixels, improving rendering performance expense image quality; value greater 1 improves image quality expense rendering performance. blending_mode <\"normal\" | \"additive\" | \"subtractive\"> Sets blending mode. Blending modes: normal: Normal blending alter colours overlapping objects. additive: Additive blending adds colours overlapping objects. Useful highlighting dot density dark maps. subtractive: Subtractive blending darkens overlapping objects. Useful highlighting dot density light maps. layer_selector <boolean> TRUE, layer selector control enabled layers visibility_toggle = TRUE may toggled. FALSE, layer selector control rendered. editor <boolean|editor_options> Whether render polygon editor. TRUE, renders default editor_options(). FALSE, polygon editor rendered. lazy_load . Maps always eagerly rendered. ... Additional parameters forwarded deck.gl javascript without validation processing. dots must named camelCased serialised. warning raised dots used, warning class rdeck_dots_nonempty.","code":""},{"path":"https://qfes.github.io/rdeck/reference/rdeck_proxy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"RDeck proxy — rdeck_proxy","text":"","code":"if (FALSE) { library(shiny) library(dplyr) library(h3jsr) library(viridis)  ui <- fillPage(   rdeckOutput(\"map\", height = \"100%\"),   absolutePanel(     top = 10, left = 10,     sliderInput(\"range\", \"value\", 0, 1, c(0, 1), step = 0.1)   ) )  h3_data <- tibble(   hexagon = get_res0() %>%     get_children(res = 3) %>%     unlist() %>%     unique(),   value = runif(length(hexagon)) )  map <- rdeck() %>%   add_h3_hexagon_layer(     id = \"h3_hexagon\",     name = \"hexagons\",     data = h3_data,     get_fill_color = scale_color_quantize(       col = value,       palette = viridis(6, 0.3)     ),     pickable = TRUE,     auto_highlight = TRUE,     tooltip = c(hexagon, value)   )  server <- function(input, output, session) {   output$map <- renderRdeck(map)    filtered_data <- reactive({     h3_data %>%       filter(value >= input$range[1] & value <= input$range[2])   })    observe({     rdeck_proxy(\"map\") %>%       add_h3_hexagon_layer(         id = \"h3_hexagon\",         name = \"hexagons\",         data = filtered_data(),         get_fill_color = scale_color_quantize(           col = value,           palette = cividis(6, 0.3)         ),         pickable = TRUE,         auto_highlight = TRUE,         tooltip = c(hexagon, value)       )   }) }  app <- shinyApp(ui, server) }"},{"path":"https://qfes.github.io/rdeck/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. htmlwidgets JS magrittr %>% stylebox mapbox_dark, mapbox_gallery_basic, mapbox_gallery_blueprint, mapbox_gallery_bubble, mapbox_gallery_cali_terrain, mapbox_gallery_decimal, mapbox_gallery_frank, mapbox_gallery_ice_cream, mapbox_gallery_le_shine, mapbox_gallery_mineral, mapbox_gallery_minimo, mapbox_gallery_moonlight, mapbox_gallery_north_star, mapbox_gallery_pencil, mapbox_gallery_standard, mapbox_gallery_streets_japan, mapbox_light, mapbox_navigation_day, mapbox_navigation_guidance_day, mapbox_navigation_guidance_night, mapbox_navigation_night, mapbox_outdoors, mapbox_satellite, mapbox_satellite_streets, mapbox_streets, mapbox_studio_galaxy, uber_dark, uber_light, uber_muted_light, uber_muted_night","code":""},{"path":"https://qfes.github.io/rdeck/reference/rescale_center.html","id":null,"dir":"Reference","previous_headings":"","what":"Rescale center — rescale_center","title":"Rescale center — rescale_center","text":"Re-centres scale defined centre / midpoint. rdeck equivalent scales::rescale_mid(). centring rdeck scale creates new scale output palette range centred center. similar creating diverging scale; key difference output palette range remains linear (respect breaks) truncated side closest center. useful creating difference layers, output palette range represents distance centre.","code":""},{"path":"https://qfes.github.io/rdeck/reference/rescale_center.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rescale center — rescale_center","text":"","code":"rescale_center(scale, center = 0)"},{"path":"https://qfes.github.io/rdeck/reference/rescale_center.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rescale center — rescale_center","text":"scale <scale> scale object center <number> center scale input","code":""},{"path":"https://qfes.github.io/rdeck/reference/rescale_center.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Rescale center — rescale_center","text":"Category identity scales supported.","code":""},{"path":"https://qfes.github.io/rdeck/reference/rescale_center.html","id":"centring-vs-diverging","dir":"Reference","previous_headings":"","what":"Centring vs Diverging","title":"Rescale center — rescale_center","text":"plot shows rescale_center() rescale_diverge() distort scale output. input scale case power_scale(limits = -36:4); scale centred diverged 0. plot left shows mapping input -36:4 (x axis) output 0:1 (y axis). plot right linear representation left space rdeck works . input -36:4 transformed power_trans() rescaled 0:1. plot included (hopefully) easier understand. unaltered scale, see 0 mapped 0.75 output, colour 0.75 colour ramp (e.g. scales::colour_ramp(viridis::viridis(256))(0.75)). applying rescale_center() see gradient function become y = 2/3x linear scale, 2/3 * scales::rescale(trans$transform(x)) data. rescale_diverge() see piecewise scale break center; sides center different gradient (y = 2/3x y = 2x - 1) full range  y used. colour ramp plot shows effect rescaling colour palette (case viridis).","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/rescale_center.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rescale center — rescale_center","text":"","code":"# create a sqrt scale that is centered at 0 sqrt_centered <- rescale_center(   scale_color_power(col, limits = -36:4),   center = 0 )  # create a discrete symlog scale that is centered at 5 symlog_centered <- rescale_center(   scale_color_threshold(col, limits = -100:100, breaks = breaks_symlog()),   center = 5 )"},{"path":"https://qfes.github.io/rdeck/reference/rescale_diverge.html","id":null,"dir":"Reference","previous_headings":"","what":"Rescale diverge — rescale_diverge","title":"Rescale diverge — rescale_diverge","text":"Creates diverging scale defined centre / midpoint. Similar rescale_center(), key difference output palette / range piecewise linear (respect breaks) entire output range always used.","code":""},{"path":"https://qfes.github.io/rdeck/reference/rescale_diverge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rescale diverge — rescale_diverge","text":"","code":"rescale_diverge(scale, center = 0)"},{"path":"https://qfes.github.io/rdeck/reference/rescale_diverge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rescale diverge — rescale_diverge","text":"scale <scale> scale object center <number> center scale input","code":""},{"path":"https://qfes.github.io/rdeck/reference/rescale_diverge.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Rescale diverge — rescale_diverge","text":"Category identity scales supported.","code":""},{"path":"https://qfes.github.io/rdeck/reference/rescale_diverge.html","id":"centring-vs-diverging","dir":"Reference","previous_headings":"","what":"Centring vs Diverging","title":"Rescale diverge — rescale_diverge","text":"plot shows rescale_center() rescale_diverge() distort scale output. input scale case power_scale(limits = -36:4); scale centred diverged 0. plot left shows mapping input -36:4 (x axis) output 0:1 (y axis). plot right linear representation left space rdeck works . input -36:4 transformed power_trans() rescaled 0:1. plot included (hopefully) easier understand. unaltered scale, see 0 mapped 0.75 output, colour 0.75 colour ramp (e.g. scales::colour_ramp(viridis::viridis(256))(0.75)). applying rescale_center() see gradient function become y = 2/3x linear scale, 2/3 * scales::rescale(trans$transform(x)) data. rescale_diverge() see piecewise scale break center; sides center different gradient (y = 2/3x y = 2x - 1) full range  y used. colour ramp plot shows effect rescaling colour palette (case viridis).","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/rescale_diverge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rescale diverge — rescale_diverge","text":"","code":"# create a diverging linear scale at 0 linear_diverged <- rescale_diverge(   scale_color_linear(col, limits = -5:10),   center = 0 )  # create a diverging log scale at 10 log_diverged <- rescale_diverge(   scale_log(col, limits = 1:1000),   center = 10 )"},{"path":"https://qfes.github.io/rdeck/reference/s2_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"S2 Layer — s2_layer","title":"S2 Layer — s2_layer","text":"S2 Layer","code":""},{"path":"https://qfes.github.io/rdeck/reference/s2_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S2 Layer — s2_layer","text":"","code":"add_s2_layer(   rdeck,   ...,   id = uuid::UUIDgenerate(),   name = \"S2Layer\",   group_name = NULL,   data = NULL,   visible = TRUE,   pickable = FALSE,   opacity = 1,   wrap_longitude = FALSE,   position_format = \"XYZ\",   color_format = \"RGBA\",   auto_highlight = FALSE,   highlight_color = \"#00008080\",   stroked = TRUE,   filled = TRUE,   extruded = FALSE,   elevation_scale = 1,   wireframe = FALSE,   line_width_units = \"meters\",   line_width_scale = 1,   line_width_min_pixels = 0,   line_width_max_pixels = 9007199254740991,   line_joint_rounded = FALSE,   line_miter_limit = 4,   get_fill_color = \"#000000ff\",   get_line_color = \"#000000ff\",   get_line_width = 1,   get_elevation = 1000,   material = TRUE,   get_s2_token = token,   blending_mode = \"normal\",   visibility_toggle = TRUE,   tooltip = NULL )  update_s2_layer(   rdeck,   ...,   id,   name = cur_value(),   group_name = cur_value(),   data = cur_value(),   visible = cur_value(),   pickable = cur_value(),   opacity = cur_value(),   wrap_longitude = cur_value(),   position_format = cur_value(),   color_format = cur_value(),   auto_highlight = cur_value(),   highlight_color = cur_value(),   stroked = cur_value(),   filled = cur_value(),   extruded = cur_value(),   elevation_scale = cur_value(),   wireframe = cur_value(),   line_width_units = cur_value(),   line_width_scale = cur_value(),   line_width_min_pixels = cur_value(),   line_width_max_pixels = cur_value(),   line_joint_rounded = cur_value(),   line_miter_limit = cur_value(),   get_fill_color = cur_value(),   get_line_color = cur_value(),   get_line_width = cur_value(),   get_elevation = cur_value(),   material = cur_value(),   get_s2_token = cur_value(),   blending_mode = cur_value(),   visibility_toggle = cur_value(),   tooltip = cur_value() )"},{"path":"https://qfes.github.io/rdeck/reference/s2_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S2 Layer — s2_layer","text":"rdeck <rdeck | rdeck_proxy> rdeck map instance. ... Additional parameters forwarded deck.gl javascript without validation processing. dots must named camelCased serialised. warning raised dots used, warning class rdeck_dots_nonempty. id <string> layer's identifier must unique among layers type map. Defaults uuid::UUIDgenerate(), explicitly defined updatable layers shiny application. name <string> Identifies layer tooltips legends. need unique, brief. Defaults deck.gl class name layer. group_name <string> Defines group layer belongs . Currently effective layer selector, visibility_toggle = TRUE. data <data.frame | sf | string> layer's data. Data frames sf objects contain columns referenced layer's accessors. Strings interpreted URL data retrieved dynamically browser. visible <boolean> Determines whether layer visible ; also determines whether legend elements layer displayed. pickable <boolean> Determines layer responds pointer / touch events. opacity <number> Determines layer's opacity. wrap_longitude <boolean> Normalises geometry longitudes. position_format <\"XY\" | \"XYZ\"> Determines whether coordinate two (XY) three (XYZ) elements. color_format <\"RGB\" | \"RGBA\"> Determines whether alpha channel colours ignored accessors, making colours opaque. auto_highlight <boolean> TRUE, current object hovered cursor highlighted highlight_color. highlight_color <accessor | scale | color> auto_highlight pickable enabled, highlight_color determines colour currently highlighted object. single colour value supplied, colour used highlight objects layer. Per-object highlighting achieved colour scale, tidy-eval column colours. stroked <boolean> TRUE, draw outline around object. filled <boolean> TRUE, draw filled area point. extruded <boolean> TRUE, extrude objects along z-axis; FALSE, objects flat. elevation_scale <number> elevation multiplier. wireframe <boolean> TRUE extruded == TRUE, draw line wireframe object. outline horizontal lines closing top bottom polygons vertical lines vertex polygon. line_width_units <\"pixels\" | \"common\" | \"meters\"> units line width. line_width_scale <number> line width multiplier. line_width_min_pixels <number> minimum line width pixels. line_width_max_pixels <number> maximum line width pixels. line_joint_rounded <boolean> line_miter_limit number get_fill_color <accessor | scale | color> fill colour object. Accepts single colour value, colour scale, tidy-eval column colours. get_line_color <accessor | scale | color> line colour object. Accepts single colour value, colour scale, tidy-eval column colours. get_line_width <accessor | scale | number> outline object units specified line_width_units. Accepts single numeric value, numeric scale, tidy-eval column numbers. get_elevation <accessor | scale | number> elevation extrude object z-axis. Height units metres. Accepts single numeric value, numeric scale, tidy-eval column numbers. material <boolean> get_s2_token <accessor> S2 hex token S2 cell. Accepts tidy-eval character column. blending_mode <\"normal\" | \"additive\" | \"subtractive\"> Sets blending mode. Blending modes: normal: Normal blending alter colours overlapping objects. additive: Additive blending adds colours overlapping objects. Useful highlighting dot density dark maps. subtractive: Subtractive blending darkens overlapping objects. Useful highlighting dot density light maps. visibility_toggle <boolean> Whether layer appear layer selector. tooltip <tooltip> Defines columns (order) displayed layer tooltip, pickable == TRUE. Supports tidy-select data data.frame. sfc columns always removed.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Prop Type: Scale — scale","title":"Prop Type: Scale — scale","text":"Scales transform input data visual representations, predominantly colours: fill, line, highlight sizes: radius, elevation, width, height. Transformations performed client-side javascript, thus scales minimal file-size overhead; pay source data scaled & scale descriptor (palette, breaks, etc), pay scaled output (e.g. vector colours). Many scales can refer column dataframe, column serialised . Data retrieved browser dynamically can also scaled, including mvt_layer(). rdeck scales (except scale_quantile()) support R dataframes data fetched javascript, following restrictions: column validation performed -- missing column / incorrect type may error javascript, result na_color / na_value used features limits / levels must explictly defined scale -- learnt data quantile scales technically work, require copy data compute quantiles","code":""},{"path":"https://qfes.github.io/rdeck/reference/scale.html","id":"tidy-eval","dir":"Reference","previous_headings":"","what":"Tidy-eval","title":"Prop Type: Scale — scale","text":"Columns referenced scale support tidy-eval expressions. col parameter scale must valid argument rlang::ensym() follows rules. Use injection operators pass value name environment, e.g. !!my_column.","code":""},{"path":"https://qfes.github.io/rdeck/reference/scale.html","id":"legend","dir":"Reference","previous_headings":"","what":"Legend","title":"Prop Type: Scale — scale","text":"Scales can optionally produce colour numeric legend client. Numeric legends give context visual field scaled column; colour legends additionally provide colour scale untransformed ticks. Legend ticks can formatted labelling function (e.g. scales::label_number()). function can completely replace input ticks wish; constraint return value character vector length input unformatted ticks. Legends kepler.gl inspired.","code":""},{"path":"https://qfes.github.io/rdeck/reference/scale.html","id":"available-scales","dir":"Reference","previous_headings":"","what":"Available scales","title":"Prop Type: Scale — scale","text":"scale_linear scale_power scale_log scale_symlog scale_identity scale_threshold scale_quantile scale_category scale_quantize","code":""},{"path":"https://qfes.github.io/rdeck/reference/scale_category.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale category — scale_category","title":"Scale category — scale_category","text":"Creates categorical scale. Categorical scales map input values defined set levels colours (values). Input values set levels assigned unmapped_color (unmapped_value).","code":""},{"path":"https://qfes.github.io/rdeck/reference/scale_category.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale category — scale_category","text":"","code":"scale_color_category(   col,   palette = scales::brewer_pal(\"div\"),   unmapped_color = \"#000000\",   levels = NULL,   unmapped_tick = NULL,   tick_format = NULL,   col_label = \"{.col}\",   legend = TRUE )  scale_category(   col,   range = 0:1,   unmapped_value = 0,   levels = NULL,   col_label = \"{.col}\",   legend = TRUE )"},{"path":"https://qfes.github.io/rdeck/reference/scale_category.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale category — scale_category","text":"col <name | string> name column containing data scaled. Must valid input rlang::ensym(); either named column (non-standard evaluation), string. Supports tidy-eval. palette <color|function> colour palette colour scale. Must : vector RGBA hex colours, palette generator function, taking length parameter, palette ramp created scales::colour_ramp() scales::colour_ramp() interpolator created input palette. unmapped_color <color> colour representing unmapped levels. levels <factor | character | logical> category levels. NULL, populated input data. order levels determined levels() factors & unique() otherwise. levels colours (range values), palette (range) interpolated. unmapped_tick <string> tick label unmapped category. NULL legend == TRUE, unmapped category appear bottom legend. tick_format <function> label function taking vector ticks returning formatted ticks. col_label <string | function> template string label function customising column name legend. col_label string, {.col} may used represent col name col_label function, function must take single argument: col name legend <boolean> Indicate whether legend displayed scale. range <numeric> output range numeric scale. Must length >= 2. stats::approxfun() interpolator created input range. unmapped_value <number> value representing unmapped levels.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/scale_identity.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale identity — scale_identity","title":"Scale identity — scale_identity","text":"Creates identity scale; special case linear scale, input mapped (input limits = output range). identity scale useful cases input data already expressed visual representation (e.g. line width) used -.","code":""},{"path":"https://qfes.github.io/rdeck/reference/scale_identity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale identity — scale_identity","text":"","code":"scale_identity(col, na_value = 0, col_label = \"{.col}\", legend = TRUE)"},{"path":"https://qfes.github.io/rdeck/reference/scale_identity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale identity — scale_identity","text":"col <name | string> name column containing data scaled. Must valid input rlang::ensym(); either named column (non-standard evaluation), string. Supports tidy-eval. na_value <number> output value NA input values. col_label <string | function> template string label function customising column name legend. col_label string, {.col} may used represent col name col_label function, function must take single argument: col name legend <boolean> Indicate whether legend displayed scale.","code":""},{"path":"https://qfes.github.io/rdeck/reference/scale_identity.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Scale identity — scale_identity","text":"Identity scales almost equivalent accessor numeric column; differences : NA replaced na_value May render numeric legend","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/scale_linear.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale linear — scale_linear","title":"Scale linear — scale_linear","text":"Creates continuous linear scale. colour palette (range) linearly interpolated limits (limits breaks piecewise scales).","code":""},{"path":"https://qfes.github.io/rdeck/reference/scale_linear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale linear — scale_linear","text":"","code":"scale_color_linear(   col,   palette = scales::viridis_pal(),   na_color = \"#000000\",   limits = NULL,   breaks = NULL,   n_ticks = NULL,   tick_format = format_number,   col_label = \"{.col}\",   legend = TRUE )  scale_linear(   col,   range = 0:1,   na_value = 0,   limits = NULL,   breaks = NULL,   col_label = \"{.col}\",   legend = TRUE )"},{"path":"https://qfes.github.io/rdeck/reference/scale_linear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale linear — scale_linear","text":"col <name | string> name column containing data scaled. Must valid input rlang::ensym(); either named column (non-standard evaluation), string. Supports tidy-eval. palette <color|function> colour palette colour scale. Must : vector RGBA hex colours, palette generator function, taking length parameter, palette ramp created scales::colour_ramp() scales::colour_ramp() interpolator created input palette. na_color <color> colour value NA input values. limits <c(min, max)> limits scale's input. NULL, limits computed layer data. Values outside range limits clamped. breaks <numeric | function> breaks scale, allowing define piecewise scale. scale palette numeric range linearly interpolated (length) mapped onto breaks. Breaks outside limits scale discarded. NULL, breaks must either: numeric vector breaks function, taking numeric vector argument (e.g. breaks_linear()) Defaults breaks_trans() trans scale's transformer. n_ticks <number> number ticks display legend. Must >= 2. legend size grow shrink depending value. tick_format <function> label function taking vector ticks returning formatted ticks. col_label <string | function> template string label function customising column name legend. col_label string, {.col} may used represent col name col_label function, function must take single argument: col name legend <boolean> Indicate whether legend displayed scale. range <numeric> output range numeric scale. Must length >= 2. stats::approxfun() interpolator created input range. na_value <number> output value NA input values.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/scale_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale log — scale_log","title":"Scale log — scale_log","text":"Creates continuous log scale, input values transformed log_trans(base) calculating output. Log scales can useful transforming positively skewed data.","code":""},{"path":"https://qfes.github.io/rdeck/reference/scale_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale log — scale_log","text":"","code":"scale_color_log(   col,   palette = scales::viridis_pal(),   na_color = \"#000000\",   base = 10,   limits = NULL,   breaks = NULL,   n_ticks = NULL,   tick_format = format_number,   col_label = \"{.col}\",   legend = TRUE )  scale_log(   col,   range = 0:1,   na_value = 0,   base = 10,   limits = NULL,   breaks = NULL,   col_label = \"{.col}\",   legend = TRUE )"},{"path":"https://qfes.github.io/rdeck/reference/scale_log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale log — scale_log","text":"col <name | string> name column containing data scaled. Must valid input rlang::ensym(); either named column (non-standard evaluation), string. Supports tidy-eval. palette <color|function> colour palette colour scale. Must : vector RGBA hex colours, palette generator function, taking length parameter, palette ramp created scales::colour_ramp() scales::colour_ramp() interpolator created input palette. na_color <color> colour value NA input values. base <number> log base. log base must strictly positive value != 1. limits <c(min, max)> limits scale's input. NULL, limits computed layer data. Values outside range limits clamped. breaks <numeric | function> breaks scale, allowing define piecewise scale. scale palette numeric range linearly interpolated (length) mapped onto breaks. Breaks outside limits scale discarded. NULL, breaks must either: numeric vector breaks function, taking numeric vector argument (e.g. breaks_linear()) Defaults breaks_trans() trans scale's transformer. n_ticks <number> number ticks display legend. Must >= 2. legend size grow shrink depending value. tick_format <function> label function taking vector ticks returning formatted ticks. col_label <string | function> template string label function customising column name legend. col_label string, {.col} may used represent col name col_label function, function must take single argument: col name legend <boolean> Indicate whether legend displayed scale. range <numeric> output range numeric scale. Must length >= 2. stats::approxfun() interpolator created input range. na_value <number> output value NA input values.","code":""},{"path":"https://qfes.github.io/rdeck/reference/scale_log.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Scale log — scale_log","text":"limits, whether explicitly supplied, computed data, must cross 0.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/scale_power.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale power — scale_power","title":"Scale power — scale_power","text":"Creates continuous power scale, input values transformed power_trans(exponent) calculating output. Power scales can useful transforming positively skewed data. square-root cube-root scale can helpful dealing right-skewed data. square-root scale can defined scale_power(exponent = 0.5, ...) (default). square-root scale good choice scaling radius point data, result linear scale area point.","code":""},{"path":"https://qfes.github.io/rdeck/reference/scale_power.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale power — scale_power","text":"","code":"scale_color_power(   col,   palette = scales::viridis_pal(),   na_color = \"#000000\",   exponent = 0.5,   limits = NULL,   breaks = NULL,   n_ticks = 6,   tick_format = format_number,   col_label = \"{.col}\",   legend = TRUE )  scale_power(   col,   range = 0:1,   na_value = 0,   exponent = 0.5,   limits = NULL,   breaks = NULL,   col_label = \"{.col}\",   legend = TRUE )"},{"path":"https://qfes.github.io/rdeck/reference/scale_power.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale power — scale_power","text":"col <name | string> name column containing data scaled. Must valid input rlang::ensym(); either named column (non-standard evaluation), string. Supports tidy-eval. palette <color|function> colour palette colour scale. Must : vector RGBA hex colours, palette generator function, taking length parameter, palette ramp created scales::colour_ramp() scales::colour_ramp() interpolator created input palette. na_color <color> colour value NA input values. exponent <number> power exponent. limits <c(min, max)> limits scale's input. NULL, limits computed layer data. Values outside range limits clamped. breaks <numeric | function> breaks scale, allowing define piecewise scale. scale palette numeric range linearly interpolated (length) mapped onto breaks. Breaks outside limits scale discarded. NULL, breaks must either: numeric vector breaks function, taking numeric vector argument (e.g. breaks_linear()) Defaults breaks_trans() trans scale's transformer. n_ticks <number> number ticks display legend. Must >= 2. legend size grow shrink depending value. tick_format <function> label function taking vector ticks returning formatted ticks. col_label <string | function> template string label function customising column name legend. col_label string, {.col} may used represent col name col_label function, function must take single argument: col name legend <boolean> Indicate whether legend displayed scale. range <numeric> output range numeric scale. Must length >= 2. stats::approxfun() interpolator created input range. na_value <number> output value NA input values.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/scale_quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale quantile — scale_quantile","title":"Scale quantile — scale_quantile","text":"Creates threshold scale, threshold breaks computed given quantile probs. Quantile scale legend ticks quantile values quantile break (including limits), quantile probabilities break. can overridden tick_format. Example: tick_format = function(x) .character(probs).","code":""},{"path":"https://qfes.github.io/rdeck/reference/scale_quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale quantile — scale_quantile","text":"","code":"scale_color_quantile(   col,   palette = scales::viridis_pal(),   na_color = \"#000000\",   probs = seq.int(0, 1, 0.25),   data = NULL,   tick_format = format_number,   col_label = \"{.col}\",   legend = TRUE )  scale_quantile(   col,   range = 0:1,   na_value = 0,   probs = seq.int(0, 1, 0.25),   data = NULL,   col_label = \"{.col}\",   legend = TRUE )"},{"path":"https://qfes.github.io/rdeck/reference/scale_quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale quantile — scale_quantile","text":"col <name | string> name column containing data scaled. Must valid input rlang::ensym(); either named column (non-standard evaluation), string. Supports tidy-eval. palette <color|function> colour palette colour scale. Must : vector RGBA hex colours, palette generator function, taking length parameter, palette ramp created scales::colour_ramp() scales::colour_ramp() interpolator created input palette. na_color <color> colour value NA input values. probs <numeric> quantile probabilities. Must 0 1. data <numeric> data used compute quantiles. NULL, taken layer data. tick_format <function> label function taking vector ticks returning formatted ticks. col_label <string | function> template string label function customising column name legend. col_label string, {.col} may used represent col name col_label function, function must take single argument: col name legend <boolean> Indicate whether legend displayed scale. range <numeric> output range numeric scale. Must length >= 2. stats::approxfun() interpolator created input range. na_value <number> output value NA input values.","code":""},{"path":"https://qfes.github.io/rdeck/reference/scale_quantile.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Scale quantile — scale_quantile","text":"quantiles computed input data, quantile scales incompatible layers load data url (e.g mvt_layer). quantiles remote data known, quantile scale can constructed manually scale_threshold().","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/scale_quantize.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale quantize — scale_quantize","title":"Scale quantize — scale_quantize","text":"Creates discrete quantize scale, n_breaks linearly spaced threshold breaks limits. scale can thought restricted special case scale_threshold(), discrete scale_linear().","code":""},{"path":"https://qfes.github.io/rdeck/reference/scale_quantize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale quantize — scale_quantize","text":"","code":"scale_color_quantize(   col,   palette = scales::viridis_pal(),   na_color = \"#000000\",   limits = NULL,   n_breaks = 6,   tick_format = format_number,   col_label = \"{.col}\",   legend = TRUE )  scale_quantize(   col,   range = 0:1,   na_value = 0,   limits = NULL,   n_breaks = 6,   col_label = \"{.col}\",   legend = TRUE )"},{"path":"https://qfes.github.io/rdeck/reference/scale_quantize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale quantize — scale_quantize","text":"col <name | string> name column containing data scaled. Must valid input rlang::ensym(); either named column (non-standard evaluation), string. Supports tidy-eval. palette <color|function> colour palette colour scale. Must : vector RGBA hex colours, palette generator function, taking length parameter, palette ramp created scales::colour_ramp() scales::colour_ramp() interpolator created input palette. na_color <color> colour value NA input values. limits <c(min, max)> limits scale's input. NULL, limits computed layer data. Values outside range limits clamped. n_breaks <integer> number linearly spaced breaks scale. break present legend colour scales. tick_format <function> label function taking vector ticks returning formatted ticks. col_label <string | function> template string label function customising column name legend. col_label string, {.col} may used represent col name col_label function, function must take single argument: col name legend <boolean> Indicate whether legend displayed scale. range <numeric> output range numeric scale. Must length >= 2. stats::approxfun() interpolator created input range. na_value <number> output value NA input values.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/scale_symlog.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale symlog — scale_symlog","title":"Scale symlog — scale_symlog","text":"Creates continuous log1p scale, input values transformed symlog_trans() calculating output. Unlike scale_log(), limits may cross 0. Symlog scales can useful transforming positively skewed data.","code":""},{"path":"https://qfes.github.io/rdeck/reference/scale_symlog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale symlog — scale_symlog","text":"","code":"scale_color_symlog(   col,   palette = scales::viridis_pal(),   na_color = \"#000000\",   limits = NULL,   breaks = NULL,   n_ticks = NULL,   tick_format = format_number,   col_label = \"{.col}\",   legend = TRUE )  scale_symlog(   col,   range = 0:1,   na_value = 0,   limits = NULL,   breaks = NULL,   col_label = \"{.col}\",   legend = TRUE )"},{"path":"https://qfes.github.io/rdeck/reference/scale_symlog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale symlog — scale_symlog","text":"col <name | string> name column containing data scaled. Must valid input rlang::ensym(); either named column (non-standard evaluation), string. Supports tidy-eval. palette <color|function> colour palette colour scale. Must : vector RGBA hex colours, palette generator function, taking length parameter, palette ramp created scales::colour_ramp() scales::colour_ramp() interpolator created input palette. na_color <color> colour value NA input values. limits <c(min, max)> limits scale's input. NULL, limits computed layer data. Values outside range limits clamped. breaks <numeric | function> breaks scale, allowing define piecewise scale. scale palette numeric range linearly interpolated (length) mapped onto breaks. Breaks outside limits scale discarded. NULL, breaks must either: numeric vector breaks function, taking numeric vector argument (e.g. breaks_linear()) Defaults breaks_trans() trans scale's transformer. n_ticks <number> number ticks display legend. Must >= 2. legend size grow shrink depending value. tick_format <function> label function taking vector ticks returning formatted ticks. col_label <string | function> template string label function customising column name legend. col_label string, {.col} may used represent col name col_label function, function must take single argument: col name legend <boolean> Indicate whether legend displayed scale. range <numeric> output range numeric scale. Must length >= 2. stats::approxfun() interpolator created input range. na_value <number> output value NA input values.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/scale_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale threshold — scale_threshold","title":"Scale threshold — scale_threshold","text":"Creates discrete threshold scale. Threshold scales slice palette range length(breaks) + 1 bins, break defining threshold 2 bins. Threshold scales can used create discrete scale, using either manual breaks generated breaks via transform (e.g. breaks_power(n = 6, exponent = 0.5) discrete sqrt scale).","code":""},{"path":"https://qfes.github.io/rdeck/reference/scale_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale threshold — scale_threshold","text":"","code":"scale_color_threshold(   col,   palette = scales::viridis_pal(),   na_color = \"#000000\",   limits = NULL,   breaks = 0.5,   tick_format = format_number,   col_label = \"{.col}\",   legend = TRUE )  scale_threshold(   col,   range = 0:1,   na_value = 0,   limits = NULL,   breaks = 0.5,   tick_format = format_number,   col_label = \"{.col}\",   legend = TRUE )"},{"path":"https://qfes.github.io/rdeck/reference/scale_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale threshold — scale_threshold","text":"col <name | string> name column containing data scaled. Must valid input rlang::ensym(); either named column (non-standard evaluation), string. Supports tidy-eval. palette <color|function> colour palette colour scale. Must : vector RGBA hex colours, palette generator function, taking length parameter, palette ramp created scales::colour_ramp() scales::colour_ramp() interpolator created input palette. na_color <color> colour value NA input values. limits <c(min, max)> limits scale's input. NULL, limits computed layer data. Values outside range limits clamped. breaks <numeric | function> threshold breaks scale. scale palette numeric range linearly interpolated (length) mapped onto breaks. Breaks outside limits scale discarded. NULL, breaks must either: numeric vector breaks function, taking numeric vector argument (e.g. breaks_linear()) Breaks must increasing order. break present legend colour scales. tick_format <function> label function taking vector ticks returning formatted ticks. col_label <string | function> template string label function customising column name legend. col_label string, {.col} may used represent col name col_label function, function must take single argument: col name legend <boolean> Indicate whether legend displayed scale. range <numeric> output range numeric scale. Must length >= 2. stats::approxfun() interpolator created input range. na_value <number> output value NA input values.","code":""},{"path":"https://qfes.github.io/rdeck/reference/scale_threshold.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Scale threshold — scale_threshold","text":"Threshold scales require limits, breaks_trans() .","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/scatterplot_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Scatterplot Layer — scatterplot_layer","title":"Scatterplot Layer — scatterplot_layer","text":"Scatterplot Layer","code":""},{"path":"https://qfes.github.io/rdeck/reference/scatterplot_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scatterplot Layer — scatterplot_layer","text":"","code":"add_scatterplot_layer(   rdeck,   ...,   id = uuid::UUIDgenerate(),   name = \"ScatterplotLayer\",   group_name = NULL,   data = NULL,   visible = TRUE,   pickable = FALSE,   opacity = 1,   wrap_longitude = FALSE,   position_format = \"XYZ\",   color_format = \"RGBA\",   auto_highlight = FALSE,   highlight_color = \"#00008080\",   radius_units = \"meters\",   radius_scale = 1,   radius_min_pixels = 0,   radius_max_pixels = 9007199254740991,   line_width_units = \"meters\",   line_width_scale = 1,   line_width_min_pixels = 0,   line_width_max_pixels = 9007199254740991,   stroked = FALSE,   filled = TRUE,   billboard = FALSE,   antialiasing = TRUE,   get_position = position,   get_radius = 1,   get_fill_color = \"#000000ff\",   get_line_color = \"#000000ff\",   get_line_width = 1,   blending_mode = \"normal\",   visibility_toggle = TRUE,   tooltip = NULL )  update_scatterplot_layer(   rdeck,   ...,   id,   name = cur_value(),   group_name = cur_value(),   data = cur_value(),   visible = cur_value(),   pickable = cur_value(),   opacity = cur_value(),   wrap_longitude = cur_value(),   position_format = cur_value(),   color_format = cur_value(),   auto_highlight = cur_value(),   highlight_color = cur_value(),   radius_units = cur_value(),   radius_scale = cur_value(),   radius_min_pixels = cur_value(),   radius_max_pixels = cur_value(),   line_width_units = cur_value(),   line_width_scale = cur_value(),   line_width_min_pixels = cur_value(),   line_width_max_pixels = cur_value(),   stroked = cur_value(),   filled = cur_value(),   billboard = cur_value(),   antialiasing = cur_value(),   get_position = cur_value(),   get_radius = cur_value(),   get_fill_color = cur_value(),   get_line_color = cur_value(),   get_line_width = cur_value(),   blending_mode = cur_value(),   visibility_toggle = cur_value(),   tooltip = cur_value() )"},{"path":"https://qfes.github.io/rdeck/reference/scatterplot_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scatterplot Layer — scatterplot_layer","text":"rdeck <rdeck | rdeck_proxy> rdeck map instance. ... Additional parameters forwarded deck.gl javascript without validation processing. dots must named camelCased serialised. warning raised dots used, warning class rdeck_dots_nonempty. id <string> layer's identifier must unique among layers type map. Defaults uuid::UUIDgenerate(), explicitly defined updatable layers shiny application. name <string> Identifies layer tooltips legends. need unique, brief. Defaults deck.gl class name layer. group_name <string> Defines group layer belongs . Currently effective layer selector, visibility_toggle = TRUE. data <data.frame | sf | string> layer's data. Data frames sf objects contain columns referenced layer's accessors. Strings interpreted URL data retrieved dynamically browser. visible <boolean> Determines whether layer visible ; also determines whether legend elements layer displayed. pickable <boolean> Determines layer responds pointer / touch events. opacity <number> Determines layer's opacity. wrap_longitude <boolean> Normalises geometry longitudes. position_format <\"XY\" | \"XYZ\"> Determines whether coordinate two (XY) three (XYZ) elements. color_format <\"RGB\" | \"RGBA\"> Determines whether alpha channel colours ignored accessors, making colours opaque. auto_highlight <boolean> TRUE, current object hovered cursor highlighted highlight_color. highlight_color <accessor | scale | color> auto_highlight pickable enabled, highlight_color determines colour currently highlighted object. single colour value supplied, colour used highlight objects layer. Per-object highlighting achieved colour scale, tidy-eval column colours. radius_units <\"pixels\" | \"common\" | \"meters\"> units point radius. radius_scale <number> radius multiplier points. radius_min_pixels <number> minimum radius pixels. radius_max_pixels <number> maximum radius pixels. line_width_units <\"pixels\" | \"common\" | \"meters\"> units line width. line_width_scale <number> line width multiplier. line_width_min_pixels <number> minimum line width pixels. line_width_max_pixels <number> maximum line width pixels. stroked <boolean> TRUE, draw outline around object. filled <boolean> TRUE, draw filled area point. billboard <boolean> TRUE, circles always face camera; FALSE circles face (z). antialiasing <boolean> TRUE, circles rendered smoothed edges. get_position <accessor> position geometry column, either sfc_POINT sfc_MULTIPOINT column CRS EPSG:4326. Supports tidy-eval. get_radius <accessor | scale | number> radius point, units specified radius_units. Accepts single numeric value, numeric scale, tidy-eval column numbers. get_fill_color <accessor | scale | color> fill colour object. Accepts single colour value, colour scale, tidy-eval column colours. get_line_color <accessor | scale | color> line colour object. Accepts single colour value, colour scale, tidy-eval column colours. get_line_width <accessor | scale | number> outline object units specified line_width_units. Accepts single numeric value, numeric scale, tidy-eval column numbers. blending_mode <\"normal\" | \"additive\" | \"subtractive\"> Sets blending mode. Blending modes: normal: Normal blending alter colours overlapping objects. additive: Additive blending adds colours overlapping objects. Useful highlighting dot density dark maps. subtractive: Subtractive blending darkens overlapping objects. Useful highlighting dot density light maps. visibility_toggle <boolean> Whether layer appear layer selector. tooltip <tooltip> Defines columns (order) displayed layer tooltip, pickable == TRUE. Supports tidy-select data data.frame. sfc columns always removed.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/scenegraph_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Scenegraph Layer — scenegraph_layer","title":"Scenegraph Layer — scenegraph_layer","text":"Scenegraph Layer","code":""},{"path":"https://qfes.github.io/rdeck/reference/scenegraph_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scenegraph Layer — scenegraph_layer","text":"","code":"add_scenegraph_layer(   rdeck,   ...,   id = uuid::UUIDgenerate(),   name = \"ScenegraphLayer\",   group_name = NULL,   data = NULL,   visible = TRUE,   pickable = FALSE,   opacity = 1,   wrap_longitude = FALSE,   position_format = \"XYZ\",   color_format = \"RGBA\",   auto_highlight = FALSE,   highlight_color = \"#00008080\",   scenegraph = NULL,   get_scene = NULL,   get_animator = NULL,   size_scale = 1,   size_min_pixels = 0,   size_max_pixels = 9007199254740991,   get_position = position,   get_color = \"#ffffffff\",   get_orientation = c(0, 0, 0),   get_scale = c(1, 1, 1),   get_translation = c(0, 0, 0),   get_transform_matrix = NULL,   blending_mode = \"normal\",   visibility_toggle = TRUE,   tooltip = NULL )  update_scenegraph_layer(   rdeck,   ...,   id,   name = cur_value(),   group_name = cur_value(),   data = cur_value(),   visible = cur_value(),   pickable = cur_value(),   opacity = cur_value(),   wrap_longitude = cur_value(),   position_format = cur_value(),   color_format = cur_value(),   auto_highlight = cur_value(),   highlight_color = cur_value(),   scenegraph = cur_value(),   get_scene = cur_value(),   get_animator = cur_value(),   size_scale = cur_value(),   size_min_pixels = cur_value(),   size_max_pixels = cur_value(),   get_position = cur_value(),   get_color = cur_value(),   get_orientation = cur_value(),   get_scale = cur_value(),   get_translation = cur_value(),   get_transform_matrix = cur_value(),   blending_mode = cur_value(),   visibility_toggle = cur_value(),   tooltip = cur_value() )"},{"path":"https://qfes.github.io/rdeck/reference/scenegraph_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scenegraph Layer — scenegraph_layer","text":"rdeck <rdeck | rdeck_proxy> rdeck map instance. ... Additional parameters forwarded deck.gl javascript without validation processing. dots must named camelCased serialised. warning raised dots used, warning class rdeck_dots_nonempty. id <string> layer's identifier must unique among layers type map. Defaults uuid::UUIDgenerate(), explicitly defined updatable layers shiny application. name <string> Identifies layer tooltips legends. need unique, brief. Defaults deck.gl class name layer. group_name <string> Defines group layer belongs . Currently effective layer selector, visibility_toggle = TRUE. data <data.frame | sf | string> layer's data. Data frames sf objects contain columns referenced layer's accessors. Strings interpreted URL data retrieved dynamically browser. visible <boolean> Determines whether layer visible ; also determines whether legend elements layer displayed. pickable <boolean> Determines layer responds pointer / touch events. opacity <number> Determines layer's opacity. wrap_longitude <boolean> Normalises geometry longitudes. position_format <\"XY\" | \"XYZ\"> Determines whether coordinate two (XY) three (XYZ) elements. color_format <\"RGB\" | \"RGBA\"> Determines whether alpha channel colours ignored accessors, making colours opaque. auto_highlight <boolean> TRUE, current object hovered cursor highlighted highlight_color. highlight_color <accessor | scale | color> auto_highlight pickable enabled, highlight_color determines colour currently highlighted object. single colour value supplied, colour used highlight objects layer. Per-object highlighting achieved colour scale, tidy-eval column colours. scenegraph object get_scene function get_animator function size_scale <number> size multiplier. size_min_pixels <number> minimum size pixels. size_max_pixels <number> maximum size pixels. get_position <accessor> position geometry column, either sfc_POINT sfc_MULTIPOINT column CRS EPSG:4326. Supports tidy-eval. get_color <accessor | scale | color> colour object. Accepts single colour value, colour scale, tidy-eval column colours. get_orientation <accessor> yet supported. get_scale <accessor> yet supported. get_translation <accessor> yet supported. get_transform_matrix <accessor> yet supported. blending_mode <\"normal\" | \"additive\" | \"subtractive\"> Sets blending mode. Blending modes: normal: Normal blending alter colours overlapping objects. additive: Additive blending adds colours overlapping objects. Useful highlighting dot density dark maps. subtractive: Subtractive blending darkens overlapping objects. Useful highlighting dot density light maps. visibility_toggle <boolean> Whether layer appear layer selector. tooltip <tooltip> Defines columns (order) displayed layer tooltip, pickable == TRUE. Supports tidy-select data data.frame. sfc columns always removed.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/screen_grid_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Screen Grid Layer — screen_grid_layer","title":"Screen Grid Layer — screen_grid_layer","text":"Screen Grid Layer","code":""},{"path":"https://qfes.github.io/rdeck/reference/screen_grid_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Screen Grid Layer — screen_grid_layer","text":"","code":"add_screen_grid_layer(   rdeck,   ...,   id = uuid::UUIDgenerate(),   name = \"ScreenGridLayer\",   group_name = NULL,   data = NULL,   visible = TRUE,   pickable = FALSE,   opacity = 1,   wrap_longitude = FALSE,   position_format = \"XYZ\",   color_format = \"RGBA\",   auto_highlight = FALSE,   highlight_color = \"#00008080\",   cell_size_pixels = 100,   cell_margin_pixels = 2,   color_domain = NULL,   color_range = c(\"#ffffb2\", \"#fed976\", \"#feb24c\", \"#fd8d3c\", \"#f03b20\", \"#bd0026\"),   get_position = position,   get_weight = 1,   gpu_aggregation = TRUE,   aggregation = \"SUM\",   blending_mode = \"normal\",   visibility_toggle = TRUE )  update_screen_grid_layer(   rdeck,   ...,   id,   name = cur_value(),   group_name = cur_value(),   data = cur_value(),   visible = cur_value(),   pickable = cur_value(),   opacity = cur_value(),   wrap_longitude = cur_value(),   position_format = cur_value(),   color_format = cur_value(),   auto_highlight = cur_value(),   highlight_color = cur_value(),   cell_size_pixels = cur_value(),   cell_margin_pixels = cur_value(),   color_domain = cur_value(),   color_range = cur_value(),   get_position = cur_value(),   get_weight = cur_value(),   gpu_aggregation = cur_value(),   aggregation = cur_value(),   blending_mode = cur_value(),   visibility_toggle = cur_value() )"},{"path":"https://qfes.github.io/rdeck/reference/screen_grid_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Screen Grid Layer — screen_grid_layer","text":"rdeck <rdeck | rdeck_proxy> rdeck map instance. ... Additional parameters forwarded deck.gl javascript without validation processing. dots must named camelCased serialised. warning raised dots used, warning class rdeck_dots_nonempty. id <string> layer's identifier must unique among layers type map. Defaults uuid::UUIDgenerate(), explicitly defined updatable layers shiny application. name <string> Identifies layer tooltips legends. need unique, brief. Defaults deck.gl class name layer. group_name <string> Defines group layer belongs . Currently effective layer selector, visibility_toggle = TRUE. data <data.frame | sf | string> layer's data. Data frames sf objects contain columns referenced layer's accessors. Strings interpreted URL data retrieved dynamically browser. visible <boolean> Determines whether layer visible ; also determines whether legend elements layer displayed. pickable <boolean> Determines layer responds pointer / touch events. opacity <number> Determines layer's opacity. wrap_longitude <boolean> Normalises geometry longitudes. position_format <\"XY\" | \"XYZ\"> Determines whether coordinate two (XY) three (XYZ) elements. color_format <\"RGB\" | \"RGBA\"> Determines whether alpha channel colours ignored accessors, making colours opaque. auto_highlight <boolean> TRUE, current object hovered cursor highlighted highlight_color. highlight_color <accessor | scale | color> auto_highlight pickable enabled, highlight_color determines colour currently highlighted object. single colour value supplied, colour used highlight objects layer. Per-object highlighting achieved colour scale, tidy-eval column colours. cell_size_pixels <number> Unit width / height bins. cell_margin_pixels <number> Cell margin size pixels. color_domain <number> colour scale domain, default set range aggregated weights bin. color_range <color> colour palette. color_domain divided length(color_range) equal segments, mapped one color color_range. get_position <accessor> position geometry column, either sfc_POINT sfc_MULTIPOINT column CRS EPSG:4326. Supports tidy-eval. get_weight <accessor | scale | number> weight object. Accepts single numeric value, numeric scale, tidy-eval column numbers. gpu_aggregation <boolean> TRUE, aggregation performed GPU supported. Requires WebGL2. aggregation <\"SUM\" | \"MEAN\" | \"MIN\" | \"MAX\"> Defines aggregation function. blending_mode <\"normal\" | \"additive\" | \"subtractive\"> Sets blending mode. Blending modes: normal: Normal blending alter colours overlapping objects. additive: Additive blending adds colours overlapping objects. Useful highlighting dot density dark maps. subtractive: Subtractive blending darkens overlapping objects. Useful highlighting dot density light maps. visibility_toggle <boolean> Whether layer appear layer selector.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/set_layer_visibility.html","id":null,"dir":"Reference","previous_headings":"","what":"Set layer visibility — set_layer_visibility","title":"Set layer visibility — set_layer_visibility","text":"Sets layer's visibility whether selectable layer selector. Setting either visible visibility_toggle cur_value() change browser.","code":""},{"path":"https://qfes.github.io/rdeck/reference/set_layer_visibility.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set layer visibility — set_layer_visibility","text":"","code":"set_layer_visibility(   rdeck,   id,   visible = cur_value(),   visibility_toggle = cur_value() )"},{"path":"https://qfes.github.io/rdeck/reference/set_layer_visibility.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set layer visibility — set_layer_visibility","text":"rdeck <rdeck_proxy> rdeck proxy object id <string> layer's identifier must unique among layers type map. Defaults uuid::UUIDgenerate(), explicitly defined updatable layers shiny application. visible <boolean> Determines whether layer visible ; also determines whether legend elements layer displayed. visibility_toggle <boolean> Whether layer appear layer selector.","code":""},{"path":"https://qfes.github.io/rdeck/reference/sf_column.html","id":null,"dir":"Reference","previous_headings":"","what":"SF Column — sf_column","title":"SF Column — sf_column","text":"Defines flag indicates active geometry column sf object used layer's geometry accessor().","code":""},{"path":"https://qfes.github.io/rdeck/reference/sf_column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SF Column — sf_column","text":"","code":"sf_column()"},{"path":"https://qfes.github.io/rdeck/reference/sfc_point.html","id":null,"dir":"Reference","previous_headings":"","what":"SFC Point — sfc_point","title":"SFC Point — sfc_point","text":"Create sfc_point column coordinate vectors","code":""},{"path":"https://qfes.github.io/rdeck/reference/sfc_point.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SFC Point — sfc_point","text":"","code":"sfc_point(x, y, z = NULL, crs = 4326)"},{"path":"https://qfes.github.io/rdeck/reference/sfc_point.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SFC Point — sfc_point","text":"x x coordinate y y coordinate z z coordinate optional crs coordinate reference system","code":""},{"path":"https://qfes.github.io/rdeck/reference/shiny-events.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny events data — shiny-events","title":"Shiny events data — shiny-events","text":"Utilities retrieving map event data shiny application.","code":""},{"path":"https://qfes.github.io/rdeck/reference/shiny-events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny events data — shiny-events","text":"","code":"get_view_bounds(rdeck, session = shiny::getDefaultReactiveDomain())  get_view_state(rdeck, session = shiny::getDefaultReactiveDomain())  get_clicked_coordinates(rdeck, session = shiny::getDefaultReactiveDomain())  get_clicked_layer(rdeck, session = shiny::getDefaultReactiveDomain())  get_clicked_object(rdeck, session = shiny::getDefaultReactiveDomain())  get_edited_features(rdeck, session = shiny::getDefaultReactiveDomain())"},{"path":"https://qfes.github.io/rdeck/reference/shiny-events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny events data — shiny-events","text":"rdeck <rdeck_proxy | string> map, map id session <ShinySession> shiny session","code":""},{"path":"https://qfes.github.io/rdeck/reference/shiny-events.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Shiny events data — shiny-events","text":"get_view_bounds(): Get current map bounding box get_view_state(): Get map view state get_clicked_coordinates(): Get last clicked coordinates get_clicked_layer(): Get last clicked layer (NULL) get_clicked_object(): Get last clicked object (NULL) get_edited_features(): Get edited features","code":""},{"path":"https://qfes.github.io/rdeck/reference/simple_mesh_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple Mesh Layer — simple_mesh_layer","title":"Simple Mesh Layer — simple_mesh_layer","text":"Simple Mesh Layer","code":""},{"path":"https://qfes.github.io/rdeck/reference/simple_mesh_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple Mesh Layer — simple_mesh_layer","text":"","code":"add_simple_mesh_layer(   rdeck,   ...,   id = uuid::UUIDgenerate(),   name = \"SimpleMeshLayer\",   group_name = NULL,   data = NULL,   visible = TRUE,   pickable = FALSE,   opacity = 1,   wrap_longitude = FALSE,   position_format = \"XYZ\",   color_format = \"RGBA\",   auto_highlight = FALSE,   highlight_color = \"#00008080\",   mesh = NULL,   texture = NULL,   size_scale = 1,   wireframe = FALSE,   material = TRUE,   get_position = position,   get_color = \"#000000ff\",   get_orientation = c(0, 0, 0),   get_scale = c(1, 1, 1),   get_translation = c(0, 0, 0),   get_transform_matrix = NULL,   blending_mode = \"normal\",   visibility_toggle = TRUE,   tooltip = NULL )  update_simple_mesh_layer(   rdeck,   ...,   id,   name = cur_value(),   group_name = cur_value(),   data = cur_value(),   visible = cur_value(),   pickable = cur_value(),   opacity = cur_value(),   wrap_longitude = cur_value(),   position_format = cur_value(),   color_format = cur_value(),   auto_highlight = cur_value(),   highlight_color = cur_value(),   mesh = cur_value(),   texture = cur_value(),   size_scale = cur_value(),   wireframe = cur_value(),   material = cur_value(),   get_position = cur_value(),   get_color = cur_value(),   get_orientation = cur_value(),   get_scale = cur_value(),   get_translation = cur_value(),   get_transform_matrix = cur_value(),   blending_mode = cur_value(),   visibility_toggle = cur_value(),   tooltip = cur_value() )"},{"path":"https://qfes.github.io/rdeck/reference/simple_mesh_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple Mesh Layer — simple_mesh_layer","text":"rdeck <rdeck | rdeck_proxy> rdeck map instance. ... Additional parameters forwarded deck.gl javascript without validation processing. dots must named camelCased serialised. warning raised dots used, warning class rdeck_dots_nonempty. id <string> layer's identifier must unique among layers type map. Defaults uuid::UUIDgenerate(), explicitly defined updatable layers shiny application. name <string> Identifies layer tooltips legends. need unique, brief. Defaults deck.gl class name layer. group_name <string> Defines group layer belongs . Currently effective layer selector, visibility_toggle = TRUE. data <data.frame | sf | string> layer's data. Data frames sf objects contain columns referenced layer's accessors. Strings interpreted URL data retrieved dynamically browser. visible <boolean> Determines whether layer visible ; also determines whether legend elements layer displayed. pickable <boolean> Determines layer responds pointer / touch events. opacity <number> Determines layer's opacity. wrap_longitude <boolean> Normalises geometry longitudes. position_format <\"XY\" | \"XYZ\"> Determines whether coordinate two (XY) three (XYZ) elements. color_format <\"RGB\" | \"RGBA\"> Determines whether alpha channel colours ignored accessors, making colours opaque. auto_highlight <boolean> TRUE, current object hovered cursor highlighted highlight_color. highlight_color <accessor | scale | color> auto_highlight pickable enabled, highlight_color determines colour currently highlighted object. single colour value supplied, colour used highlight objects layer. Per-object highlighting achieved colour scale, tidy-eval column colours. mesh object texture yet supported. size_scale <number> size multiplier. wireframe <boolean> TRUE extruded == TRUE, draw line wireframe object. outline horizontal lines closing top bottom polygons vertical lines vertex polygon. material <boolean> get_position <accessor> position geometry column, either sfc_POINT sfc_MULTIPOINT column CRS EPSG:4326. Supports tidy-eval. get_color <accessor | scale | color> colour object. Accepts single colour value, colour scale, tidy-eval column colours. get_orientation <accessor> yet supported. get_scale <accessor> yet supported. get_translation <accessor> yet supported. get_transform_matrix <accessor> yet supported. blending_mode <\"normal\" | \"additive\" | \"subtractive\"> Sets blending mode. Blending modes: normal: Normal blending alter colours overlapping objects. additive: Additive blending adds colours overlapping objects. Useful highlighting dot density dark maps. subtractive: Subtractive blending darkens overlapping objects. Useful highlighting dot density light maps. visibility_toggle <boolean> Whether layer appear layer selector. tooltip <tooltip> Defines columns (order) displayed layer tooltip, pickable == TRUE. Supports tidy-select data data.frame. sfc columns always removed.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/solid_polygon_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Solid Polygon Layer — solid_polygon_layer","title":"Solid Polygon Layer — solid_polygon_layer","text":"Solid Polygon Layer","code":""},{"path":"https://qfes.github.io/rdeck/reference/solid_polygon_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solid Polygon Layer — solid_polygon_layer","text":"","code":"add_solid_polygon_layer(   rdeck,   ...,   id = uuid::UUIDgenerate(),   name = \"SolidPolygonLayer\",   group_name = NULL,   data = NULL,   visible = TRUE,   pickable = FALSE,   opacity = 1,   wrap_longitude = FALSE,   position_format = \"XYZ\",   color_format = \"RGBA\",   auto_highlight = FALSE,   highlight_color = \"#00008080\",   filled = TRUE,   extruded = FALSE,   wireframe = FALSE,   elevation_scale = 1,   get_polygon = polygon,   get_elevation = 1000,   get_fill_color = \"#000000ff\",   get_line_color = \"#000000ff\",   material = TRUE,   blending_mode = \"normal\",   visibility_toggle = TRUE,   tooltip = NULL )  update_solid_polygon_layer(   rdeck,   ...,   id,   name = cur_value(),   group_name = cur_value(),   data = cur_value(),   visible = cur_value(),   pickable = cur_value(),   opacity = cur_value(),   wrap_longitude = cur_value(),   position_format = cur_value(),   color_format = cur_value(),   auto_highlight = cur_value(),   highlight_color = cur_value(),   filled = cur_value(),   extruded = cur_value(),   wireframe = cur_value(),   elevation_scale = cur_value(),   get_polygon = cur_value(),   get_elevation = cur_value(),   get_fill_color = cur_value(),   get_line_color = cur_value(),   material = cur_value(),   blending_mode = cur_value(),   visibility_toggle = cur_value(),   tooltip = cur_value() )"},{"path":"https://qfes.github.io/rdeck/reference/solid_polygon_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solid Polygon Layer — solid_polygon_layer","text":"rdeck <rdeck | rdeck_proxy> rdeck map instance. ... Additional parameters forwarded deck.gl javascript without validation processing. dots must named camelCased serialised. warning raised dots used, warning class rdeck_dots_nonempty. id <string> layer's identifier must unique among layers type map. Defaults uuid::UUIDgenerate(), explicitly defined updatable layers shiny application. name <string> Identifies layer tooltips legends. need unique, brief. Defaults deck.gl class name layer. group_name <string> Defines group layer belongs . Currently effective layer selector, visibility_toggle = TRUE. data <data.frame | sf | string> layer's data. Data frames sf objects contain columns referenced layer's accessors. Strings interpreted URL data retrieved dynamically browser. visible <boolean> Determines whether layer visible ; also determines whether legend elements layer displayed. pickable <boolean> Determines layer responds pointer / touch events. opacity <number> Determines layer's opacity. wrap_longitude <boolean> Normalises geometry longitudes. position_format <\"XY\" | \"XYZ\"> Determines whether coordinate two (XY) three (XYZ) elements. color_format <\"RGB\" | \"RGBA\"> Determines whether alpha channel colours ignored accessors, making colours opaque. auto_highlight <boolean> TRUE, current object hovered cursor highlighted highlight_color. highlight_color <accessor | scale | color> auto_highlight pickable enabled, highlight_color determines colour currently highlighted object. single colour value supplied, colour used highlight objects layer. Per-object highlighting achieved colour scale, tidy-eval column colours. filled <boolean> TRUE, draw filled area point. extruded <boolean> TRUE, extrude objects along z-axis; FALSE, objects flat. wireframe <boolean> TRUE extruded == TRUE, draw line wireframe object. outline horizontal lines closing top bottom polygons vertical lines vertex polygon. elevation_scale <number> elevation multiplier. get_polygon <accessor> polygon geometry column, either sfc_POLYGON sfc_MULTIPOLYGON column CRS EPSG:4326. Supports tidy-eval. get_elevation <accessor | scale | number> elevation extrude object z-axis. Height units metres. Accepts single numeric value, numeric scale, tidy-eval column numbers. get_fill_color <accessor | scale | color> fill colour object. Accepts single colour value, colour scale, tidy-eval column colours. get_line_color <accessor | scale | color> line colour object. Accepts single colour value, colour scale, tidy-eval column colours. material <boolean> blending_mode <\"normal\" | \"additive\" | \"subtractive\"> Sets blending mode. Blending modes: normal: Normal blending alter colours overlapping objects. additive: Additive blending adds colours overlapping objects. Useful highlighting dot density dark maps. subtractive: Subtractive blending darkens overlapping objects. Useful highlighting dot density light maps. visibility_toggle <boolean> Whether layer appear layer selector. tooltip <tooltip> Defines columns (order) displayed layer tooltip, pickable == TRUE. Supports tidy-select data data.frame. sfc columns always removed.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/symlog_trans.html","id":null,"dir":"Reference","previous_headings":"","what":"SymLog transformation — symlog_trans","title":"SymLog transformation — symlog_trans","text":"Applies log1p transform: y = log1p(abs(x)), : x input vector","code":""},{"path":"https://qfes.github.io/rdeck/reference/symlog_trans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SymLog transformation — symlog_trans","text":"","code":"symlog_trans()"},{"path":"https://qfes.github.io/rdeck/reference/symlog_trans.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SymLog transformation — symlog_trans","text":"x negative, result multiplied -1.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/terrain_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Terrain Layer — terrain_layer","title":"Terrain Layer — terrain_layer","text":"Terrain Layer","code":""},{"path":"https://qfes.github.io/rdeck/reference/terrain_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Terrain Layer — terrain_layer","text":"","code":"add_terrain_layer(   rdeck,   ...,   id = uuid::UUIDgenerate(),   name = \"TerrainLayer\",   group_name = NULL,   data = NULL,   visible = TRUE,   pickable = FALSE,   opacity = 1,   wrap_longitude = FALSE,   position_format = \"XYZ\",   color_format = \"RGBA\",   auto_highlight = FALSE,   highlight_color = \"#00008080\",   get_tile_data = NULL,   extent = NULL,   tile_size = 512,   max_zoom = NULL,   min_zoom = 0,   max_cache_size = NULL,   max_cache_byte_size = NULL,   refinement_strategy = \"best-available\",   z_range = NULL,   max_requests = 6,   zoom_offset = 0,   elevation_data = NULL,   texture = NULL,   mesh_max_error = 4,   bounds = NULL,   color = \"#ffffff\",   elevation_decoder = list(rScaler = 1, gScaler = 0, bScaler = 0, offset = 0),   worker_url = NULL,   wireframe = FALSE,   material = TRUE,   blending_mode = \"normal\",   visibility_toggle = TRUE,   tooltip = NULL )  update_terrain_layer(   rdeck,   ...,   id,   name = cur_value(),   group_name = cur_value(),   data = cur_value(),   visible = cur_value(),   pickable = cur_value(),   opacity = cur_value(),   wrap_longitude = cur_value(),   position_format = cur_value(),   color_format = cur_value(),   auto_highlight = cur_value(),   highlight_color = cur_value(),   get_tile_data = cur_value(),   extent = cur_value(),   tile_size = cur_value(),   max_zoom = cur_value(),   min_zoom = cur_value(),   max_cache_size = cur_value(),   max_cache_byte_size = cur_value(),   refinement_strategy = cur_value(),   z_range = cur_value(),   max_requests = cur_value(),   zoom_offset = cur_value(),   elevation_data = cur_value(),   texture = cur_value(),   mesh_max_error = cur_value(),   bounds = cur_value(),   color = cur_value(),   elevation_decoder = cur_value(),   worker_url = cur_value(),   wireframe = cur_value(),   material = cur_value(),   blending_mode = cur_value(),   visibility_toggle = cur_value(),   tooltip = cur_value() )"},{"path":"https://qfes.github.io/rdeck/reference/terrain_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Terrain Layer — terrain_layer","text":"rdeck <rdeck | rdeck_proxy> rdeck map instance. ... Additional parameters forwarded deck.gl javascript without validation processing. dots must named camelCased serialised. warning raised dots used, warning class rdeck_dots_nonempty. id <string> layer's identifier must unique among layers type map. Defaults uuid::UUIDgenerate(), explicitly defined updatable layers shiny application. name <string> Identifies layer tooltips legends. need unique, brief. Defaults deck.gl class name layer. group_name <string> Defines group layer belongs . Currently effective layer selector, visibility_toggle = TRUE. data <data.frame | sf | string> layer's data. Data frames sf objects contain columns referenced layer's accessors. Strings interpreted URL data retrieved dynamically browser. visible <boolean> Determines whether layer visible ; also determines whether legend elements layer displayed. pickable <boolean> Determines layer responds pointer / touch events. opacity <number> Determines layer's opacity. wrap_longitude <boolean> Normalises geometry longitudes. position_format <\"XY\" | \"XYZ\"> Determines whether coordinate two (XY) three (XYZ) elements. color_format <\"RGB\" | \"RGBA\"> Determines whether alpha channel colours ignored accessors, making colours opaque. auto_highlight <boolean> TRUE, current object hovered cursor highlighted highlight_color. highlight_color <accessor | scale | color> auto_highlight pickable enabled, highlight_color determines colour currently highlighted object. single colour value supplied, colour used highlight objects layer. Per-object highlighting achieved colour scale, tidy-eval column colours. get_tile_data <JS> retrieves data tile. See deck.gl getTileData. extent <c(min_x, min_y, max_x, max_y)> Tiles bounding box rendered min_zoom, zoomed min_zoom. tile_size <number> power 2 pixel dimensions tile. max_zoom <number> Tiles zoom level shown. Defaults NULL. min_zoom <number> Tiles zoom level shown. Defaults 0. max_cache_size <number> Maximum number tiles can cached. Defaults 5x number tiles current viewport. max_cache_byte_size <number> Maximum memory used caching tiles. refinement_strategy <\"best-available\" | \"-overlap\" | \"never\"> tile layer refines visibility tiles. Defaults \"best-available\". z_range <c(min, max)> Array representing range heights tile. max_requests <number> Maximum number concurrent HTTP requests across specified tile provider domains. negative number supplied throttling occurs (HTTP/2 ). zoom_offset <int> offset changes zoom level tiles fetched. elevation_data url texture yet supported. mesh_max_error number bounds <bbox> st_bbox object CRS EPSG:4326. Must supplied using non-tiled elevation data. color color elevation_decoder object worker_url string wireframe <boolean> TRUE extruded == TRUE, draw line wireframe object. outline horizontal lines closing top bottom polygons vertical lines vertex polygon. material <boolean> blending_mode <\"normal\" | \"additive\" | \"subtractive\"> Sets blending mode. Blending modes: normal: Normal blending alter colours overlapping objects. additive: Additive blending adds colours overlapping objects. Useful highlighting dot density dark maps. subtractive: Subtractive blending darkens overlapping objects. Useful highlighting dot density light maps. visibility_toggle <boolean> Whether layer appear layer selector. tooltip <tooltip> Defines columns (order) displayed layer tooltip, pickable == TRUE. Supports tidy-select data data.frame. sfc columns always removed.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/text_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Text Layer — text_layer","title":"Text Layer — text_layer","text":"Text Layer","code":""},{"path":"https://qfes.github.io/rdeck/reference/text_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Text Layer — text_layer","text":"","code":"add_text_layer(   rdeck,   ...,   id = uuid::UUIDgenerate(),   name = \"TextLayer\",   group_name = NULL,   data = NULL,   visible = TRUE,   pickable = FALSE,   opacity = 1,   wrap_longitude = FALSE,   position_format = \"XYZ\",   color_format = \"RGBA\",   auto_highlight = FALSE,   highlight_color = \"#00008080\",   billboard = TRUE,   size_scale = 1,   size_units = \"pixels\",   size_min_pixels = 0,   size_max_pixels = 9007199254740991,   background = FALSE,   get_background_color = \"#ffffffff\",   get_border_color = \"#000000ff\",   get_border_width = 0,   background_padding = c(0, 0, 0, 0),   font_family = \"Roboto, Helvetica, Arial, san-serif\",   font_weight = \"normal\",   line_height = 1,   outline_width = 0,   outline_color = \"#000000ff\",   font_settings = list(),   word_break = \"break-word\",   max_width = -1,   get_text = text,   get_position = position,   get_color = \"#000000ff\",   get_size = 32,   get_angle = 0,   get_text_anchor = \"middle\",   get_alignment_baseline = \"center\",   get_pixel_offset = c(0, 0),   blending_mode = \"normal\",   visibility_toggle = TRUE,   tooltip = NULL )  update_text_layer(   rdeck,   ...,   id,   name = cur_value(),   group_name = cur_value(),   data = cur_value(),   visible = cur_value(),   pickable = cur_value(),   opacity = cur_value(),   wrap_longitude = cur_value(),   position_format = cur_value(),   color_format = cur_value(),   auto_highlight = cur_value(),   highlight_color = cur_value(),   billboard = cur_value(),   size_scale = cur_value(),   size_units = cur_value(),   size_min_pixels = cur_value(),   size_max_pixels = cur_value(),   background = cur_value(),   get_background_color = cur_value(),   get_border_color = cur_value(),   get_border_width = cur_value(),   background_padding = cur_value(),   font_family = cur_value(),   font_weight = cur_value(),   line_height = cur_value(),   outline_width = cur_value(),   outline_color = cur_value(),   font_settings = cur_value(),   word_break = cur_value(),   max_width = cur_value(),   get_text = cur_value(),   get_position = cur_value(),   get_color = cur_value(),   get_size = cur_value(),   get_angle = cur_value(),   get_text_anchor = cur_value(),   get_alignment_baseline = cur_value(),   get_pixel_offset = cur_value(),   blending_mode = cur_value(),   visibility_toggle = cur_value(),   tooltip = cur_value() )"},{"path":"https://qfes.github.io/rdeck/reference/text_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Text Layer — text_layer","text":"rdeck <rdeck | rdeck_proxy> rdeck map instance. ... Additional parameters forwarded deck.gl javascript without validation processing. dots must named camelCased serialised. warning raised dots used, warning class rdeck_dots_nonempty. id <string> layer's identifier must unique among layers type map. Defaults uuid::UUIDgenerate(), explicitly defined updatable layers shiny application. name <string> Identifies layer tooltips legends. need unique, brief. Defaults deck.gl class name layer. group_name <string> Defines group layer belongs . Currently effective layer selector, visibility_toggle = TRUE. data <data.frame | sf | string> layer's data. Data frames sf objects contain columns referenced layer's accessors. Strings interpreted URL data retrieved dynamically browser. visible <boolean> Determines whether layer visible ; also determines whether legend elements layer displayed. pickable <boolean> Determines layer responds pointer / touch events. opacity <number> Determines layer's opacity. wrap_longitude <boolean> Normalises geometry longitudes. position_format <\"XY\" | \"XYZ\"> Determines whether coordinate two (XY) three (XYZ) elements. color_format <\"RGB\" | \"RGBA\"> Determines whether alpha channel colours ignored accessors, making colours opaque. auto_highlight <boolean> TRUE, current object hovered cursor highlighted highlight_color. highlight_color <accessor | scale | color> auto_highlight pickable enabled, highlight_color determines colour currently highlighted object. single colour value supplied, colour used highlight objects layer. Per-object highlighting achieved colour scale, tidy-eval column colours. billboard <boolean> TRUE, text label always faces camera, otherwise faces (z). size_scale <number> size multiplier. size_units <\"pixels\" | \"common\" | \"meters\"> units size specified get_size. size_min_pixels <number> minimum size pixels. size_max_pixels <number> maximum size pixels. background <boolean> Whether render background text labels. get_background_color <accessor | scale | color> text background colour, background = TRUE. Accepts single colour value, colour scale, tidy-eval column colours. get_border_color <accessor | scale | color> text background border colour, background = TRUE. Accepts single colour value, colour scale, tidy-eval column colours. get_border_width <accessor | scale | number> text background border width, background = TRUE. Accepts single numeric value, numeric scale, tidy-eval column numbers. background_padding <numeric> text background padding. Must array 2 4 numbers. font_family <string> Specifies prioritised list one font family names. See font-family. font_weight <\"normal\" | \"bold\" | 100:900> font weight. See font-weight line_height <number> unitless number multiplied get_size set line height. outline_width <number> text outline width, relative font size. Requires font_settings$sdf = TRUE. outline_color <color> text outline colour. Requires font_settings$sdf = TRUE. font_settings <font_settings> Advanced options fine tuning appearance performance generated font_atlas. word_break <\"break-word\" | \"break-\"> Requires valid max_width. max_width <number> Used together word_break wrapping text. Specifies width limit break text multiple lines. get_text <accessor> text value text label. Accepts tidy-eval character column labels. get_position <accessor> position geometry column, either sfc_POINT sfc_MULTIPOINT column CRS EPSG:4326. Supports tidy-eval. get_color <accessor | scale | color> colour object. Accepts single colour value, colour scale, tidy-eval column colours. get_size <accessor | scale | number> font size text label, units specified size_units. Accepts single numeric value, numeric scale, tidy-eval column numbers. get_angle <accessor | number> rotating angle text label degrees. Accepts single numeric value, tidy-eval column numbers. get_text_anchor <accessor | \"start\" | \"middle\" | \"end\"> text label anchor. May single value, tidy-eval character column. get_alignment_baseline <accessor | \"top\" | \"center\" | \"bottom\"> text label alignment baseline. May single value, tidy-eval character column. get_pixel_offset <accessor | number> pixel offset object. Accepts single length-2 numeric vector, tidy-eval list column. blending_mode <\"normal\" | \"additive\" | \"subtractive\"> Sets blending mode. Blending modes: normal: Normal blending alter colours overlapping objects. additive: Additive blending adds colours overlapping objects. Useful highlighting dot density dark maps. subtractive: Subtractive blending darkens overlapping objects. Useful highlighting dot density light maps. visibility_toggle <boolean> Whether layer appear layer selector. tooltip <tooltip> Defines columns (order) displayed layer tooltip, pickable == TRUE. Supports tidy-select data data.frame. sfc columns always removed.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/tile_3d_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Tile 3D Layer — tile_3d_layer","title":"Tile 3D Layer — tile_3d_layer","text":"Tile 3D Layer","code":""},{"path":"https://qfes.github.io/rdeck/reference/tile_3d_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tile 3D Layer — tile_3d_layer","text":"","code":"add_tile_3d_layer(   rdeck,   ...,   id = uuid::UUIDgenerate(),   name = \"Tile3DLayer\",   group_name = NULL,   data = NULL,   visible = TRUE,   pickable = FALSE,   opacity = 1,   wrap_longitude = FALSE,   position_format = \"XYZ\",   color_format = \"RGBA\",   auto_highlight = FALSE,   highlight_color = \"#00008080\",   get_point_color = \"#000000ff\",   point_size = 1,   loader = list(id = \"3d-tiles\", name = \"3D Tiles\", module = \"3d-tiles\", version =     \"3.2.4\", extensions = c(\"cmpt\", \"pnts\", \"b3dm\", \"i3dm\"), mimeTypes =     c(\"application/octet-stream\"), tests = c(\"cmpt\", \"pnts\", \"b3dm\", \"i3dm\"), parse =     NULL, options = list(`3d-tiles` = list(loadGLTF = TRUE, decodeQuantizedPositions =     FALSE, isTileset = \"auto\", assetGltfUpAxis = NULL))),   blending_mode = \"normal\",   visibility_toggle = TRUE,   tooltip = NULL )  update_tile_3d_layer(   rdeck,   ...,   id,   name = cur_value(),   group_name = cur_value(),   data = cur_value(),   visible = cur_value(),   pickable = cur_value(),   opacity = cur_value(),   wrap_longitude = cur_value(),   position_format = cur_value(),   color_format = cur_value(),   auto_highlight = cur_value(),   highlight_color = cur_value(),   get_point_color = cur_value(),   point_size = cur_value(),   loader = cur_value(),   blending_mode = cur_value(),   visibility_toggle = cur_value(),   tooltip = cur_value() )"},{"path":"https://qfes.github.io/rdeck/reference/tile_3d_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tile 3D Layer — tile_3d_layer","text":"rdeck <rdeck | rdeck_proxy> rdeck map instance. ... Additional parameters forwarded deck.gl javascript without validation processing. dots must named camelCased serialised. warning raised dots used, warning class rdeck_dots_nonempty. id <string> layer's identifier must unique among layers type map. Defaults uuid::UUIDgenerate(), explicitly defined updatable layers shiny application. name <string> Identifies layer tooltips legends. need unique, brief. Defaults deck.gl class name layer. group_name <string> Defines group layer belongs . Currently effective layer selector, visibility_toggle = TRUE. data <data.frame | sf | string> layer's data. Data frames sf objects contain columns referenced layer's accessors. Strings interpreted URL data retrieved dynamically browser. visible <boolean> Determines whether layer visible ; also determines whether legend elements layer displayed. pickable <boolean> Determines layer responds pointer / touch events. opacity <number> Determines layer's opacity. wrap_longitude <boolean> Normalises geometry longitudes. position_format <\"XY\" | \"XYZ\"> Determines whether coordinate two (XY) three (XYZ) elements. color_format <\"RGB\" | \"RGBA\"> Determines whether alpha channel colours ignored accessors, making colours opaque. auto_highlight <boolean> TRUE, current object hovered cursor highlighted highlight_color. highlight_color <accessor | scale | color> auto_highlight pickable enabled, highlight_color determines colour currently highlighted object. single colour value supplied, colour used highlight objects layer. Per-object highlighting achieved colour scale, tidy-eval column colours. get_point_color <color> colour object. point_size <number> radius points units specified size_units. loader object blending_mode <\"normal\" | \"additive\" | \"subtractive\"> Sets blending mode. Blending modes: normal: Normal blending alter colours overlapping objects. additive: Additive blending adds colours overlapping objects. Useful highlighting dot density dark maps. subtractive: Subtractive blending darkens overlapping objects. Useful highlighting dot density light maps. visibility_toggle <boolean> Whether layer appear layer selector. tooltip <tooltip> Defines columns (order) displayed layer tooltip, pickable == TRUE. Supports tidy-select data data.frame. sfc columns always removed.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/tile_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Tile json — tile_json","title":"Tile json — tile_json","text":"Intended use data parameter mvt_layer(). Creates tile json url tileset_id tile_service. Tile service defaults getOption(\"rdeck.tile_service\") %||% \"mapbox\". created url fetched parsed jsonlite::fromJSON().","code":""},{"path":"https://qfes.github.io/rdeck/reference/tile_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tile json — tile_json","text":"","code":"tile_json(tileset_id, tile_service = NULL)"},{"path":"https://qfes.github.io/rdeck/reference/tile_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tile json — tile_json","text":"tileset_id <string> tileset_id, may one following tileset identifier, e.g. \"mapbox.mapbox-streets-v8\" tileset identifier.json, e.g. \"mapbox.mapbox-streets-v8.json\" url, e.g. \"mapbox://mapbox.mapbox-streets-v8\", \"https://mytileserver/tileset\" tile_service unused url supplied. tile_service <string> tile service name, defaults `getOption(\"rdeck.tile_service\") %||% \"mapbox\".","code":""},{"path":"https://qfes.github.io/rdeck/reference/tile_json.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Tile json — tile_json","text":"Authentication via mapbox_access_token() occurs tile_service = \"mapbox\", tileset_id uses mapbox scheme (.e. mapbox://).","code":""},{"path":"https://qfes.github.io/rdeck/reference/tile_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tile json — tile_json","text":"","code":"if (FALSE) { tile_json(\"mapbox.mapbox-streets-v8\", \"mapbox\") tile_json(\"mapbox.mapbox-streets-v8.json\", \"mapbox\") tile_json(\"mapbox://mapbox.mapbox-streets-v8\") tile_json(\"mapbox://mapbox.mapbox-streets-v8.json\") tile_json(\"https://mytileserver/tileset.json\") tile_json(\"tileset.json\", \"https://mytileserver\") }"},{"path":"https://qfes.github.io/rdeck/reference/tile_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Tile Layer — tile_layer","title":"Tile Layer — tile_layer","text":"Tile Layer","code":""},{"path":"https://qfes.github.io/rdeck/reference/tile_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tile Layer — tile_layer","text":"","code":"add_tile_layer(   rdeck,   ...,   id = uuid::UUIDgenerate(),   name = \"TileLayer\",   group_name = NULL,   data = NULL,   visible = TRUE,   pickable = FALSE,   opacity = 1,   wrap_longitude = FALSE,   position_format = \"XYZ\",   color_format = \"RGBA\",   auto_highlight = FALSE,   highlight_color = \"#00008080\",   get_tile_data = NULL,   extent = NULL,   tile_size = 512,   max_zoom = NULL,   min_zoom = 0,   max_cache_size = NULL,   max_cache_byte_size = NULL,   refinement_strategy = \"best-available\",   z_range = NULL,   max_requests = 6,   zoom_offset = 0,   blending_mode = \"normal\",   visibility_toggle = TRUE,   tooltip = NULL,   desaturate = 0,   transparent_color = \"#00000000\",   tint_color = \"#ffffff\" )  update_tile_layer(   rdeck,   ...,   id,   name = cur_value(),   group_name = cur_value(),   data = cur_value(),   visible = cur_value(),   pickable = cur_value(),   opacity = cur_value(),   wrap_longitude = cur_value(),   position_format = cur_value(),   color_format = cur_value(),   auto_highlight = cur_value(),   highlight_color = cur_value(),   get_tile_data = cur_value(),   extent = cur_value(),   tile_size = cur_value(),   max_zoom = cur_value(),   min_zoom = cur_value(),   max_cache_size = cur_value(),   max_cache_byte_size = cur_value(),   refinement_strategy = cur_value(),   z_range = cur_value(),   max_requests = cur_value(),   zoom_offset = cur_value(),   blending_mode = cur_value(),   visibility_toggle = cur_value(),   tooltip = cur_value(),   desaturate = cur_value(),   transparent_color = cur_value(),   tint_color = cur_value() )"},{"path":"https://qfes.github.io/rdeck/reference/tile_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tile Layer — tile_layer","text":"rdeck <rdeck | rdeck_proxy> rdeck map instance. ... Additional parameters forwarded deck.gl javascript without validation processing. dots must named camelCased serialised. warning raised dots used, warning class rdeck_dots_nonempty. id <string> layer's identifier must unique among layers type map. Defaults uuid::UUIDgenerate(), explicitly defined updatable layers shiny application. name <string> Identifies layer tooltips legends. need unique, brief. Defaults deck.gl class name layer. group_name <string> Defines group layer belongs . Currently effective layer selector, visibility_toggle = TRUE. data <character> character vector raster tile url templates. Substrings \"{x}\", \"{y}\", \"{z}\" replaced tile's actual index request. multiple url templates supplied, endpoint must return data tile index. visible <boolean> Determines whether layer visible ; also determines whether legend elements layer displayed. pickable <boolean> Determines layer responds pointer / touch events. opacity <number> Determines layer's opacity. wrap_longitude <boolean> Normalises geometry longitudes. position_format <\"XY\" | \"XYZ\"> Determines whether coordinate two (XY) three (XYZ) elements. color_format <\"RGB\" | \"RGBA\"> Determines whether alpha channel colours ignored accessors, making colours opaque. auto_highlight <boolean> TRUE, current object hovered cursor highlighted highlight_color. highlight_color <accessor | scale | color> auto_highlight pickable enabled, highlight_color determines colour currently highlighted object. single colour value supplied, colour used highlight objects layer. Per-object highlighting achieved colour scale, tidy-eval column colours. get_tile_data <JS> retrieves data tile. See deck.gl getTileData. extent <c(min_x, min_y, max_x, max_y)> Tiles bounding box rendered min_zoom, zoomed min_zoom. tile_size <number> power 2 pixel dimensions tile. max_zoom <number> Tiles zoom level shown. Defaults NULL. min_zoom <number> Tiles zoom level shown. Defaults 0. max_cache_size <number> Maximum number tiles can cached. Defaults 5x number tiles current viewport. max_cache_byte_size <number> Maximum memory used caching tiles. refinement_strategy <\"best-available\" | \"-overlap\" | \"never\"> tile layer refines visibility tiles. Defaults \"best-available\". z_range <c(min, max)> Array representing range heights tile. max_requests <number> Maximum number concurrent HTTP requests across specified tile provider domains. negative number supplied throttling occurs (HTTP/2 ). zoom_offset <int> offset changes zoom level tiles fetched. blending_mode <\"normal\" | \"additive\" | \"subtractive\"> Sets blending mode. Blending modes: normal: Normal blending alter colours overlapping objects. additive: Additive blending adds colours overlapping objects. Useful highlighting dot density dark maps. subtractive: Subtractive blending darkens overlapping objects. Useful highlighting dot density light maps. visibility_toggle <boolean> Whether layer appear layer selector. tooltip <tooltip> Defines columns (order) displayed layer tooltip, pickable == TRUE. Supports tidy-select data data.frame. sfc columns always removed. desaturate <number> desaturation bitmap. 0 1, original colour, 1 greyscale. transparent_color <color> colour use transparent pixels. tint_color <color> colour tint bitmap . Alpha channel ignored supplied.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/tooltip.html","id":null,"dir":"Reference","previous_headings":"","what":"Prop Type: Tooltip — tooltip","title":"Prop Type: Tooltip — tooltip","text":"pickable == TRUE, tooltip defines columns (order) displayed object hovered. tooltip displayed transposed table (1 row per column) styled according rdeck() theme. tooltip layout inspired kepler.gl.  Tooltips support tidy-select expressions (renaming supported fail silently) boolean expressions. Tidy-select support limited layer data URL NULL. Similar dplyr::select(), names interpreted column / field names. Use injection operators pass value name environment, e.g. !!my_column.","code":""},{"path":"https://qfes.github.io/rdeck/reference/tooltip.html","id":"always-supported","dir":"Reference","previous_headings":"","what":"Always supported","title":"Prop Type: Tooltip — tooltip","text":"Tooltips support different arguments depending value layer data, following arguments always supported: NULL | NA | FALSE -> tooltip TRUE -> columns. translated tidyselect::everything() data data frame tile json object character vector column names, e.g. c(\"foo\", \"bar\") c() expression bare names, e.g. c(foo, bar) bare name, e.g. my_col","code":""},{"path":"https://qfes.github.io/rdeck/reference/tooltip.html","id":"data-is-a-data-frame-or-tile-json-object","dir":"Reference","previous_headings":"","what":"Data is a data.frame or tile_json object","title":"Prop Type: Tooltip — tooltip","text":"layer data data.frame() tile_json() object, tooltip supports tidy-select, including selection helpers. following examples supported expressions: c(foo, bar) tidyselect::everything() tidyselect::matches(\"foo\"), -unwanted (.character) & matches(\"foo\") 1:6 Like dplyr::select(), referencing non-existent columns results error. Use tidyselect::any_of() include columns may exist. sf columns forcibly removed tooltip.","code":""},{"path":"https://qfes.github.io/rdeck/reference/tooltip.html","id":"data-is-a-string-or-null","dir":"Reference","previous_headings":"","what":"Data is a string or NULL","title":"Prop Type: Tooltip — tooltip","text":"column / field name validation layer data string (interpreted URL) NULL. Including non-existent names tooltip cause errors client; columns given value null rendered tooltip.","code":""},{"path":"https://qfes.github.io/rdeck/reference/trips_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Trips Layer — trips_layer","title":"Trips Layer — trips_layer","text":"Trips Layer","code":""},{"path":"https://qfes.github.io/rdeck/reference/trips_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trips Layer — trips_layer","text":"","code":"add_trips_layer(   rdeck,   ...,   id = uuid::UUIDgenerate(),   name = \"TripsLayer\",   group_name = NULL,   data = NULL,   visible = TRUE,   pickable = FALSE,   opacity = 1,   wrap_longitude = FALSE,   position_format = \"XYZ\",   color_format = \"RGBA\",   auto_highlight = FALSE,   highlight_color = \"#00008080\",   width_units = \"meters\",   width_scale = 1,   width_min_pixels = 0,   width_max_pixels = 9007199254740991,   joint_rounded = FALSE,   cap_rounded = FALSE,   miter_limit = 4,   billboard = FALSE,   get_path = path,   get_color = \"#000000ff\",   get_width = 1,   fade_trail = TRUE,   trail_length = 120,   get_timestamps = timestamps,   blending_mode = \"normal\",   visibility_toggle = TRUE,   tooltip = NULL,   loop_length = 1800,   animation_speed = 30 )  update_trips_layer(   rdeck,   ...,   id,   name = cur_value(),   group_name = cur_value(),   data = cur_value(),   visible = cur_value(),   pickable = cur_value(),   opacity = cur_value(),   wrap_longitude = cur_value(),   position_format = cur_value(),   color_format = cur_value(),   auto_highlight = cur_value(),   highlight_color = cur_value(),   width_units = cur_value(),   width_scale = cur_value(),   width_min_pixels = cur_value(),   width_max_pixels = cur_value(),   joint_rounded = cur_value(),   cap_rounded = cur_value(),   miter_limit = cur_value(),   billboard = cur_value(),   get_path = cur_value(),   get_color = cur_value(),   get_width = cur_value(),   fade_trail = cur_value(),   trail_length = cur_value(),   get_timestamps = cur_value(),   blending_mode = cur_value(),   visibility_toggle = cur_value(),   tooltip = cur_value(),   loop_length = cur_value(),   animation_speed = cur_value() )"},{"path":"https://qfes.github.io/rdeck/reference/trips_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trips Layer — trips_layer","text":"rdeck <rdeck | rdeck_proxy> rdeck map instance. ... Additional parameters forwarded deck.gl javascript without validation processing. dots must named camelCased serialised. warning raised dots used, warning class rdeck_dots_nonempty. id <string> layer's identifier must unique among layers type map. Defaults uuid::UUIDgenerate(), explicitly defined updatable layers shiny application. name <string> Identifies layer tooltips legends. need unique, brief. Defaults deck.gl class name layer. group_name <string> Defines group layer belongs . Currently effective layer selector, visibility_toggle = TRUE. data <data.frame | sf | string> layer's data. Data frames sf objects contain columns referenced layer's accessors. Strings interpreted URL data retrieved dynamically browser. visible <boolean> Determines whether layer visible ; also determines whether legend elements layer displayed. pickable <boolean> Determines layer responds pointer / touch events. opacity <number> Determines layer's opacity. wrap_longitude <boolean> Normalises geometry longitudes. position_format <\"XY\" | \"XYZ\"> Determines whether coordinate two (XY) three (XYZ) elements. color_format <\"RGB\" | \"RGBA\"> Determines whether alpha channel colours ignored accessors, making colours opaque. auto_highlight <boolean> TRUE, current object hovered cursor highlighted highlight_color. highlight_color <accessor | scale | color> auto_highlight pickable enabled, highlight_color determines colour currently highlighted object. single colour value supplied, colour used highlight objects layer. Per-object highlighting achieved colour scale, tidy-eval column colours. width_units <\"pixels\" | \"common\" | \"meters\"> units line_width. width_scale <number> scaling multiplier width line. width_min_pixels <number> minimum line width pixels. width_max_pixels <number> maximum line width pixels. joint_rounded <boolean> TRUE, draw round joints; else draw square joints. cap_rounded <boolean> TRUE, draw round caps; else draw square caps. miter_limit <number> maximum extent joint ratio stroke width. applicable rounded == FALSE. billboard <boolean> TRUE, extrude path screen space (width always faces) camera; FALSE, width always faces (z). get_path <accessor> path geometry column, either sfc_LINESTRING sfc_MULTILINESTRING column CRS EPSG:4326. Supports tidy-eval. get_color <accessor | scale | color> colour object. Accepts single colour value, colour scale, tidy-eval column colours. get_width <accessor | scale | number> width object, units specified width_scale. Accepts single numeric value, numeric scale, tidy-eval column numbers. fade_trail <boolean> Whether path fades . trail_length <number> number seconds path completely fade . get_timestamps <accessor> timestamps trip. trip, timestamp corresponds position linestring returned get_path, representing time position visited. Accepts tidy-eval list column numbers. blending_mode <\"normal\" | \"additive\" | \"subtractive\"> Sets blending mode. Blending modes: normal: Normal blending alter colours overlapping objects. additive: Additive blending adds colours overlapping objects. Useful highlighting dot density dark maps. subtractive: Subtractive blending darkens overlapping objects. Useful highlighting dot density light maps. visibility_toggle <boolean> Whether layer appear layer selector. tooltip <tooltip> Defines columns (order) displayed layer tooltip, pickable == TRUE. Supports tidy-select data data.frame. sfc columns always removed. loop_length <number> number seconds complete animation loop. animation_speed <number> animation speed multiplier.","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/reference/view_state.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a view_state — view_state","title":"Create a view_state — view_state","text":"Create view_state","code":""},{"path":"https://qfes.github.io/rdeck/reference/view_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a view_state — view_state","text":"","code":"view_state(center = c(0, 0), zoom = 0, pitch = 0, bearing = 0, ...)"},{"path":"https://qfes.github.io/rdeck/reference/view_state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a view_state — view_state","text":"center numeric | sf::st_point Center viewport map zoom numeric Scale = \\(2^{zoom}\\) pitch numeric Camera angle degrees (0 straight ) bearing numeric Map rotation degrees (0 means north ) ... additional parameters pass view_state | initial_view_state","code":""},{"path":[]},{"path":"https://qfes.github.io/rdeck/news/index.html","id":"rdeck-development-version","dir":"Changelog","previous_headings":"","what":"rdeck (development version)","title":"rdeck (development version)","text":"Add centering, diverging scales (#82) Add snapshot util (#77) Add feature editor (#75) Rewrite client api (#73) Deprecate lazy loading (#71)","code":""},{"path":"https://qfes.github.io/rdeck/news/index.html","id":"rdeck-040","dir":"Changelog","previous_headings":"","what":"rdeck 0.4.0","title":"rdeck 0.4.0","text":"Add layer partial updaters shiny Add map view state & layer click events shiny (#57) Remove auto-sfc column resolution sf data (#50) Add identity scale (#62) Add symlog scale Generators palette, range, breaks Palette & range interpolation Refactor quantile & quantize scales Add QuadKeyLayer Fix: multi-polygon auto-highlight (#42) Fix: javascript dependencies colliding widgets (#37) Fix: remove aggregation layer tooltips (#34) Add widget javascript api extensions (#29) Add layer selector (#28) Add map lazy loading (#27)","code":""},{"path":"https://qfes.github.io/rdeck/news/index.html","id":"rdeck-030","dir":"Changelog","previous_headings":"","what":"rdeck 0.3.0","title":"rdeck 0.3.0","text":"Version 0.3.0 almost complete rewrite. Changes note: TileLayer (raster tiles) MVTLayer BitmapLayer (local images) TripsLayer (animation) Add categorical & threshold scales Add tidy-select legend support Add extensive layer validation Add legend tick customisation Add light theme Add kepler.gl layer blending modes Add support data loaded browser, via url Add Shiny support Replace default layer id parameter uuid::UUIDgenerate() Add name parameter layers used tooltips legends Fix / rewrite legend component Fix multi-geometry picking / highlighting Fix GeoJsonLayer Move mapbox_api_access_token parameter option / environment variable Remove unused data serialisation","code":""}]
