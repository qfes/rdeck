% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/doc-proptypes.R
\name{tooltip}
\alias{tooltip}
\title{Prop Type: Tooltip}
\description{
If \code{pickable == TRUE}, tooltip defines which columns (and their order) will be displayed
when an object is \emph{hovered}. The tooltip will be displayed as a transposed table (1 row
per column) and is styled according to the \code{\link[=rdeck]{rdeck()}} \code{theme}. The tooltip layout is inspired
by \href{https://kepler.gl}{kepler.gl}.

\if{html}{\out{
  <div class="text-center">
    <img src="https://user-images.githubusercontent.com/391385/103058202-57f26080-45ed-11eb-9131-f09585c1b894.png" />
  </div>
}}

Tooltips support \link[dplyr:dplyr_tidy_select]{tidy-select} expressions (renaming isn't supported and
will fail silently) and boolean expressions. Tidy-select support is limited when layer \code{data} is
a URL or \code{NULL}.

Similar to \code{\link[dplyr:select]{dplyr::select()}}, names are interpreted as column / field names. Use the
\link[rlang:topic-inject]{injection operators} to pass the value of a name from the environment,
e.g. \code{!!my_column}.
}
\section{Always supported}{
Tooltips support different arguments depending on the value of the layer \code{data}, but the following
arguments are always supported:
\itemize{
\item \code{NULL} | \code{NA} | \code{FALSE} -> no tooltip
\item \code{TRUE} -> all columns. This will be translated to \code{\link[tidyselect:everything]{tidyselect::everything()}} when data
is a data frame or a tile json object
\item character vector of column names, e.g. \code{c("foo", "bar")}
\item a \code{c()} expression of bare names, e.g. \code{c(foo, bar)}
\item a bare name, e.g. \code{my_col}
}
}

\section{Data is a \code{data.frame} or \code{tile_json} object}{
When layer \code{data} is a \code{\link[=data.frame]{data.frame()}} or \code{\link[=tile_json]{tile_json()}} object, \code{tooltip} supports
\link[dplyr:dplyr_tidy_select]{tidy-select}, including selection helpers. The following are some
examples of supported expressions:
\itemize{
\item \code{c(foo, bar)}
\item \code{tidyselect::everything()}
\item \code{tidyselect::matches("foo")},
\item \code{-unwanted}
\item \code{where(is.character) & matches("foo")}
\item \code{1:6}
}

Like \code{\link[dplyr:select]{dplyr::select()}}, referencing non-existent columns results in an error. Use
\code{\link[tidyselect:all_of]{tidyselect::any_of()}} to include columns that may not exist.

All geometry columns will be forcibly removed from the tooltip.
}

\section{Data is a \code{string} or \code{NULL}}{
There is no column / field name validation when When layer \code{data} is a \code{string} (interpreted as a URL)
or \code{NULL}. Including non-existent names in the tooltip will \emph{not} cause errors in the client; these columns
will be given a value of \code{null} in the rendered tooltip.
}

\keyword{internal}
