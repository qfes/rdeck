"use strict";(self.webpackChunkrdeck=self.webpackChunkrdeck||[]).push([[315],{5913:function(e,t,r){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var n=o(r(1208)),i=o(r(3737)),a=o(r(1013)),u=r(4102),s=r(611);t.default=function(e,t,r){void 0===r&&(r={});for(var o=s.getGeom(e).coordinates,l=0,f=0;f<o.length&&!(t>=l&&f===o.length-1);f++){if(l>=t){var c=t-l;if(c){var d=n.default(o[f],o[f-1])-180;return i.default(o[f],c,d,r)}return u.point(o[f])}l+=a.default(o[f],o[f+1],r)}return u.point(o[o.length-1])}},1070:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0});var o=r(1540),n=6378137;function i(e){var t=0;if(e&&e.length>0){t+=Math.abs(a(e[0]));for(var r=1;r<e.length;r++)t-=Math.abs(a(e[r]))}return t}function a(e){var t,r,o,i,a,s,l=0,f=e.length;if(f>2){for(s=0;s<f;s++)s===f-2?(o=f-2,i=f-1,a=0):s===f-1?(o=f-1,i=0,a=1):(o=s,i=s+1,a=s+2),t=e[o],r=e[i],l+=(u(e[a][0])-u(t[0]))*Math.sin(u(r[1]));l=l*n*n/2}return l}function u(e){return e*Math.PI/180}t.default=function(e){return o.geomReduce(e,(function(e,t){return e+function(e){var t,r=0;switch(e.type){case"Polygon":return i(e.coordinates);case"MultiPolygon":for(t=0;t<e.coordinates.length;t++)r+=i(e.coordinates[t]);return r;case"Point":case"MultiPoint":case"LineString":case"MultiLineString":return 0}return 0}(t)}),0)}},3652:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0});var o=r(4102);t.default=function(e,t){void 0===t&&(t={});var r=Number(e[0]),n=Number(e[1]),i=Number(e[2]),a=Number(e[3]);if(6===e.length)throw new Error("@turf/bbox-polygon does not support BBox with 6 positions");var u=[r,n],s=[r,a],l=[i,a],f=[i,n];return o.polygon([[u,f,l,s,u]],t.properties,{bbox:e,id:t.id})}},9705:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0});var o=r(1540);function n(e){var t=[1/0,1/0,-1/0,-1/0];return o.coordEach(e,(function(e){t[0]>e[0]&&(t[0]=e[0]),t[1]>e[1]&&(t[1]=e[1]),t[2]<e[0]&&(t[2]=e[0]),t[3]<e[1]&&(t[3]=e[1])})),t}n.default=n,t.default=n},1208:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0});var o=r(4102),n=r(611);function i(e,t,r){if(void 0===r&&(r={}),!0===r.final)return function(e,t){var r=i(t,e);return r=(r+180)%360}(e,t);var a=n.getCoord(e),u=n.getCoord(t),s=o.degreesToRadians(a[0]),l=o.degreesToRadians(u[0]),f=o.degreesToRadians(a[1]),c=o.degreesToRadians(u[1]),d=Math.sin(l-s)*Math.cos(c),h=Math.cos(f)*Math.sin(c)-Math.sin(f)*Math.cos(c)*Math.cos(l-s);return o.radiansToDegrees(Math.atan2(d,h))}t.default=i},3809:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0});var o=r(611);t.default=function(e){for(var t,r,n=o.getCoords(e),i=0,a=1;a<n.length;)t=r||n[0],i+=((r=n[a])[0]-t[0])*(r[1]+t[1]),a++;return i>0}},8147:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0});var o=r(611);function n(e,t,r){var o=!1;t[0][0]===t[t.length-1][0]&&t[0][1]===t[t.length-1][1]&&(t=t.slice(0,t.length-1));for(var n=0,i=t.length-1;n<t.length;i=n++){var a=t[n][0],u=t[n][1],s=t[i][0],l=t[i][1];if(e[1]*(a-s)+u*(s-e[0])+l*(e[0]-a)==0&&(a-e[0])*(s-e[0])<=0&&(u-e[1])*(l-e[1])<=0)return!r;u>e[1]!=l>e[1]&&e[0]<(s-a)*(e[1]-u)/(l-u)+a&&(o=!o)}return o}t.default=function(e,t,r){if(void 0===r&&(r={}),!e)throw new Error("point is required");if(!t)throw new Error("polygon is required");var i=o.getCoord(e),a=o.getGeom(t),u=a.type,s=t.bbox,l=a.coordinates;if(s&&!1===function(e,t){return t[0]<=e[0]&&t[1]<=e[1]&&t[2]>=e[0]&&t[3]>=e[1]}(i,s))return!1;"Polygon"===u&&(l=[l]);for(var f=!1,c=0;c<l.length&&!f;c++)if(n(i,l[c][0],r.ignoreBoundary)){for(var d=!1,h=1;h<l[c].length&&!d;)n(i,l[c][h],!r.ignoreBoundary)&&(d=!0),h++;d||(f=!0)}return f}},5419:(e,t,r)=>{var o=r(8230),n=r(675),i=r(1540),a=r(8630),u=r(4102);function s(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var l=s(o);function f(e,t,r){var o=(r=r||{}).units||"kilometers",n=r.steps||8;if(!e)throw new Error("geojson is required");if("object"!=typeof r)throw new Error("options must be an object");if("number"!=typeof n)throw new Error("steps must be an number");if(void 0===t)throw new Error("radius is required");if(n<=0)throw new Error("steps must be greater than 0");var a=[];switch(e.type){case"GeometryCollection":return i.geomEach(e,(function(e){var r=c(e,t,o,n);r&&a.push(r)})),u.featureCollection(a);case"FeatureCollection":return i.featureEach(e,(function(e){var r=c(e,t,o,n);r&&i.featureEach(r,(function(e){e&&a.push(e)}))})),u.featureCollection(a)}return c(e,t,o,n)}function c(e,t,r,o){var s=e.properties||{},f="Feature"===e.type?e.geometry:e;if("GeometryCollection"===f.type){var p=[];return i.geomEach(e,(function(e){var n=c(e,t,r,o);n&&p.push(n)})),u.featureCollection(p)}var v=function(e){var t=l.default(e).geometry.coordinates,r=[-t[0],-t[1]];return a.geoAzimuthalEquidistant().rotate(r).scale(u.earthRadius)}(f),y={type:f.type,coordinates:h(f.coordinates,v)},m=(new n.GeoJSONReader).read(y),w=u.radiansToLength(u.lengthToRadians(t,r),"meters"),b=n.BufferOp.bufferOp(m,w,o);if(!d((b=(new n.GeoJSONWriter).write(b)).coordinates)){var M={type:b.type,coordinates:g(b.coordinates,v)};return u.feature(M,s)}}function d(e){return Array.isArray(e[0])?d(e[0]):isNaN(e[0])}function h(e,t){return"object"!=typeof e[0]?t(e):e.map((function(e){return h(e,t)}))}function g(e,t){return"object"!=typeof e[0]?t.invert(e):e.map((function(e){return g(e,t)}))}e.exports=f,e.exports.default=f},8230:function(e,t,r){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var n=o(r(9705)),i=r(4102);t.default=function(e,t){void 0===t&&(t={});var r=n.default(e),o=(r[0]+r[2])/2,a=(r[1]+r[3])/2;return i.point([o,a],t.properties,t)}},6338:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0});var o=r(1540),n=r(4102);t.default=function(e,t){void 0===t&&(t={});var r=0,i=0,a=0;return o.coordEach(e,(function(e){r+=e[0],i+=e[1],a++}),!0),n.point([r/a,i/a],t.properties)}},265:function(e,t,r){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var n=o(r(3737)),i=r(4102);t.default=function(e,t,r){void 0===r&&(r={});for(var o=r.steps||64,a=r.properties?r.properties:!Array.isArray(e)&&"Feature"===e.type&&e.properties?e.properties:{},u=[],s=0;s<o;s++)u.push(n.default(e,t,-360*s/o,r).geometry.coordinates);return u.push(u[0]),i.polygon([u],a)}},6565:(e,t)=>{function r(e){var t={type:"Feature"};return Object.keys(e).forEach((function(r){switch(r){case"type":case"properties":case"geometry":return;default:t[r]=e[r]}})),t.properties=o(e.properties),t.geometry=n(e.geometry),t}function o(e){var t={};return e?(Object.keys(e).forEach((function(r){var n=e[r];"object"==typeof n?null===n?t[r]=null:Array.isArray(n)?t[r]=n.map((function(e){return e})):t[r]=o(n):t[r]=n})),t):t}function n(e){var t={type:e.type};return e.bbox&&(t.bbox=e.bbox),"GeometryCollection"===e.type?(t.geometries=e.geometries.map((function(e){return n(e)})),t):(t.coordinates=i(e.coordinates),t)}function i(e){var t=e;return"object"!=typeof t[0]?t.slice():t.map((function(e){return i(e)}))}Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){if(!e)throw new Error("geojson is required");switch(e.type){case"Feature":return r(e);case"FeatureCollection":return function(e){var t={type:"FeatureCollection"};return Object.keys(e).forEach((function(r){switch(r){case"type":case"features":return;default:t[r]=e[r]}})),t.features=e.features.map((function(e){return r(e)})),t}(e);case"Point":case"LineString":case"Polygon":case"MultiPoint":case"MultiLineString":case"MultiPolygon":case"GeometryCollection":return n(e);default:throw new Error("unknown GeoJSON type")}}},3737:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0});var o=r(4102),n=r(611);t.default=function(e,t,r,i){void 0===i&&(i={});var a=n.getCoord(e),u=o.degreesToRadians(a[0]),s=o.degreesToRadians(a[1]),l=o.degreesToRadians(r),f=o.lengthToRadians(t,i.units),c=Math.asin(Math.sin(s)*Math.cos(f)+Math.cos(s)*Math.sin(f)*Math.cos(l)),d=u+Math.atan2(Math.sin(l)*Math.sin(f)*Math.cos(s),Math.cos(f)-Math.sin(s)*Math.sin(c)),h=o.radiansToDegrees(d),g=o.radiansToDegrees(c);return o.point([h,g],i.properties)}},8727:(e,t,r)=>{var o=r(2676),n=r(4102),i=r(611);function a(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var u=a(o);function s(e,t){var r=i.getGeom(e),o=i.getGeom(t),a=e.properties||{},s=u.default.difference(r.coordinates,o.coordinates);return 0===s.length?null:1===s.length?n.polygon(s[0],a):n.multiPolygon(s,a)}e.exports=s,e.exports.default=s},1013:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0});var o=r(611),n=r(4102);t.default=function(e,t,r){void 0===r&&(r={});var i=o.getCoord(e),a=o.getCoord(t),u=n.degreesToRadians(a[1]-i[1]),s=n.degreesToRadians(a[0]-i[0]),l=n.degreesToRadians(i[1]),f=n.degreesToRadians(a[1]),c=Math.pow(Math.sin(u/2),2)+Math.pow(Math.sin(s/2),2)*Math.cos(l)*Math.cos(f);return n.radiansToLength(2*Math.atan2(Math.sqrt(c),Math.sqrt(1-c)),r.units)}},1211:(e,t,r)=>{var o=r(4102),n=r(2054),i=r(67),a=r(611);function u(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var s=u(n),l=u(i);function f(e,t,r,n){var i=(n=n||{}).steps||64,u=n.units||"kilometers",f=n.angle||0,d=n.pivot||e,h=n.properties||e.properties||{};if(!e)throw new Error("center is required");if(!t)throw new Error("xSemiAxis is required");if(!r)throw new Error("ySemiAxis is required");if(!o.isObject(n))throw new Error("options must be an object");if(!o.isNumber(i))throw new Error("steps must be a number");if(!o.isNumber(f))throw new Error("angle must be a number");var g=a.getCoord(e);if("degrees"===u)var p=o.degreesToRadians(f);else t=s.default(e,t,90,{units:u}),r=s.default(e,r,0,{units:u}),t=a.getCoord(t)[0]-g[0],r=a.getCoord(r)[1]-g[1];for(var v=[],y=0;y<i;y+=1){var m=-360*y/i,w=t*r/Math.sqrt(Math.pow(r,2)+Math.pow(t,2)*Math.pow(c(m),2)),b=t*r/Math.sqrt(Math.pow(t,2)+Math.pow(r,2)/Math.pow(c(m),2));if(m<-90&&m>=-270&&(w=-w),m<-180&&m>=-360&&(b=-b),"degrees"===u){var M=w*Math.cos(p)+b*Math.sin(p),P=b*Math.cos(p)-w*Math.sin(p);w=M,b=P}v.push([w+g[0],b+g[1]])}return v.push(v[0]),"degrees"===u?o.polygon([v],h):l.default(o.polygon([v],h),f,{pivot:d})}function c(e){var t=e*Math.PI/180;return Math.tan(t)}e.exports=f,e.exports.default=f},4102:(e,t)=>{function r(e,t,r){void 0===r&&(r={});var o={type:"Feature"};return(0===r.id||r.id)&&(o.id=r.id),r.bbox&&(o.bbox=r.bbox),o.properties=t||{},o.geometry=e,o}function o(e,t,o){if(void 0===o&&(o={}),!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");if(e.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!h(e[0])||!h(e[1]))throw new Error("coordinates must contain numbers");return r({type:"Point",coordinates:e},t,o)}function n(e,t,o){void 0===o&&(o={});for(var n=0,i=e;n<i.length;n++){var a=i[n];if(a.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var u=0;u<a[a.length-1].length;u++)if(a[a.length-1][u]!==a[0][u])throw new Error("First and last Position are not equivalent.")}return r({type:"Polygon",coordinates:e},t,o)}function i(e,t,o){if(void 0===o&&(o={}),e.length<2)throw new Error("coordinates must be an array of two or more positions");return r({type:"LineString",coordinates:e},t,o)}function a(e,t){void 0===t&&(t={});var r={type:"FeatureCollection"};return t.id&&(r.id=t.id),t.bbox&&(r.bbox=t.bbox),r.features=e,r}function u(e,t,o){return void 0===o&&(o={}),r({type:"MultiLineString",coordinates:e},t,o)}function s(e,t,o){return void 0===o&&(o={}),r({type:"MultiPoint",coordinates:e},t,o)}function l(e,t,o){return void 0===o&&(o={}),r({type:"MultiPolygon",coordinates:e},t,o)}function f(e,r){void 0===r&&(r="kilometers");var o=t.factors[r];if(!o)throw new Error(r+" units is invalid");return e*o}function c(e,r){void 0===r&&(r="kilometers");var o=t.factors[r];if(!o)throw new Error(r+" units is invalid");return e/o}function d(e){return 180*(e%(2*Math.PI))/Math.PI}function h(e){return!isNaN(e)&&null!==e&&!Array.isArray(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.earthRadius=6371008.8,t.factors={centimeters:100*t.earthRadius,centimetres:100*t.earthRadius,degrees:t.earthRadius/111325,feet:3.28084*t.earthRadius,inches:39.37*t.earthRadius,kilometers:t.earthRadius/1e3,kilometres:t.earthRadius/1e3,meters:t.earthRadius,metres:t.earthRadius,miles:t.earthRadius/1609.344,millimeters:1e3*t.earthRadius,millimetres:1e3*t.earthRadius,nauticalmiles:t.earthRadius/1852,radians:1,yards:1.0936*t.earthRadius},t.unitsFactors={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:.001,kilometres:.001,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/t.earthRadius,yards:1.0936133},t.areaFactors={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,millimeters:1e6,millimetres:1e6,yards:1.195990046},t.feature=r,t.geometry=function(e,t,r){switch(void 0===r&&(r={}),e){case"Point":return o(t).geometry;case"LineString":return i(t).geometry;case"Polygon":return n(t).geometry;case"MultiPoint":return s(t).geometry;case"MultiLineString":return u(t).geometry;case"MultiPolygon":return l(t).geometry;default:throw new Error(e+" is invalid")}},t.point=o,t.points=function(e,t,r){return void 0===r&&(r={}),a(e.map((function(e){return o(e,t)})),r)},t.polygon=n,t.polygons=function(e,t,r){return void 0===r&&(r={}),a(e.map((function(e){return n(e,t)})),r)},t.lineString=i,t.lineStrings=function(e,t,r){return void 0===r&&(r={}),a(e.map((function(e){return i(e,t)})),r)},t.featureCollection=a,t.multiLineString=u,t.multiPoint=s,t.multiPolygon=l,t.geometryCollection=function(e,t,o){return void 0===o&&(o={}),r({type:"GeometryCollection",geometries:e},t,o)},t.round=function(e,t){if(void 0===t&&(t=0),t&&!(t>=0))throw new Error("precision must be a positive number");var r=Math.pow(10,t||0);return Math.round(e*r)/r},t.radiansToLength=f,t.lengthToRadians=c,t.lengthToDegrees=function(e,t){return d(c(e,t))},t.bearingToAzimuth=function(e){var t=e%360;return t<0&&(t+=360),t},t.radiansToDegrees=d,t.degreesToRadians=function(e){return e%360*Math.PI/180},t.convertLength=function(e,t,r){if(void 0===t&&(t="kilometers"),void 0===r&&(r="kilometers"),!(e>=0))throw new Error("length must be a positive number");return f(c(e,t),r)},t.convertArea=function(e,r,o){if(void 0===r&&(r="meters"),void 0===o&&(o="kilometers"),!(e>=0))throw new Error("area must be a positive number");var n=t.areaFactors[r];if(!n)throw new Error("invalid original units");var i=t.areaFactors[o];if(!i)throw new Error("invalid final units");return e/n*i},t.isNumber=h,t.isObject=function(e){return!!e&&e.constructor===Object},t.validateBBox=function(e){if(!e)throw new Error("bbox is required");if(!Array.isArray(e))throw new Error("bbox must be an Array");if(4!==e.length&&6!==e.length)throw new Error("bbox must be an Array of 4 or 6 numbers");e.forEach((function(e){if(!h(e))throw new Error("bbox must only contain numbers")}))},t.validateId=function(e){if(!e)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof e))throw new Error("id must be a number or a string")}},4170:function(e,t,r){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var n=r(4102),i=r(611),a=o(r(2676));t.default=function(e,t,r){void 0===r&&(r={});var o=i.getGeom(e),u=i.getGeom(t),s=a.default.intersection(o.coordinates,u.coordinates);return 0===s.length?null:1===s.length?n.polygon(s[0],r.properties):n.multiPolygon(s,r.properties)}},611:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0});var o=r(4102);t.getCoord=function(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return e.geometry.coordinates;if("Point"===e.type)return e.coordinates}if(Array.isArray(e)&&e.length>=2&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return e;throw new Error("coord must be GeoJSON Point or an Array of numbers")},t.getCoords=function(e){if(Array.isArray(e))return e;if("Feature"===e.type){if(null!==e.geometry)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")},t.containsNumber=function e(t){if(t.length>1&&o.isNumber(t[0])&&o.isNumber(t[1]))return!0;if(Array.isArray(t[0])&&t[0].length)return e(t[0]);throw new Error("coordinates must only contain numbers")},t.geojsonType=function(e,t,r){if(!t||!r)throw new Error("type and name required");if(!e||e.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.type)},t.featureOf=function(e,t,r){if(!e)throw new Error("No feature passed");if(!r)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!e.geometry||e.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.geometry.type)},t.collectionOf=function(e,t,r){if(!e)throw new Error("No featureCollection passed");if(!r)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+r+", FeatureCollection required");for(var o=0,n=e.features;o<n.length;o++){var i=n[o];if(!i||"Feature"!==i.type||!i.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!i.geometry||i.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+i.geometry.type)}},t.getGeom=function(e){return"Feature"===e.type?e.geometry:e},t.getType=function(e,t){return"FeatureCollection"===e.type?"FeatureCollection":"GeometryCollection"===e.type?"GeometryCollection":"Feature"===e.type&&null!==e.geometry?e.geometry.type:e.type}},3663:function(e,t,r){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var n=r(4102),i=r(611),a=o(r(4590)),u=r(1540),s=o(r(1787));function l(e,t){var r=i.getCoords(e),o=i.getCoords(t);if(2!==r.length)throw new Error("<intersects> line1 must only contain 2 coordinates");if(2!==o.length)throw new Error("<intersects> line2 must only contain 2 coordinates");var a=r[0][0],u=r[0][1],s=r[1][0],l=r[1][1],f=o[0][0],c=o[0][1],d=o[1][0],h=o[1][1],g=(h-c)*(s-a)-(d-f)*(l-u),p=(d-f)*(u-c)-(h-c)*(a-f),v=(s-a)*(u-c)-(l-u)*(a-f);if(0===g)return null;var y=p/g,m=v/g;if(y>=0&&y<=1&&m>=0&&m<=1){var w=a+y*(s-a),b=u+y*(l-u);return n.point([w,b])}return null}t.default=function(e,t){var r={},o=[];if("LineString"===e.type&&(e=n.feature(e)),"LineString"===t.type&&(t=n.feature(t)),"Feature"===e.type&&"Feature"===t.type&&null!==e.geometry&&null!==t.geometry&&"LineString"===e.geometry.type&&"LineString"===t.geometry.type&&2===e.geometry.coordinates.length&&2===t.geometry.coordinates.length){var f=l(e,t);return f&&o.push(f),n.featureCollection(o)}var c=s.default();return c.load(a.default(t)),u.featureEach(a.default(e),(function(e){u.featureEach(c.search(e),(function(t){var n=l(e,t);if(n){var a=i.getCoords(n).join(",");r[a]||(r[a]=!0,o.push(n))}}))})),n.featureCollection(o)}},4590:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0});var o=r(4102),n=r(611),i=r(1540);t.default=function(e){if(!e)throw new Error("geojson is required");var t=[];return i.flattenEach(e,(function(e){!function(e,t){var r=[],i=e.geometry;if(null!==i){switch(i.type){case"Polygon":r=n.getCoords(i);break;case"LineString":r=[n.getCoords(i)]}r.forEach((function(r){var n=function(e,t){var r=[];return e.reduce((function(e,n){var i,a,u,s,l,f,c=o.lineString([e,n],t);return c.bbox=(a=n,u=(i=e)[0],s=i[1],l=a[0],f=a[1],[u<l?u:l,s<f?s:f,u>l?u:l,s>f?s:f]),r.push(c),n})),r}(r,e.properties);n.forEach((function(e){e.id=t.length,t.push(e)}))}))}}(e,t)})),o.featureCollection(t)}},1540:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0});var o=r(4102);function n(e,t,r){if(null!==e)for(var o,i,a,u,s,l,f,c,d=0,h=0,g=e.type,p="FeatureCollection"===g,v="Feature"===g,y=p?e.features.length:1,m=0;m<y;m++){s=(c=!!(f=p?e.features[m].geometry:v?e.geometry:e)&&"GeometryCollection"===f.type)?f.geometries.length:1;for(var w=0;w<s;w++){var b=0,M=0;if(null!==(u=c?f.geometries[w]:f)){l=u.coordinates;var P=u.type;switch(d=!r||"Polygon"!==P&&"MultiPolygon"!==P?0:1,P){case null:break;case"Point":if(!1===t(l,h,m,b,M))return!1;h++,b++;break;case"LineString":case"MultiPoint":for(o=0;o<l.length;o++){if(!1===t(l[o],h,m,b,M))return!1;h++,"MultiPoint"===P&&b++}"LineString"===P&&b++;break;case"Polygon":case"MultiLineString":for(o=0;o<l.length;o++){for(i=0;i<l[o].length-d;i++){if(!1===t(l[o][i],h,m,b,M))return!1;h++}"MultiLineString"===P&&b++,"Polygon"===P&&M++}"Polygon"===P&&b++;break;case"MultiPolygon":for(o=0;o<l.length;o++){for(M=0,i=0;i<l[o].length;i++){for(a=0;a<l[o][i].length-d;a++){if(!1===t(l[o][i][a],h,m,b,M))return!1;h++}M++}b++}break;case"GeometryCollection":for(o=0;o<u.geometries.length;o++)if(!1===n(u.geometries[o],t,r))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function i(e,t){var r;switch(e.type){case"FeatureCollection":for(r=0;r<e.features.length&&!1!==t(e.features[r].properties,r);r++);break;case"Feature":t(e.properties,0)}}function a(e,t){if("Feature"===e.type)t(e,0);else if("FeatureCollection"===e.type)for(var r=0;r<e.features.length&&!1!==t(e.features[r],r);r++);}function u(e,t){var r,o,n,i,a,u,s,l,f,c,d=0,h="FeatureCollection"===e.type,g="Feature"===e.type,p=h?e.features.length:1;for(r=0;r<p;r++){for(u=h?e.features[r].geometry:g?e.geometry:e,l=h?e.features[r].properties:g?e.properties:{},f=h?e.features[r].bbox:g?e.bbox:void 0,c=h?e.features[r].id:g?e.id:void 0,a=(s=!!u&&"GeometryCollection"===u.type)?u.geometries.length:1,n=0;n<a;n++)if(null!==(i=s?u.geometries[n]:u))switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===t(i,d,l,f,c))return!1;break;case"GeometryCollection":for(o=0;o<i.geometries.length;o++)if(!1===t(i.geometries[o],d,l,f,c))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===t(null,d,l,f,c))return!1;d++}}function s(e,t){u(e,(function(e,r,n,i,a){var u,s=null===e?null:e.type;switch(s){case null:case"Point":case"LineString":case"Polygon":return!1!==t(o.feature(e,n,{bbox:i,id:a}),r,0)&&void 0}switch(s){case"MultiPoint":u="Point";break;case"MultiLineString":u="LineString";break;case"MultiPolygon":u="Polygon"}for(var l=0;l<e.coordinates.length;l++){var f={type:u,coordinates:e.coordinates[l]};if(!1===t(o.feature(f,n),r,l))return!1}}))}function l(e,t){s(e,(function(e,r,i){var a=0;if(e.geometry){var u=e.geometry.type;if("Point"!==u&&"MultiPoint"!==u){var s,l=0,f=0,c=0;return!1!==n(e,(function(n,u,d,h,g){if(void 0===s||r>l||h>f||g>c)return s=n,l=r,f=h,c=g,void(a=0);var p=o.lineString([s,n],e.properties);if(!1===t(p,r,i,g,a))return!1;a++,s=n}))&&void 0}}}))}function f(e,t){if(!e)throw new Error("geojson is required");s(e,(function(e,r,n){if(null!==e.geometry){var i=e.geometry.type,a=e.geometry.coordinates;switch(i){case"LineString":if(!1===t(e,r,n,0,0))return!1;break;case"Polygon":for(var u=0;u<a.length;u++)if(!1===t(o.lineString(a[u],e.properties),r,n,u))return!1}}}))}t.coordAll=function(e){var t=[];return n(e,(function(e){t.push(e)})),t},t.coordEach=n,t.coordReduce=function(e,t,r,o){var i=r;return n(e,(function(e,o,n,a,u){i=0===o&&void 0===r?e:t(i,e,o,n,a,u)}),o),i},t.featureEach=a,t.featureReduce=function(e,t,r){var o=r;return a(e,(function(e,n){o=0===n&&void 0===r?e:t(o,e,n)})),o},t.findPoint=function(e,t){if(t=t||{},!o.isObject(t))throw new Error("options is invalid");var r,n=t.featureIndex||0,i=t.multiFeatureIndex||0,a=t.geometryIndex||0,u=t.coordIndex||0,s=t.properties;switch(e.type){case"FeatureCollection":n<0&&(n=e.features.length+n),s=s||e.features[n].properties,r=e.features[n].geometry;break;case"Feature":s=s||e.properties,r=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":r=e;break;default:throw new Error("geojson is invalid")}if(null===r)return null;var l=r.coordinates;switch(r.type){case"Point":return o.point(l,s,t);case"MultiPoint":return i<0&&(i=l.length+i),o.point(l[i],s,t);case"LineString":return u<0&&(u=l.length+u),o.point(l[u],s,t);case"Polygon":return a<0&&(a=l.length+a),u<0&&(u=l[a].length+u),o.point(l[a][u],s,t);case"MultiLineString":return i<0&&(i=l.length+i),u<0&&(u=l[i].length+u),o.point(l[i][u],s,t);case"MultiPolygon":return i<0&&(i=l.length+i),a<0&&(a=l[i].length+a),u<0&&(u=l[i][a].length-u),o.point(l[i][a][u],s,t)}throw new Error("geojson is invalid")},t.findSegment=function(e,t){if(t=t||{},!o.isObject(t))throw new Error("options is invalid");var r,n=t.featureIndex||0,i=t.multiFeatureIndex||0,a=t.geometryIndex||0,u=t.segmentIndex||0,s=t.properties;switch(e.type){case"FeatureCollection":n<0&&(n=e.features.length+n),s=s||e.features[n].properties,r=e.features[n].geometry;break;case"Feature":s=s||e.properties,r=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":r=e;break;default:throw new Error("geojson is invalid")}if(null===r)return null;var l=r.coordinates;switch(r.type){case"Point":case"MultiPoint":return null;case"LineString":return u<0&&(u=l.length+u-1),o.lineString([l[u],l[u+1]],s,t);case"Polygon":return a<0&&(a=l.length+a),u<0&&(u=l[a].length+u-1),o.lineString([l[a][u],l[a][u+1]],s,t);case"MultiLineString":return i<0&&(i=l.length+i),u<0&&(u=l[i].length+u-1),o.lineString([l[i][u],l[i][u+1]],s,t);case"MultiPolygon":return i<0&&(i=l.length+i),a<0&&(a=l[i].length+a),u<0&&(u=l[i][a].length-u-1),o.lineString([l[i][a][u],l[i][a][u+1]],s,t)}throw new Error("geojson is invalid")},t.flattenEach=s,t.flattenReduce=function(e,t,r){var o=r;return s(e,(function(e,n,i){o=0===n&&0===i&&void 0===r?e:t(o,e,n,i)})),o},t.geomEach=u,t.geomReduce=function(e,t,r){var o=r;return u(e,(function(e,n,i,a,u){o=0===n&&void 0===r?e:t(o,e,n,i,a,u)})),o},t.lineEach=f,t.lineReduce=function(e,t,r){var o=r;return f(e,(function(e,n,i,a){o=0===n&&void 0===r?e:t(o,e,n,i,a)})),o},t.propEach=i,t.propReduce=function(e,t,r){var o=r;return i(e,(function(e,n){o=0===n&&void 0===r?e:t(o,e,n)})),o},t.segmentEach=l,t.segmentReduce=function(e,t,r){var o=r,n=!1;return l(e,(function(e,i,a,u,s){o=!1===n&&void 0===r?e:t(o,e,i,a,u,s),n=!0})),o}},9034:(e,t,r)=>{var o=r(1208),n=r(3737),i=r(1013);function a(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var u=a(o),s=a(n),l=a(i);function f(e,t){var r=l.default(e,t),o=u.default(e,t);return s.default(e,r/2,o)}e.exports=f,e.exports.default=f},3807:function(e,t,r){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var n=o(r(1208)),i=o(r(1013)),a=o(r(3737)),u=o(r(3663)),s=r(1540),l=r(4102),f=r(611);t.default=function(e,t,r){void 0===r&&(r={});var o=l.point([1/0,1/0],{dist:1/0}),c=0;return s.flattenEach(e,(function(e){for(var s=f.getCoords(e),d=0;d<s.length-1;d++){var h=l.point(s[d]);h.properties.dist=i.default(t,h,r);var g=l.point(s[d+1]);g.properties.dist=i.default(t,g,r);var p=i.default(h,g,r),v=Math.max(h.properties.dist,g.properties.dist),y=n.default(h,g),m=a.default(t,v,y+90,r),w=a.default(t,v,y-90,r),b=u.default(l.lineString([m.geometry.coordinates,w.geometry.coordinates]),l.lineString([h.geometry.coordinates,g.geometry.coordinates])),M=null;b.features.length>0&&((M=b.features[0]).properties.dist=i.default(t,M,r),M.properties.location=c+i.default(h,M,r)),h.properties.dist<o.properties.dist&&((o=h).properties.index=d,o.properties.location=c),g.properties.dist<o.properties.dist&&((o=g).properties.index=d+1,o.properties.location=c+p),M&&M.properties.dist<o.properties.dist&&((o=M).properties.index=d),c+=p}})),o}},3892:function(e,t,r){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var n=o(r(1013)),i=r(4102),a=r(611),u=r(1540),s=o(r(6213));function l(e,t){return e[0]*t[0]+e[1]*t[1]}function f(e,t,r){return"planar"===r.method?s.default(e,t,r):n.default(e,t,r)}t.default=function(e,t,r){if(void 0===r&&(r={}),r.method||(r.method="geodesic"),r.units||(r.units="kilometers"),!e)throw new Error("pt is required");if(Array.isArray(e)?e=i.point(e):"Point"===e.type?e=i.feature(e):a.featureOf(e,"Point","point"),!t)throw new Error("line is required");Array.isArray(t)?t=i.lineString(t):"LineString"===t.type?t=i.feature(t):a.featureOf(t,"LineString","line");var o=1/0,n=e.geometry.coordinates;return u.segmentEach(t,(function(e){var t=e.geometry.coordinates[0],i=e.geometry.coordinates[1],a=function(e,t,r,o){var n=[r[0]-t[0],r[1]-t[1]],i=[e[0]-t[0],e[1]-t[1]],a=l(i,n);if(a<=0)return f(e,t,{method:o.method,units:"degrees"});var u=l(n,n);if(u<=a)return f(e,r,{method:o.method,units:"degrees"});var s=a/u,c=[t[0]+s*n[0],t[1]+s*n[1]];return f(e,c,{method:o.method,units:"degrees"})}(n,t,i,r);a<o&&(o=a)})),i.convertLength(o,"degrees",r.units)}},7383:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0});var o=r(4102),n=r(611);function i(e,t){return void 0===t&&(t={}),u(n.getGeom(e).coordinates,t.properties?t.properties:"Feature"===e.type?e.properties:{})}function a(e,t){void 0===t&&(t={});var r=n.getGeom(e).coordinates,i=t.properties?t.properties:"Feature"===e.type?e.properties:{},a=[];return r.forEach((function(e){a.push(u(e,i))})),o.featureCollection(a)}function u(e,t){return e.length>1?o.multiLineString(e,t):o.lineString(e[0],t)}t.default=function(e,t){void 0===t&&(t={});var r=n.getGeom(e);switch(t.properties||"Feature"!==e.type||(t.properties=e.properties),r.type){case"Polygon":return i(r,t);case"MultiPolygon":return a(r,t);default:throw new Error("invalid poly")}},t.polygonToLine=i,t.multiPolygonToLine=a,t.coordsToLine=u},1138:(e,t,r)=>{var o=r(6565),n=r(3809),i=r(1540),a=r(611),u=r(4102);function s(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var l=s(o),f=s(n);function c(e,t){if(t=t||{},!u.isObject(t))throw new Error("options is invalid");var r=t.reverse||!1,o=t.mutate||!1;if(!e)throw new Error("<geojson> is required");if("boolean"!=typeof r)throw new Error("<reverse> must be a boolean");if("boolean"!=typeof o)throw new Error("<mutate> must be a boolean");!1===o&&(e=l.default(e));var n=[];switch(e.type){case"GeometryCollection":return i.geomEach(e,(function(e){d(e,r)})),e;case"FeatureCollection":return i.featureEach(e,(function(e){i.featureEach(d(e,r),(function(e){n.push(e)}))})),u.featureCollection(n)}return d(e,r)}function d(e,t){switch("Feature"===e.type?e.geometry.type:e.type){case"GeometryCollection":return i.geomEach(e,(function(e){d(e,t)})),e;case"LineString":return h(a.getCoords(e),t),e;case"Polygon":return g(a.getCoords(e),t),e;case"MultiLineString":return a.getCoords(e).forEach((function(e){h(e,t)})),e;case"MultiPolygon":return a.getCoords(e).forEach((function(e){g(e,t)})),e;case"Point":case"MultiPoint":return e}}function h(e,t){f.default(e)===t&&e.reverse()}function g(e,t){f.default(e[0])!==t&&e[0].reverse();for(var r=1;r<e.length;r++)f.default(e[r])===t&&e[r].reverse()}e.exports=c,e.exports.default=c},6912:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0});var o=r(4102),n=r(611);function i(e,t){var r=o.degreesToRadians(e[1]),n=o.degreesToRadians(t[1]),i=o.degreesToRadians(t[0]-e[0]);i>Math.PI&&(i-=2*Math.PI),i<-Math.PI&&(i+=2*Math.PI);var a=Math.log(Math.tan(n/2+Math.PI/4)/Math.tan(r/2+Math.PI/4)),u=Math.atan2(i,a);return(o.radiansToDegrees(u)+360)%360}t.default=function(e,t,r){var o;return void 0===r&&(r={}),(o=r.final?i(n.getCoord(t),n.getCoord(e)):i(n.getCoord(e),n.getCoord(t)))>180?-(360-o):o}},2054:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0});var o=r(4102),n=r(611);t.default=function(e,t,r,i){void 0===i&&(i={});var a=t<0,u=o.convertLength(Math.abs(t),i.units,"meters");a&&(u=-Math.abs(u));var s=n.getCoord(e),l=function(e,t,r,n){n=void 0===n?o.earthRadius:Number(n);var i=t/n,a=e[0]*Math.PI/180,u=o.degreesToRadians(e[1]),s=o.degreesToRadians(r),l=i*Math.cos(s),f=u+l;Math.abs(f)>Math.PI/2&&(f=f>0?Math.PI-f:-Math.PI-f);var c=Math.log(Math.tan(f/2+Math.PI/4)/Math.tan(u/2+Math.PI/4)),d=Math.abs(c)>1e-11?l/c:Math.cos(u),h=i*Math.sin(s)/d;return[(180*(a+h)/Math.PI+540)%360-180,180*f/Math.PI]}(s,u,r);return l[0]+=l[0]-s[0]>180?-360:s[0]-l[0]>180?360:0,o.point(l,i.properties)}},6213:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0});var o=r(4102),n=r(611);t.default=function(e,t,r){void 0===r&&(r={});var i=n.getCoord(e),a=n.getCoord(t);a[0]+=a[0]-i[0]>180?-360:i[0]-a[0]>180?360:0;var u=function(e,t,r){var n=r=void 0===r?o.earthRadius:Number(r),i=e[1]*Math.PI/180,a=t[1]*Math.PI/180,u=a-i,s=Math.abs(t[0]-e[0])*Math.PI/180;s>Math.PI&&(s-=2*Math.PI);var l=Math.log(Math.tan(a/2+Math.PI/4)/Math.tan(i/2+Math.PI/4)),f=Math.abs(l)>1e-11?u/l:Math.cos(i);return Math.sqrt(u*u+f*f*s*s)*n}(i,a);return o.convertLength(u,"meters",r.units)}},67:(e,t,r)=>{var o=r(6338),n=r(6912),i=r(6213),a=r(2054),u=r(6565),s=r(1540),l=r(611),f=r(4102);function c(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var d=c(o),h=c(n),g=c(i),p=c(a),v=c(u);function y(e,t,r){if(r=r||{},!f.isObject(r))throw new Error("options is invalid");var o=r.pivot,n=r.mutate;if(!e)throw new Error("geojson is required");if(null==t||isNaN(t))throw new Error("angle is required");return 0===t||(o||(o=d.default(e)),!1!==n&&void 0!==n||(e=v.default(e)),s.coordEach(e,(function(e){var r=h.default(o,e)+t,n=g.default(o,e),i=l.getCoords(p.default(o,n,r));e[0]=i[0],e[1]=i[1]}))),e}e.exports=y,e.exports.default=y},7517:(e,t,r)=>{var o=r(6565),n=r(8230),i=r(6338),a=r(9705),u=r(6912),s=r(6213),l=r(2054),f=r(1540),c=r(4102),d=r(611);function h(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var g=h(o),p=h(n),v=h(i),y=h(a),m=h(u),w=h(s),b=h(l);function M(e,t,r){if(r=r||{},!c.isObject(r))throw new Error("options is invalid");var o=r.origin,n=r.mutate;if(!e)throw new Error("geojson required");if("number"!=typeof t||0===t)throw new Error("invalid factor");var i=Array.isArray(o)||"object"==typeof o;return!0!==n&&(e=g.default(e)),"FeatureCollection"!==e.type||i?P(e,t,o):(f.featureEach(e,(function(r,n){e.features[n]=P(r,t,o)})),e)}function P(e,t,r){var o="Point"===d.getType(e);return r=function(e,t){null==t&&(t="centroid");if(Array.isArray(t)||"object"==typeof t)return d.getCoord(t);var r=e.bbox?e.bbox:y.default(e),o=r[0],n=r[1],i=r[2],a=r[3];switch(t){case"sw":case"southwest":case"westsouth":case"bottomleft":return c.point([o,n]);case"se":case"southeast":case"eastsouth":case"bottomright":return c.point([i,n]);case"nw":case"northwest":case"westnorth":case"topleft":return c.point([o,a]);case"ne":case"northeast":case"eastnorth":case"topright":return c.point([i,a]);case"center":return p.default(e);case void 0:case null:case"centroid":return v.default(e);default:throw new Error("invalid origin")}}(e,r),1===t||o||f.coordEach(e,(function(e){var o=w.default(r,e),n=m.default(r,e),i=o*t,a=d.getCoords(b.default(r,i,n));e[0]=a[0],e[1]=a[1],3===e.length&&(e[2]*=t)})),e}e.exports=M,e.exports.default=M},2418:(e,t,r)=>{var o=r(1540),n=r(4102),i=r(611),a=r(6565),u=r(2054);function s(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var l=s(a),f=s(u);function c(e,t,r,a){if(a=a||{},!n.isObject(a))throw new Error("options is invalid");var u=a.units,s=a.zTranslation,c=a.mutate;if(!e)throw new Error("geojson is required");if(null==t||isNaN(t))throw new Error("distance is required");if(s&&"number"!=typeof s&&isNaN(s))throw new Error("zTranslation is not a number");if(s=void 0!==s?s:0,0===t&&0===s)return e;if(null==r||isNaN(r))throw new Error("direction is required");return t<0&&(t=-t,r+=180),!1!==c&&void 0!==c||(e=l.default(e)),o.coordEach(e,(function(e){var o=i.getCoords(f.default(e,t,r,{units:u}));e[0]=o[0],e[1]=o[1],s&&3===e.length&&(e[2]+=s)})),e}e.exports=c,e.exports.default=c},1959:function(e,t,r){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var n=o(r(2676)),i=r(611),a=r(4102);t.default=function(e,t,r){void 0===r&&(r={});var o=i.getGeom(e),u=i.getGeom(t),s=n.default.union(o.coordinates,u.coordinates);return 0===s.length?null:1===s.length?a.polygon(s[0],r.properties):a.multiPolygon(s,r.properties)}}}]);