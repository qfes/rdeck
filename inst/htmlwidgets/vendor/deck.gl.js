"use strict";(self.webpackChunkrdeck=self.webpackChunkrdeck||[]).push([[486],{3295:(t,e,i)=>{i.d(e,{Z:()=>c});var n=i(4572),o=i(8918),s=i(1761),r=i(3518),a=i(9450);function l(t,e){const i={};for(const n in t)e.includes(n)||(i[n]=t[n]);return i}class c extends o.Z{constructor(...t){super(...t),(0,n.Z)(this,"state",void 0)}initializeAggregationLayer(t){super.initializeState(this.context),this.setState({ignoreProps:l(this.constructor._propTypes,t.data.props),dimensions:t})}updateState(t){super.updateState(t);const{changeFlags:e}=t;if(e.extensionsChanged){const t=this.getShaders({});t&&t.defines&&(t.defines.NON_INSTANCED_MODEL=1),this.updateShaders(t)}this._updateAttributes()}updateAttributes(t){this.setState({changedAttributes:t})}getAttributes(){return this.getAttributeManager().getShaderAttributes()}getModuleSettings(){const{viewport:t,mousePosition:e,gl:i}=this.context;return Object.assign(Object.create(this.props),{viewport:t,mousePosition:e,pickingActive:0,devicePixelRatio:(0,a.w)(i)})}updateShaders(t){}isAggregationDirty(t,e={}){const{props:i,oldProps:n,changeFlags:o}=t,{compareAll:r=!1,dimension:a}=e,{ignoreProps:l}=this.state,{props:c,accessors:d=[]}=a,{updateTriggersChanged:u}=o;if(o.dataChanged)return!0;if(u){if(u.all)return!0;for(const t of d)if(u[t])return!0}if(r)return!!o.extensionsChanged||(0,s.tg)({oldProps:n,newProps:i,ignoreProps:l,propTypes:this.constructor._propTypes});for(const t of c)if(i[t]!==n[t])return!0;return!1}isAttributeChanged(t){const{changedAttributes:e}=this.state;return t?e&&void 0!==e[t]:!function(t){let e=!0;for(const i in t){e=!1;break}return e}(e)}_getAttributeManager(){return new r.Z(this.context.gl,{id:this.props.id,stats:this.context.stats})}}(0,n.Z)(c,"layerName","AggregationLayer")},9080:(t,e,i)=>{i.d(e,{KM:()=>g,ab:()=>kt,YY:()=>Ge,ML:()=>ei,mU:()=>ni,zP:()=>fi,dX:()=>Bt,p3:()=>At,Di:()=>J.Z,l0:()=>ft,oA:()=>Rt,Wc:()=>N});var n=i(4572),o=i(744),s=i(6948),r=i(4211),a=i(9450),l=i(1953),c=i(9769),d=i(3346),u=i(1083),h=i(7870),p=i(3844);const g={SUM:1,MEAN:2,MIN:3,MAX:4};function f(t,e){return t+e}function m(t,e){return e>t?e:t}function v(t,e){return e<t?e:t}function y(t,e,i){const n=g[t]||g.SUM;switch(e=function(t,e={}){if(Number.isFinite(t))return t;return i=>(e.index=i.index,t(i.source,e))}(e,i),n){case g.MIN:return t=>function(t,e){if(Number.isFinite(e))return t.length?e:null;const i=t.map(e).filter(Number.isFinite);return i.length?i.reduce(v,1/0):null}(t,e);case g.SUM:return t=>function(t,e){if(Number.isFinite(e))return t.length?t.length*e:null;const i=t.map(e).filter(Number.isFinite);return i.length?i.reduce(f,0):null}(t,e);case g.MEAN:return t=>function(t,e){if(Number.isFinite(e))return t.length?e:null;const i=t.map(e).filter(Number.isFinite);return i.length?i.reduce(f,0)/i.length:null}(t,e);case g.MAX:return t=>function(t,e){if(Number.isFinite(e))return t.length?e:null;const i=t.map(e).filter(Number.isFinite);return i.length?i.reduce(m,-1/0):null}(t,e);default:return null}}function _(t,e={}){return i=>(e.indices=i.map((t=>t.index)),t(i.map((t=>t.source)),e))}const x={projectPoints:!1,viewport:null,createBufferObjects:!0,moduleSettings:{}},w=3402823466e29,P=[32775,32774],b=[32776,32774],S=[32776,32775],C={[g.SUM]:32774,[g.MEAN]:32774,[g.MIN]:P,[g.MAX]:b},M={size:1,operation:g.SUM,needMin:!1,needMax:!1,combineMaxMin:!1},T="#define SHADER_NAME gpu-aggregation-to-grid-vs\n\nattribute vec3 positions;\nattribute vec3 positions64Low;\nattribute vec3 weights;\nuniform vec2 cellSize;\nuniform vec2 gridSize;\nuniform bool projectPoints;\nuniform vec2 translation;\nuniform vec3 scaling;\n\nvarying vec3 vWeights;\n\nvec2 project_to_pixel(vec4 pos) {\n  vec4 result;\n  pos.xy = pos.xy/pos.w;\n  result = pos + vec4(translation, 0., 0.);\n  result.xy = scaling.z > 0. ? result.xy * scaling.xy : result.xy;\n  return result.xy;\n}\n\nvoid main(void) {\n\n  vWeights = weights;\n\n  vec4 windowPos = vec4(positions, 1.);\n  if (projectPoints) {\n    windowPos = project_position_to_clipspace(positions, positions64Low, vec3(0));\n  }\n\n  vec2 pos = project_to_pixel(windowPos);\n\n  vec2 pixelXY64[2];\n  pixelXY64[0] = vec2(pos.x, 0.);\n  pixelXY64[1] = vec2(pos.y, 0.);\n  vec2 gridXY64[2];\n  gridXY64[0] = div_fp64(pixelXY64[0], vec2(cellSize.x, 0));\n  gridXY64[1] = div_fp64(pixelXY64[1], vec2(cellSize.y, 0));\n  float x = floor(gridXY64[0].x);\n  float y = floor(gridXY64[1].x);\n  pos = vec2(x, y);\n  pos = (pos * (2., 2.) / (gridSize)) - (1., 1.);\n  vec2 offset = 1.0 / gridSize;\n  pos = pos + offset;\n\n  gl_Position = vec4(pos, 0.0, 1.0);\n  gl_PointSize = 1.0;\n}\n",L="#define SHADER_NAME gpu-aggregation-to-grid-fs\n\nprecision highp float;\n\nvarying vec3 vWeights;\n\nvoid main(void) {\n  gl_FragColor = vec4(vWeights, 1.0);\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",A="#version 300 es\n#define SHADER_NAME gpu-aggregation-all-vs-64\n\nin vec2 position;\nuniform ivec2 gridSize;\nout vec2 vTextureCoord;\n\nvoid main(void) {\n  vec2 pos = vec2(-1.0, -1.0);\n  vec2 offset = 1.0 / vec2(gridSize);\n  pos = pos + offset;\n\n  gl_Position = vec4(pos, 0.0, 1.0);\n\n  int yIndex = gl_InstanceID / gridSize[0];\n  int xIndex = gl_InstanceID - (yIndex * gridSize[0]);\n\n  vec2 yIndexFP64 = vec2(float(yIndex), 0.);\n  vec2 xIndexFP64 = vec2(float(xIndex), 0.);\n  vec2 gridSizeYFP64 = vec2(gridSize[1], 0.);\n  vec2 gridSizeXFP64 = vec2(gridSize[0], 0.);\n\n  vec2 texCoordXFP64 = div_fp64(yIndexFP64, gridSizeYFP64);\n  vec2 texCoordYFP64 = div_fp64(xIndexFP64, gridSizeXFP64);\n\n  vTextureCoord = vec2(texCoordYFP64.x, texCoordXFP64.x);\n  gl_PointSize = 1.0;\n}\n",Z="#version 300 es\n#define SHADER_NAME gpu-aggregation-all-fs\n\nprecision highp float;\n\nin vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform bool combineMaxMin;\nout vec4 fragColor;\nvoid main(void) {\n  vec4 textureColor = texture(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));\n  if (textureColor.a == 0.) {\n    discard;\n  }\n  fragColor.rgb = textureColor.rgb;\n  fragColor.a = combineMaxMin ? textureColor.r : textureColor.a;\n}\n",E="#define SHADER_NAME gpu-aggregation-transform-mean-vs\nattribute vec4 aggregationValues;\nvarying vec4 meanValues;\n\nvoid main()\n{\n  bool isCellValid = bool(aggregationValues.w > 0.);\n  meanValues.xyz = isCellValid ? aggregationValues.xyz/aggregationValues.w : vec3(0, 0, 0);\n  meanValues.w = aggregationValues.w;\n  gl_PointSize = 1.0;\n}\n";var z=i(4912),I=i(3849);const O={10240:9728,10241:9728};function R(t,e={}){const{width:i=1,height:n=1,data:o=null,unpackFlipY:s=!0,parameters:r=O}=e;return new z.Z(t,{data:o,format:(0,a.D0)(t)?34836:6408,type:5126,border:0,mipmaps:!1,parameters:r,dataFormat:6408,width:i,height:n,unpackFlipY:s})}function D(t,e){const{id:i,width:n=1,height:o=1,texture:s}=e;return new I.Z(t,{id:i,width:n,height:o,attachments:{36064:s}})}const F=["aggregationBuffer","maxMinBuffer","minBuffer","maxBuffer"],k={maxData:"maxBuffer",minData:"minBuffer",maxMinData:"maxMinBuffer"},j=[s.h.WEBGL2,s.h.COLOR_ATTACHMENT_RGBA32F,s.h.BLEND_EQUATION_MINMAX,s.h.FLOAT_BLEND,s.h.TEXTURE_FLOAT];class N{static getAggregationData({aggregationData:t,maxData:e,minData:i,maxMinData:n,pixelIndex:o}){const s=4*o,r={};return t&&(r.cellCount=t[s+3],r.cellWeight=t[s]),n?(r.maxCellWieght=n[0],r.minCellWeight=n[3]):(e&&(r.maxCellWieght=e[0],r.totalCount=e[3]),i&&(r.minCellWeight=i[0],r.totalCount=e[3])),r}static getCellData({countsData:t,size:e=1}){const i=t.length/4,n=new Float32Array(i*e),o=new Uint32Array(i);for(let s=0;s<i;s++){for(let i=0;i<e;i++)n[s*e+i]=t[4*s+i];o[s]=t[4*s+3]}return{cellCounts:o,cellWeights:n}}static isSupported(t){return(0,r.ag)(t,j)}constructor(t,e={}){this.id=e.id||"gpu-grid-aggregator",this.gl=t,this.state={weightAttributes:{},textures:{},meanTextures:{},buffers:{},framebuffers:{},maxMinFramebuffers:{},minFramebuffers:{},maxFramebuffers:{},equations:{},resources:{},results:{}},this._hasGPUSupport=(0,a.D0)(t)&&(0,r.ag)(this.gl,s.h.BLEND_EQUATION_MINMAX,s.h.COLOR_ATTACHMENT_RGBA32F,s.h.TEXTURE_FLOAT),this._hasGPUSupport&&this._setupModels()}delete(){const{gridAggregationModel:t,allAggregationModel:e,meanTransform:i}=this,{textures:n,framebuffers:o,maxMinFramebuffers:s,minFramebuffers:r,maxFramebuffers:a,meanTextures:l,resources:c}=this.state;null==t||t.delete(),null==e||e.delete(),null==i||i.delete(),function(t){t=Array.isArray(t)?t:[t],t.forEach((t=>{for(const e in t)t[e].delete()}))}([o,n,s,r,a,l,c])}run(t={}){this.setState({results:{}});const e=this._normalizeAggregationParams(t);return this._hasGPUSupport||o.Z.log(1,"GPUGridAggregator: not supported")(),this._runAggregation(e)}getData(t){const e={},i=this.state.results;i[t].aggregationData||(i[t].aggregationData=i[t].aggregationBuffer.getData()),e.aggregationData=i[t].aggregationData;for(const n in k){const o=k[n];(i[t][n]||i[t][o])&&(i[t][n]=i[t][n]||i[t][o].getData(),e[n]=i[t][n])}return e}updateShaders(t={}){this.setState({shaderOptions:t,modelDirty:!0})}_normalizeAggregationParams(t){const e={...x,...t},{weights:i}=e;return i&&(e.weights=function(t){const e={};for(const i in t)e[i]={...M,...t[i]};return e}(i)),e}setState(t){Object.assign(this.state,t)}_getAggregateData(t){const e={},{textures:i,framebuffers:n,maxMinFramebuffers:o,minFramebuffers:s,maxFramebuffers:r,resources:a}=this.state,{weights:c}=t;for(const t in c){e[t]={};const{needMin:d,needMax:u,combineMaxMin:h}=c[t];e[t].aggregationTexture=i[t],e[t].aggregationBuffer=(0,l.Jb)(n[t],{target:c[t].aggregationBuffer,sourceType:5126}),d&&u&&h?(e[t].maxMinBuffer=(0,l.Jb)(o[t],{target:c[t].maxMinBuffer,sourceType:5126}),e[t].maxMinTexture=a["".concat(t,"-maxMinTexture")]):(d&&(e[t].minBuffer=(0,l.Jb)(s[t],{target:c[t].minBuffer,sourceType:5126}),e[t].minTexture=a["".concat(t,"-minTexture")]),u&&(e[t].maxBuffer=(0,l.Jb)(r[t],{target:c[t].maxBuffer,sourceType:5126}),e[t].maxTexture=a["".concat(t,"-maxTexture")]))}return this._trackGPUResultBuffers(e,c),e}_renderAggregateData(t){const{cellSize:e,projectPoints:i,attributes:n,moduleSettings:o,numCol:s,numRow:r,weights:a,translation:l,scaling:c}=t,{maxMinFramebuffers:d,minFramebuffers:u,maxFramebuffers:h}=this.state,p=[s,r],g={blend:!0,depthTest:!1,blendFunc:[1,1]},f={cellSize:e,gridSize:p,projectPoints:i,translation:l,scaling:c};for(const t in a){const{needMin:e,needMax:i}=a[t],s=e&&i&&a[t].combineMaxMin;this._renderToWeightsTexture({id:t,parameters:g,moduleSettings:o,uniforms:f,gridSize:p,attributes:n,weights:a}),s?this._renderToMaxMinTexture({id:t,parameters:{...g,blendEquation:S},gridSize:p,minOrMaxFb:d[t],clearParams:{clearColor:[0,0,0,w]},combineMaxMin:s}):(e&&this._renderToMaxMinTexture({id:t,parameters:{...g,blendEquation:P},gridSize:p,minOrMaxFb:u[t],clearParams:{clearColor:[w,w,w,0]},combineMaxMin:s}),i&&this._renderToMaxMinTexture({id:t,parameters:{...g,blendEquation:b},gridSize:p,minOrMaxFb:h[t],clearParams:{clearColor:[0,0,0,0]},combineMaxMin:s}))}}_renderToMaxMinTexture(t){const{id:e,parameters:i,gridSize:n,minOrMaxFb:o,combineMaxMin:s,clearParams:r={}}=t,{framebuffers:l}=this.state,{gl:c,allAggregationModel:d}=this;(0,a.s8)(c,{...r,framebuffer:o,viewport:[0,0,n[0],n[1]]},(()=>{c.clear(16384),d.draw({parameters:i,uniforms:{uSampler:l[e].texture,gridSize:n,combineMaxMin:s}})}))}_renderToWeightsTexture(t){const{id:e,parameters:i,moduleSettings:n,uniforms:o,gridSize:s,weights:r}=t,{framebuffers:l,equations:c,weightAttributes:u}=this.state,{gl:h,gridAggregationModel:p}=this,{operation:f}=r[e],m=f===g.MIN?[w,w,w,0]:[0,0,0,0];if((0,a.s8)(h,{framebuffer:l[e],viewport:[0,0,s[0],s[1]],clearColor:m},(()=>{h.clear(16384);const t={weights:u[e]};p.draw({parameters:{...i,blendEquation:c[e]},moduleSettings:n,uniforms:o,attributes:t})})),f===g.MEAN){const{meanTextures:t,textures:i}=this.state,n={_sourceTextures:{aggregationValues:t[e]},_targetTexture:i[e],elementCount:i[e].width*i[e].height};this.meanTransform?this.meanTransform.update(n):this.meanTransform=function(t,e){return new d.Z(t,{vs:E,_targetTextureVarying:"meanValues",...e})}(h,n),this.meanTransform.run({parameters:{blend:!1,depthTest:!1}}),l[e].attach({36064:i[e]})}}_runAggregation(t){this._updateModels(t),this._setupFramebuffers(t),this._renderAggregateData(t);const e=this._getAggregateData(t);return this.setState({results:e}),e}_setupFramebuffers(t){const{textures:e,framebuffers:i,maxMinFramebuffers:n,minFramebuffers:o,maxFramebuffers:s,meanTextures:r,equations:a}=this.state,{weights:l}=t,{numCol:c,numRow:d}=t,u={width:c,height:d};for(const t in l){const{needMin:h,needMax:p,combineMaxMin:f,operation:m}=l[t];e[t]=l[t].aggregationTexture||e[t]||R(this.gl,{id:"".concat(t,"-texture"),width:c,height:d}),e[t].resize(u);let v=e[t];m===g.MEAN&&(r[t]=r[t]||R(this.gl,{id:"".concat(t,"-mean-texture"),width:c,height:d}),r[t].resize(u),v=r[t]),i[t]?i[t].attach({36064:v}):i[t]=D(this.gl,{id:"".concat(t,"-fb"),width:c,height:d,texture:v}),i[t].resize(u),a[t]=C[m]||C.SUM,(h||p)&&(h&&p&&f?n[t]||(v=l[t].maxMinTexture||this._getMinMaxTexture("".concat(t,"-maxMinTexture")),n[t]=D(this.gl,{id:"".concat(t,"-maxMinFb"),texture:v})):(h&&(o[t]||(v=l[t].minTexture||this._getMinMaxTexture("".concat(t,"-minTexture")),o[t]=D(this.gl,{id:"".concat(t,"-minFb"),texture:v}))),p&&(s[t]||(v=l[t].maxTexture||this._getMinMaxTexture("".concat(t,"-maxTexture")),s[t]=D(this.gl,{id:"".concat(t,"-maxFb"),texture:v})))))}}_getMinMaxTexture(t){const{resources:e}=this.state;return e[t]||(e[t]=R(this.gl,{id:"resourceName"})),e[t]}_setupModels({numCol:t=0,numRow:e=0}={}){var i;const{gl:n}=this,{shaderOptions:o}=this.state;if(null===(i=this.gridAggregationModel)||void 0===i||i.delete(),this.gridAggregationModel=function(t,e){const i=(0,h.l)({vs:T,fs:L,modules:[u.n2,p.Z]},e);return new c.Z(t,{id:"Gird-Aggregation-Model",vertexCount:1,drawMode:0,...i})}(n,o),!this.allAggregationModel){const i=t*e;this.allAggregationModel=function(t,e){return new c.Z(t,{id:"All-Aggregation-Model",vs:A,fs:Z,modules:[u.n2],vertexCount:1,drawMode:0,isInstanced:!0,instanceCount:e,attributes:{position:[0,0]}})}(n,i)}}_setupWeightAttributes(t){const{weightAttributes:e}=this.state,{weights:i}=t;for(const n in i)e[n]=t.attributes[n]}_trackGPUResultBuffers(t,e){const{resources:i}=this.state;for(const n in t)if(t[n])for(const o of F)if(t[n][o]&&e[n][o]!==t[n][o]){const e="gpu-result-".concat(n,"-").concat(o);i[e]&&i[e].delete(),i[e]=t[n][o]}}_updateModels(t){const{vertexCount:e,attributes:i,numCol:n,numRow:o}=t,{modelDirty:s}=this.state;s&&(this._setupModels(t),this.setState({modelDirty:!1})),this._setupWeightAttributes(t),this.gridAggregationModel.setVertexCount(e),this.gridAggregationModel.setAttributes(i),this.allAggregationModel.setInstanceCount(n*o)}}var U=i(3982),V=i(4185),B=i(3117);const W=[[255,255,178],[254,217,118],[254,178,76],[253,141,60],[240,59,32],[189,0,38]];function G(t,e=!1,i=Float32Array){let n;if(Number.isFinite(t[0]))n=new i(t);else{n=new i(4*t.length);let e=0;for(let i=0;i<t.length;i++){const o=t[i];n[e++]=o[0],n[e++]=o[1],n[e++]=o[2],n[e++]=Number.isFinite(o[3])?o[3]:255}}if(e)for(let t=0;t<n.length;t++)n[t]/=255;return n}const H=[0,0,0,0],q=[0,255,0,255],X=["minColor","maxColor","colorRange","colorDomain"],K={cellSizePixels:{value:100,min:1},cellMarginPixels:{value:2,min:0,max:5},colorDomain:null,colorRange:W};class Y extends V.Z{constructor(...t){super(...t),(0,n.Z)(this,"state",void 0)}static isSupported(t){return(0,r.ag)(t,[s.h.TEXTURE_FLOAT])}getShaders(){return{vs:"#define SHADER_NAME screen-grid-layer-vertex-shader\n#define RANGE_COUNT 6\n\nattribute vec3 positions;\nattribute vec3 instancePositions;\nattribute vec4 instanceCounts;\nattribute vec3 instancePickingColors;\n\nuniform float opacity;\nuniform vec3 cellScale;\nuniform vec4 minColor;\nuniform vec4 maxColor;\nuniform vec4 colorRange[RANGE_COUNT];\nuniform vec2 colorDomain;\nuniform bool shouldUseMinMax;\nuniform sampler2D maxTexture;\n\nvarying vec4 vColor;\nvarying float vSampleCount;\n\nvec4 quantizeScale(vec2 domain, vec4 range[RANGE_COUNT], float value) {\n  vec4 outColor = vec4(0., 0., 0., 0.);\n  if (value >= domain.x && value <= domain.y) {\n    float domainRange = domain.y - domain.x;\n    if (domainRange <= 0.) {\n      outColor = colorRange[0];\n    } else {\n      float rangeCount = float(RANGE_COUNT);\n      float rangeStep = domainRange / rangeCount;\n      float idx = floor((value - domain.x) / rangeStep);\n      idx = clamp(idx, 0., rangeCount - 1.);\n      int intIdx = int(idx);\n      outColor = colorRange[intIdx];\n    }\n  }\n  outColor = outColor / 255.;\n  return outColor;\n}\n\nvoid main(void) {\n  vSampleCount = instanceCounts.a;\n\n  float weight = instanceCounts.r;\n  float maxWeight = texture2D(maxTexture, vec2(0.5)).r;\n\n  float step = weight / maxWeight;\n  vec4 minMaxColor = mix(minColor, maxColor, step) / 255.;\n\n  vec2 domain = colorDomain;\n  float domainMaxValid = float(colorDomain.y != 0.);\n  domain.y = mix(maxWeight, colorDomain.y, domainMaxValid);\n  vec4 rangeColor = quantizeScale(domain, colorRange, weight);\n\n  float rangeMinMax = float(shouldUseMinMax);\n  vec4 color = mix(rangeColor, minMaxColor, rangeMinMax);\n  vColor = vec4(color.rgb, color.a * opacity);\n\n  // Set color to be rendered to picking fbo (also used to check for selection highlight).\n  picking_setPickingColor(instancePickingColors);\n\n  gl_Position = vec4(instancePositions + positions * cellScale, 1.);\n}\n",fs:"#define SHADER_NAME screen-grid-layer-fragment-shader\n\nprecision highp float;\n\nvarying vec4 vColor;\nvarying float vSampleCount;\n\nvoid main(void) {\n  if (vSampleCount <= 0.0) {\n    discard;\n  }\n  gl_FragColor = vColor;\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",modules:[B.Z]}}initializeState(){const{gl:t}=this.context;this.getAttributeManager().addInstanced({instancePositions:{size:3,update:this.calculateInstancePositions},instanceCounts:{size:4,noAlloc:!0}}),this.setState({model:this._getModel(t)})}shouldUpdateState({changeFlags:t}){return t.somethingChanged}updateState(t){super.updateState(t);const{oldProps:e,props:i,changeFlags:n}=t,o=this.getAttributeManager();i.numInstances!==e.numInstances?o.invalidateAll():e.cellSizePixels!==i.cellSizePixels&&o.invalidate("instancePositions"),this._updateUniforms(e,i,n)}draw({uniforms:t}){const{parameters:e,maxTexture:i}=this.props,n=this.props.minColor||H,o=this.props.maxColor||q,s=this.props.colorDomain||[1,0],{model:r}=this.state;r.setUniforms(t).setUniforms({minColor:n,maxColor:o,maxTexture:i,colorDomain:s}).draw({parameters:{depthTest:!1,depthMask:!1,...e}})}calculateInstancePositions(t,{numInstances:e}){const{width:i,height:n}=this.context.viewport,{cellSizePixels:o}=this.props,s=Math.ceil(i/o),{value:r,size:a}=t;for(let t=0;t<e;t++){const e=t%s,l=Math.floor(t/s);r[t*a+0]=e*o/i*2-1,r[t*a+1]=1-l*o/n*2,r[t*a+2]=0}}_getModel(t){return new c.Z(t,{...this.getShaders(),id:this.props.id,geometry:new U.Z({drawMode:6,attributes:{positions:new Float32Array([0,0,0,1,0,0,1,1,0,0,1,0])}}),isInstanced:!0})}_shouldUseMinMax(){const{minColor:t,maxColor:e,colorDomain:i,colorRange:n}=this.props;return t||e?(o.Z.deprecated("ScreenGridLayer props: minColor and maxColor","colorRange, colorDomain")(),!0):!i&&!n}_updateUniforms(t,e,i){const{model:n}=this.state;if(X.some((i=>t[i]!==e[i]))&&n.setUniforms({shouldUseMinMax:this._shouldUseMinMax()}),t.colorRange!==e.colorRange&&n.setUniforms({colorRange:G(e.colorRange)}),t.cellMarginPixels!==e.cellMarginPixels||t.cellSizePixels!==e.cellSizePixels||i.viewportChanged){const{width:t,height:e}=this.context.viewport,{cellSizePixels:i,cellMarginPixels:o}=this.props,s=i>o?o:0,r=new Float32Array([(i-s)/t*2,-(i-s)/e*2,1]);n.setUniforms({cellScale:r})}}}(0,n.Z)(Y,"layerName","ScreenGridCellLayer"),(0,n.Z)(Y,"defaultProps",K);var J=i(3295),Q=i(3478);function $(t,e,i){const n=i;return n.domain=()=>t,n.range=()=>e,n}function tt(t,e){return $(t,e,(i=>function(t,e,i){const n=t[1]-t[0];if(n<=0)return o.Z.warn("quantizeScale: invalid domain, returning range[0]")(),e[0];const s=n/e.length,r=Math.floor((i-t[0])/s),a=Math.max(Math.min(r,e.length-1),0);return e[a]}(t,e,i)))}function et(t,e){return $(t,e,(i=>function(t,e,i){return(i-t[0])/(t[1]-t[0])*(e[1]-e[0])+e[0]}(t,e,i)))}function it(t,e){const i=t.sort(nt);let n=0;const o=Math.max(1,e.length),s=new Array(o-1);for(;++n<o;)s[n-1]=ot(i,n/o);const r=t=>function(t,e,i){return e[function(t,e){let i=0,n=t.length;for(;i<n;){const o=i+n>>>1;nt(t[o],e)>0?n=o:i=o+1}return i}(t,i)]}(s,e,t);return r.thresholds=()=>s,$(t,e,r)}function nt(t,e){return t-e}function ot(t,e){const i=t.length;if(e<=0||i<2)return t[0];if(e>=1)return t[i-1];const n=(i-1)*e,o=Math.floor(n),s=t[o];return s+(t[o+1]-s)*(n-o)}function st(t,e){const i=new Map,n=[];for(const e of t){const t="".concat(e);i.has(t)||i.set(t,n.push(e))}return $(t,e,(t=>function(t,e,i,n){const o="".concat(n);let s=e.get(o);return void 0===s&&(s=t.push(n),e.set(o,s)),i[(s-1)%i.length]}(n,i,e,t)))}function rt(t){return null!=t}function at(t,e){return("function"==typeof e?t.map(e):t).filter(rt)}function lt(t,e){return at(t,e)}function ct(t,e){return function(t){const e=[];return t.forEach((t=>{!e.includes(t)&&rt(t)&&e.push(t)})),e}(at(t,e))}const dt=t=>t.length,ut=t=>t.points,ht=t=>t.index,pt=(t,e)=>t<e?-1:t>e?1:t>=e?0:NaN,gt={getValue:dt,getPoints:ut,getIndex:ht,filterData:null};class ft{constructor(t=[],e=gt){(0,n.Z)(this,"maxCount",void 0),(0,n.Z)(this,"maxValue",void 0),(0,n.Z)(this,"minValue",void 0),(0,n.Z)(this,"totalCount",void 0),(0,n.Z)(this,"aggregatedBins",void 0),(0,n.Z)(this,"sortedBins",void 0),(0,n.Z)(this,"binMap",void 0),this.aggregatedBins=this.getAggregatedBins(t,e),this._updateMinMaxValues(),this.binMap=this.getBinMap()}getAggregatedBins(t,e){const{getValue:i=dt,getPoints:n=ut,getIndex:o=ht,filterData:s}=e,r="function"==typeof s,a=t.length,l=[];let c=0;for(let e=0;e<a;e++){const a=t[e],d=n(a),u=o(a),h=r?d.filter(s):d;a.filteredPoints=r?h:null;const p=h.length?i(h):null;null!=p&&(l[c]={i:Number.isFinite(u)?u:e,value:p,counts:h.length},c++)}return l}_percentileToIndex(t){const e=this.sortedBins.length;if(e<2)return[0,0];const[i,n]=t.map((t=>{return e=t,i=0,n=100,Math.max(i,Math.min(n,e));var e,i,n}));return[Math.ceil(i/100*(e-1)),Math.floor(n/100*(e-1))]}getBinMap(){const t={};for(const e of this.aggregatedBins)t[e.i]=e;return t}_updateMinMaxValues(){let t=0,e=0,i=3402823466e29,n=0;for(const o of this.aggregatedBins)t=t>o.counts?t:o.counts,e=e>o.value?e:o.value,i=i<o.value?i:o.value,n+=o.counts;this.maxCount=t,this.maxValue=e,this.minValue=i,this.totalCount=n}getValueRange(t){if(this.sortedBins||(this.sortedBins=this.aggregatedBins.sort(((t,e)=>pt(t.value,e.value)))),!this.sortedBins.length)return[];let e=0,i=this.sortedBins.length-1;if(Array.isArray(t)){const n=this._percentileToIndex(t);e=n[0],i=n[1]}return[this.sortedBins[e].value,this.sortedBins[i].value]}getValueDomainByScale(t,[e=0,i=100]=[]){if(this.sortedBins||(this.sortedBins=this.aggregatedBins.sort(((t,e)=>pt(t.value,e.value)))),!this.sortedBins.length)return[];const n=this._percentileToIndex([e,i]);return this._getScaleDomain(t,n)}_getScaleDomain(t,[e,i]){const n=this.sortedBins;switch(t){case"quantize":case"linear":default:return[n[e].value,n[i].value];case"quantile":return lt(n.slice(e,i+1),(t=>t.value));case"ordinal":return ct(n,(t=>t.value))}}}var mt=i(8550),vt=i(4088);const yt=6378e3;function _t(t){return Number.isFinite(t)?t:0}function xt(t,e){const i=t.positions.value;let n,o,s=1/0,r=-1/0,a=1/0,l=-1/0;for(let t=0;t<e;t++)o=i[3*t],n=i[3*t+1],s=n<s?n:s,r=n>r?n:r,a=o<a?o:a,l=o>l?o:l;return{xMin:_t(a),xMax:_t(l),yMin:_t(s),yMax:_t(r)}}function wt(t,e){const i=t<0?-1:1;let n=i<0?Math.abs(t)+e:Math.abs(t);return n=Math.floor(n/e)*e,n*i}function Pt(t,e,i=!0){if(!i)return{xOffset:e,yOffset:e};const{yMin:n,yMax:o}=t;return function(t,e){const i=(r=t,r/yt*(180/Math.PI)),n=(o=e,s=t,s/yt*(180/Math.PI)/Math.cos(o*Math.PI/180));var o,s;var r;return{yOffset:i,xOffset:n}}(e,(n+o)/2)}function bt(t,e,i,n){const s=Pt(t,e,n!==vt.Df.CARTESIAN),r=function(t,e,i,n){const{width:s,height:r}=n,a=i===vt.Df.CARTESIAN?[-s/2,-r/2]:[-180,-90];o.Z.assert(i===vt.Df.CARTESIAN||i===vt.Df.LNGLAT||i===vt.Df.DEFAULT);const{xMin:l,yMin:c}=t;return[-1*(wt(l-a[0],e.xOffset)+a[0]),-1*(wt(c-a[1],e.yOffset)+a[1])]}(t,s,n,i),{xMin:a,yMin:l,xMax:c,yMax:d}=t,u=c-a+s.xOffset,h=d-l+s.yOffset;return{gridOffset:s,translation:r,width:u,height:h,numCol:Math.ceil(u/s.xOffset),numRow:Math.ceil(h/s.yOffset)}}function St(t,e){const i=function(t,e){const{data:i=[],cellSize:n}=t,{attributes:o,viewport:s,projectPoints:r,numInstances:a}=e,l=o.positions.value,{size:c}=o.positions.getAccessor(),d=e.boundingBox||function(t,e){const i=t.value,{size:n}=t.getAccessor();let o,s,r=1/0,a=-1/0,l=1/0,c=-1/0;for(let t=0;t<e;t++)s=i[t*n],o=i[t*n+1],Number.isFinite(s)&&Number.isFinite(o)&&(r=o<r?o:r,a=o>a?o:a,l=s<l?s:l,c=s>c?s:c);return{xMin:l,xMax:c,yMin:r,yMax:a}}(o.positions,a),u=e.posOffset||[180,90],h=e.gridOffset||Pt(d,n);if(h.xOffset<=0||h.yOffset<=0)return{gridHash:{},gridOffset:h};const{width:p,height:g}=s,f=Math.ceil(p/h.xOffset),m=Math.ceil(g/h.yOffset),v={},{iterable:y,objectInfo:_}=(0,mt.jB)(i),x=new Array(3);for(const t of y){_.index++,x[0]=l[_.index*c],x[1]=l[_.index*c+1],x[2]=c>=3?l[_.index*c+2]:0;const[e,i]=r?s.project(x):x;if(Number.isFinite(e)&&Number.isFinite(i)){const n=Math.floor((i+u[1])/h.yOffset),o=Math.floor((e+u[0])/h.xOffset);if(!r||o>=0&&o<f&&n>=0&&n<m){const e="".concat(n,"-").concat(o);v[e]=v[e]||{count:0,points:[],lonIdx:o,latIdx:n},v[e].count+=1,v[e].points.push({source:t,index:_.index})}}}return{gridHash:v,gridOffset:h,offsets:[-1*u[0],-1*u[1]]}}(t,e),n=function({gridHash:t,gridOffset:e,offsets:i}){const n=new Array(Object.keys(t).length);let o=0;for(const s in t){const r=s.split("-"),a=parseInt(r[0],10),l=parseInt(r[1],10),c=o++;n[c]={index:c,position:[i[0]+e.xOffset*l,i[1]+e.yOffset*a],...t[s]}}return n}(i);return{gridHash:i.gridHash,gridOffset:i.gridOffset,data:n}}class Ct extends J.Z{constructor(...t){super(...t),(0,n.Z)(this,"state",void 0)}initializeAggregationLayer({dimensions:t}){const{gl:e}=this.context;super.initializeAggregationLayer(t),this.setState({layerData:{},gpuGridAggregator:new N(e,{id:"".concat(this.id,"-gpu-aggregator")}),cpuGridAggregator:St})}updateState(t){super.updateState(t),this.updateAggregationState(t);const{aggregationDataDirty:e,aggregationWeightsDirty:i,gpuAggregation:n}=this.state;if(this.getNumInstances()<=0)return;let o=!1;(e||n&&i)&&(this._updateAggregation(t),o=!0),n||!e&&!i||(this._updateWeightBins(),this._uploadAggregationResults(),o=!0),this.setState({aggregationDirty:o})}finalizeState(t){var e;const{count:i}=this.state.weights;i&&i.aggregationBuffer&&i.aggregationBuffer.delete(),null===(e=this.state.gpuGridAggregator)||void 0===e||e.delete(),super.finalizeState(t)}updateShaders(t){this.state.gpuAggregation&&this.state.gpuGridAggregator.updateShaders(t)}updateAggregationState(t){o.Z.assert(!1)}allocateResources(t,e){if(this.state.numRow!==t||this.state.numCol!==e){const i=e*t*4*4,n=this.context.gl,{weights:o}=this.state;for(const t in o){const e=o[t];e.aggregationBuffer&&e.aggregationBuffer.delete(),e.aggregationBuffer=new Q.Z(n,{byteLength:i,accessor:{size:4,type:5126,divisor:1}})}}}updateResults({aggregationData:t,maxMinData:e,maxData:i,minData:n}){const{count:o}=this.state.weights;o&&(o.aggregationData=t,o.maxMinData=e,o.maxData=i,o.minData=n)}_updateAggregation(t){const{cpuGridAggregator:e,gpuGridAggregator:i,gridOffset:n,posOffset:o,translation:s=[0,0],scaling:r=[0,0,0],boundingBox:a,projectPoints:l,gpuAggregation:c,numCol:d,numRow:u}=this.state,{props:h}=t,{viewport:p}=this.context,g=this.getAttributes(),f=this.getNumInstances();if(c){const{weights:t}=this.state;i.run({weights:t,cellSize:[n.xOffset,n.yOffset],numCol:d,numRow:u,translation:s,scaling:r,vertexCount:f,projectPoints:l,attributes:g,moduleSettings:this.getModuleSettings()})}else{const t=e(h,{gridOffset:n,projectPoints:l,attributes:g,viewport:p,posOffset:o,boundingBox:a});this.setState({layerData:t})}}_updateWeightBins(){const{getValue:t}=this.state,e=new ft(this.state.layerData.data||[],{getValue:t});this.setState({sortedBins:e})}_uploadAggregationResults(){const{numCol:t,numRow:e}=this.state,{data:i}=this.state.layerData,{aggregatedBins:n,minValue:o,maxValue:s,totalCount:r}=this.state.sortedBins,a=new Float32Array(t*e*4).fill(0);for(const e of n){const{lonIdx:n,latIdx:o}=i[e.i],{value:s,counts:r}=e,l=4*(n+o*t);a[l]=s,a[l+4-1]=r}const l=new Float32Array([s,0,0,o]),c=new Float32Array([s,0,0,r]),d=new Float32Array([o,0,0,r]);this.updateResults({aggregationData:a,maxMinData:l,maxData:c,minData:d})}}(0,n.Z)(Ct,"layerName","GridAggregationLayer");const Mt={...Y.defaultProps,getPosition:{type:"accessor",value:t=>t.position},getWeight:{type:"accessor",value:1},gpuAggregation:!0,aggregation:"SUM"},Tt="positions",Lt={data:{props:["cellSizePixels"]},weights:{props:["aggregation"],accessors:["getWeight"]}};class At extends Ct{constructor(...t){super(...t),(0,n.Z)(this,"state",void 0)}initializeState(){const{gl:t}=this.context;if(!Y.isSupported(t))return this.setState({supported:!1}),void o.Z.error("ScreenGridLayer: ".concat(this.id," is not supported on this browser"))();super.initializeAggregationLayer({dimensions:Lt,getCellSize:t=>t.cellSizePixels});const e={count:{size:1,operation:g.SUM,needMax:!0,maxTexture:R(t,{id:"".concat(this.id,"-max-texture")})}};this.setState({supported:!0,projectPoints:!0,weights:e,subLayerData:{attributes:{}},maxTexture:e.count.maxTexture,positionAttributeName:"positions",posOffset:[0,0],translation:[1,-1]});this.getAttributeManager().add({[Tt]:{size:3,accessor:"getPosition",type:5130,fp64:this.use64bitPositions()},count:{size:3,accessor:"getWeight"}})}shouldUpdateState({changeFlags:t}){return this.state.supported&&t.somethingChanged}updateState(t){super.updateState(t)}renderLayers(){if(!this.state.supported)return[];const{maxTexture:t,numRow:e,numCol:i,weights:n}=this.state,{updateTriggers:o}=this.props,{aggregationBuffer:s}=n.count;return new(this.getSubLayerClass("cells",Y))(this.props,this.getSubLayerProps({id:"cell-layer",updateTriggers:o}),{data:{attributes:{instanceCounts:s}},maxTexture:t,numInstances:e*i})}finalizeState(t){super.finalizeState(t);const{aggregationBuffer:e,maxBuffer:i,maxTexture:n}=this.state;null==e||e.delete(),null==i||i.delete(),null==n||n.delete()}getPickingInfo({info:t}){const{index:e}=t;if(e>=0){const{gpuGridAggregator:i,gpuAggregation:n,weights:o}=this.state,s=n?i.getData("count"):o.count;t.object=N.getAggregationData({pixelIndex:e,...s})}return t}updateResults({aggregationData:t,maxData:e}){const{count:i}=this.state.weights;i.aggregationData=t,i.aggregationBuffer.setData({data:t}),i.maxData=e,i.maxTexture.setImageData({data:e})}updateAggregationState(t){const e=t.props.cellSizePixels,i=t.oldProps.cellSizePixels!==e,{viewportChanged:n}=t.changeFlags;let s=t.props.gpuAggregation;this.state.gpuAggregation!==t.props.gpuAggregation&&s&&!N.isSupported(this.context.gl)&&(o.Z.warn("GPU Grid Aggregation not supported, falling back to CPU")(),s=!1);const r=s!==this.state.gpuAggregation;this.setState({gpuAggregation:s});const a=this.isAttributeChanged(Tt),{dimensions:l}=this.state,{data:c,weights:d}=l,u=a||r||n||this.isAggregationDirty(t,{compareAll:s,dimension:c}),h=this.isAggregationDirty(t,{dimension:d});this.setState({aggregationDataDirty:u,aggregationWeightsDirty:h});const{viewport:p}=this.context;if(n||i){const{width:t,height:i}=p,n=Math.ceil(t/e),o=Math.ceil(i/e);this.allocateResources(o,n),this.setState({scaling:[t/2,-i/2,1],gridOffset:{xOffset:e,yOffset:e},width:t,height:i,numCol:n,numRow:o})}h&&this._updateAccessors(t),(u||h)&&this._resetResults()}_updateAccessors(t){const{getWeight:e,aggregation:i,data:n}=t.props,{count:o}=this.state.weights;o&&(o.getWeight=e,o.operation=g[i]),this.setState({getValue:y(i,e,{data:n})})}_resetResults(){const{count:t}=this.state.weights;t&&(t.aggregationData=null)}}(0,n.Z)(At,"layerName","ScreenGridLayer"),(0,n.Z)(At,"defaultProps",Mt);var Zt=i(3274);function Et(){}const zt=["getBins","getDomain","getScaleFunc"],It=[{key:"fillColor",accessor:"getFillColor",pickingInfo:"colorValue",getBins:{triggers:{value:{prop:"getColorValue",updateTrigger:"getColorValue"},weight:{prop:"getColorWeight",updateTrigger:"getColorWeight"},aggregation:{prop:"colorAggregation"},filterData:{prop:"_filterData",updateTrigger:"_filterData"}}},getDomain:{triggers:{lowerPercentile:{prop:"lowerPercentile"},upperPercentile:{prop:"upperPercentile"},scaleType:{prop:"colorScaleType"}}},getScaleFunc:{triggers:{domain:{prop:"colorDomain"},range:{prop:"colorRange"}},onSet:{props:"onSetColorDomain"}},nullValue:[0,0,0,0]},{key:"elevation",accessor:"getElevation",pickingInfo:"elevationValue",getBins:{triggers:{value:{prop:"getElevationValue",updateTrigger:"getElevationValue"},weight:{prop:"getElevationWeight",updateTrigger:"getElevationWeight"},aggregation:{prop:"elevationAggregation"},filterData:{prop:"_filterData",updateTrigger:"_filterData"}}},getDomain:{triggers:{lowerPercentile:{prop:"elevationLowerPercentile"},upperPercentile:{prop:"elevationUpperPercentile"},scaleType:{prop:"elevationScaleType"}}},getScaleFunc:{triggers:{domain:{prop:"elevationDomain"},range:{prop:"elevationRange"}},onSet:{props:"onSetElevationDomain"}},nullValue:-1}],Ot=t=>t.cellSize;class Rt{constructor(t){this.state={layerData:{},dimensions:{}},this.changeFlags={},this.dimensionUpdaters={},this._getCellSize=t.getCellSize||Ot,this._getAggregator=t.getAggregator,this._addDimension(t.dimensions||It)}static defaultDimensions(){return It}updateState(t,e){const{oldProps:i,props:n,changeFlags:o}=t;this.updateGetValueFuncs(i,n,o);const s=this.needsReProjectPoints(i,n,o);let r=!1;if(o.dataChanged||s)this.getAggregatedData(n,e),r=!0;else{(this.getDimensionChanges(i,n,o)||[]).forEach((t=>"function"==typeof t&&t())),r=!0}return this.setState({aggregationDirty:r}),this.state}setState(t){this.state={...this.state,...t}}setDimensionState(t,e){this.setState({dimensions:{...this.state.dimensions,[t]:{...this.state.dimensions[t],...e}}})}normalizeResult(t={}){return t.hexagons?{data:t.hexagons,...t}:t.layerData?{data:t.layerData,...t}:t}getAggregatedData(t,e){const i=this._getAggregator(t)(t,e);this.setState({layerData:this.normalizeResult(i)}),this.changeFlags={layerData:!0},this.getSortedBins(t)}updateGetValueFuncs(t,e,i){for(const n in this.dimensionUpdaters){const{value:o,weight:s,aggregation:r}=this.dimensionUpdaters[n].getBins.triggers;let a=e[o.prop];this.needUpdateDimensionStep(this.dimensionUpdaters[n].getBins,t,e,i)&&(a=a?_(a,{data:e.data}):y(e[r.prop],e[s.prop],{data:e.data})),a&&this.setDimensionState(n,{getValue:a})}}needsReProjectPoints(t,e,i){return this._getCellSize(t)!==this._getCellSize(e)||this._getAggregator(t)!==this._getAggregator(e)||i.updateTriggersChanged&&(i.updateTriggersChanged.all||i.updateTriggersChanged.getPosition)}addDimension(t){this._addDimension(t)}_addDimension(t=[]){t.forEach((t=>{const{key:e}=t;this.dimensionUpdaters[e]=this.getDimensionUpdaters(t),this.state.dimensions[e]={getValue:null,domain:null,sortedBins:null,scaleFunc:Et}}))}getDimensionUpdaters({key:t,accessor:e,pickingInfo:i,getBins:n,getDomain:o,getScaleFunc:s,nullValue:r}){return{key:t,accessor:e,pickingInfo:i,getBins:{updater:this.getDimensionSortedBins,...n},getDomain:{updater:this.getDimensionValueDomain,...o},getScaleFunc:{updater:this.getDimensionScale,...s},attributeAccessor:this.getSubLayerDimensionAttribute(t,r)}}needUpdateDimensionStep(t,e,i,n){return Object.values(t.triggers).some((t=>t.updateTrigger?n.dataChanged||n.updateTriggersChanged&&(n.updateTriggersChanged.all||n.updateTriggersChanged[t.updateTrigger]):e[t.prop]!==i[t.prop]))}getDimensionChanges(t,e,i){const n=[];for(const o in this.dimensionUpdaters){const s=zt.find((n=>this.needUpdateDimensionStep(this.dimensionUpdaters[o][n],t,e,i)));s&&n.push(this.dimensionUpdaters[o][s].updater.bind(this,e,this.dimensionUpdaters[o]))}return n.length?n:null}getUpdateTriggers(t){const e=t.updateTriggers||{},i={};for(const n in this.dimensionUpdaters){const{accessor:o}=this.dimensionUpdaters[n];i[o]={},zt.forEach((s=>{Object.values(this.dimensionUpdaters[n][s].triggers).forEach((({prop:n,updateTrigger:s})=>{if(s){const t=e[s];"object"!=typeof t||Array.isArray(t)?void 0!==t&&(i[o][n]=t):Object.assign(i[o],t)}else i[o][n]=t[n]}))}))}return i}getSortedBins(t){for(const e in this.dimensionUpdaters)this.getDimensionSortedBins(t,this.dimensionUpdaters[e])}getDimensionSortedBins(t,e){const{key:i}=e,{getValue:n}=this.state.dimensions[i],o=new ft(this.state.layerData.data||[],{getValue:n,filterData:t._filterData});this.setDimensionState(i,{sortedBins:o}),this.getDimensionValueDomain(t,e)}getDimensionValueDomain(t,e){const{getDomain:i,key:n}=e,{triggers:{lowerPercentile:o,upperPercentile:s,scaleType:r}}=i,a=this.state.dimensions[n].sortedBins.getValueDomainByScale(t[r.prop],[t[o.prop],t[s.prop]]);this.setDimensionState(n,{valueDomain:a}),this.getDimensionScale(t,e)}getDimensionScale(t,e){const{key:i,getScaleFunc:n,getDomain:o}=e,{domain:s,range:r}=n.triggers,{scaleType:a}=o.triggers,{onSet:l}=n,c=t[r.prop],d=t[s.prop]||this.state.dimensions[i].valueDomain,u=function(t){switch(t){case"quantize":default:return tt;case"linear":return et;case"quantile":return it;case"ordinal":return st}}(a&&t[a.prop]),h=u(d,c);"object"==typeof l&&"function"==typeof t[l.props]&&t[l.props](h.domain()),this.setDimensionState(i,{scaleFunc:h})}getSubLayerDimensionAttribute(t,e){return i=>{const{sortedBins:n,scaleFunc:o}=this.state.dimensions[t],s=n.binMap[i.index];if(s&&0===s.counts)return e;const r=s&&s.value,a=o.domain();return r>=a[0]&&r<=a[a.length-1]?o(r):e}}getSubLayerAccessors(t){const e={};for(const i in this.dimensionUpdaters){const{accessor:n}=this.dimensionUpdaters[i];e[n]=this.getSubLayerDimensionAttribute(t,i)}return e}getPickingInfo({info:t}){let e=null;if(t.picked&&t.index>-1){const i=this.state.layerData.data[t.index],n={};for(const t in this.dimensionUpdaters){const{pickingInfo:e}=this.dimensionUpdaters[t],{sortedBins:o}=this.state.dimensions[t],s=o.binMap[i.index]&&o.binMap[i.index].value;n[e]=s}e=Object.assign(n,i,{points:i.filteredPoints||i.points})}return t.picked=Boolean(e),t.object=e,t}getAccessor(t){return this.dimensionUpdaters.hasOwnProperty(t)?this.dimensionUpdaters[t].attributeAccessor:Et}}function Dt(){}const Ft={colorDomain:null,colorRange:W,getColorValue:{type:"accessor",value:null},getColorWeight:{type:"accessor",value:1},colorAggregation:"SUM",lowerPercentile:{type:"number",min:0,max:100,value:0},upperPercentile:{type:"number",min:0,max:100,value:100},colorScaleType:"quantize",onSetColorDomain:Dt,elevationDomain:null,elevationRange:[0,1e3],getElevationValue:{type:"accessor",value:null},getElevationWeight:{type:"accessor",value:1},elevationAggregation:"SUM",elevationLowerPercentile:{type:"number",min:0,max:100,value:0},elevationUpperPercentile:{type:"number",min:0,max:100,value:100},elevationScale:{type:"number",min:0,value:1},elevationScaleType:"linear",onSetElevationDomain:Dt,gridAggregator:St,cellSize:{type:"number",min:0,max:1e3,value:1e3},coverage:{type:"number",min:0,max:1,value:1},getPosition:{type:"accessor",value:t=>t.position},extruded:!1,material:!0,_filterData:{type:"function",value:null,optional:!0}};class kt extends J.Z{initializeState(){const t=new Rt({getAggregator:t=>t.gridAggregator,getCellSize:t=>t.cellSize});this.state={cpuAggregator:t,aggregatorState:t.state};this.getAttributeManager().add({positions:{size:3,type:5130,accessor:"getPosition"}})}updateState(t){super.updateState(t),this.setState({aggregatorState:this.state.cpuAggregator.updateState(t,{viewport:this.context.viewport,attributes:this.getAttributes(),numInstances:this.getNumInstances()})})}getPickingInfo({info:t}){return this.state.cpuAggregator.getPickingInfo({info:t})}_onGetSublayerColor(t){return this.state.cpuAggregator.getAccessor("fillColor")(t)}_onGetSublayerElevation(t){return this.state.cpuAggregator.getAccessor("elevation")(t)}_getSublayerUpdateTriggers(){return this.state.cpuAggregator.getUpdateTriggers(this.props)}renderLayers(){const{elevationScale:t,extruded:e,cellSize:i,coverage:n,material:o,transitions:s}=this.props,{cpuAggregator:r}=this.state,a=this.getSubLayerClass("grid-cell",Zt.Z),l=this._getSublayerUpdateTriggers();return new a({cellSize:i,coverage:n,material:o,elevationScale:t,extruded:e,getFillColor:this._onGetSublayerColor.bind(this),getElevation:this._onGetSublayerElevation.bind(this),transitions:s&&{getFillColor:s.getColorValue||s.getColorWeight,getElevation:s.getElevationValue||s.getElevationWeight}},this.getSubLayerProps({id:"grid-cell",updateTriggers:l}),{data:r.state.layerData.data})}}(0,n.Z)(kt,"layerName","CPUGridLayer"),(0,n.Z)(kt,"defaultProps",Ft);var jt=i(5103),Nt=i(8220);function Ut(){}const Vt={colorDomain:null,colorRange:W,getColorValue:{type:"accessor",value:null},getColorWeight:{type:"accessor",value:1},colorAggregation:"SUM",lowerPercentile:{type:"number",value:0,min:0,max:100},upperPercentile:{type:"number",value:100,min:0,max:100},colorScaleType:"quantize",onSetColorDomain:Ut,elevationDomain:null,elevationRange:[0,1e3],getElevationValue:{type:"accessor",value:null},getElevationWeight:{type:"accessor",value:1},elevationAggregation:"SUM",elevationLowerPercentile:{type:"number",value:0,min:0,max:100},elevationUpperPercentile:{type:"number",value:100,min:0,max:100},elevationScale:{type:"number",min:0,value:1},elevationScaleType:"linear",onSetElevationDomain:Ut,radius:{type:"number",value:1e3,min:1},coverage:{type:"number",min:0,max:1,value:1},extruded:!1,hexagonAggregator:function(t,e){const{data:i,radius:n}=t,{viewport:s,attributes:r}=e,a=i.length?function(t,e){const{attributes:i}=e,n=i.positions.value,{size:o}=i.positions.getAccessor();let s,r=1/0,a=1/0,l=-1/0,c=-1/0;for(s=0;s<o*t.length;s+=o){const t=n[s],e=n[s+1];Number.isFinite(t)&&Number.isFinite(e)&&(r=Math.min(t,r),l=Math.max(t,l),a=Math.min(e,a),c=Math.max(e,c))}return[r,a,l,c].every(Number.isFinite)?[(r+l)/2,(a+c)/2]:null}(i,e):null,l=function(t,e,i){const{unitsPerMeter:n}=e.getDistanceScales(i);return t*n[0]}(n,s,a),c=[],{iterable:d,objectInfo:u}=(0,mt.jB)(i),h=r.positions.value,{size:p}=r.positions.getAccessor();for(const t of d){u.index++;const e=u.index*p,i=[h[e],h[e+1]];Number.isFinite(i[0])&&Number.isFinite(i[1])?c.push({screenCoord:s.projectFlat(i),source:t,index:u.index}):o.Z.warn("HexagonLayer: invalid position")()}return{hexagons:(0,Nt.g)().radius(l).x((t=>t.screenCoord[0])).y((t=>t.screenCoord[1]))(c).map(((t,e)=>({position:s.unprojectFlat([t.x,t.y]),points:t,index:e}))),radiusCommon:l}},getPosition:{type:"accessor",value:t=>t.position},material:!0,_filterData:{type:"function",value:null,optional:!0}};class Bt extends J.Z{constructor(...t){super(...t),(0,n.Z)(this,"state",void 0)}initializeState(){const t=new Rt({getAggregator:t=>t.hexagonAggregator,getCellSize:t=>t.radius});this.state={cpuAggregator:t,aggregatorState:t.state,vertices:null};this.getAttributeManager().add({positions:{size:3,type:5130,accessor:"getPosition"}})}updateState(t){if(super.updateState(t),t.changeFlags.propsOrDataChanged){const e=this.state.cpuAggregator.updateState(t,{viewport:this.context.viewport,attributes:this.getAttributes()});if(this.state.aggregatorState.layerData!==e.layerData){const{hexagonVertices:t}=e.layerData||{};this.setState({vertices:t&&this.convertLatLngToMeterOffset(t)})}this.setState({aggregatorState:e})}}convertLatLngToMeterOffset(t){const{viewport:e}=this.context;if(Array.isArray(t)&&6===t.length){const i=t[0],n=t[3],o=[(i[0]+n[0])/2,(i[1]+n[1])/2],s=e.projectFlat(o),{metersPerUnit:r}=e.getDistanceScales(o);return t.map((t=>{const i=e.projectFlat(t);return[(i[0]-s[0])*r[0],(i[1]-s[1])*r[1]]}))}return o.Z.error("HexagonLayer: hexagonVertices needs to be an array of 6 points")(),null}getPickingInfo({info:t}){return this.state.cpuAggregator.getPickingInfo({info:t})}_onGetSublayerColor(t){return this.state.cpuAggregator.getAccessor("fillColor")(t)}_onGetSublayerElevation(t){return this.state.cpuAggregator.getAccessor("elevation")(t)}_getSublayerUpdateTriggers(){return this.state.cpuAggregator.getUpdateTriggers(this.props)}renderLayers(){const{elevationScale:t,extruded:e,coverage:i,material:n,transitions:o}=this.props,{aggregatorState:s,vertices:r}=this.state,a=this.getSubLayerClass("hexagon-cell",jt.Z),l=this._getSublayerUpdateTriggers();return new a({...r?{vertices:r,radius:1}:{radius:s.layerData.radiusCommon||1,radiusUnits:"common",angle:90},diskResolution:6,elevationScale:t,extruded:e,coverage:i,material:n,getFillColor:this._onGetSublayerColor.bind(this),getElevation:this._onGetSublayerElevation.bind(this),transitions:o&&{getFillColor:o.getColorValue||o.getColorWeight,getElevation:o.getElevationValue||o.getElevationWeight}},this.getSubLayerProps({id:"hexagon-cell",updateTriggers:l}),{data:s.layerData.data})}}(0,n.Z)(Bt,"layerName","HexagonLayer"),(0,n.Z)(Bt,"defaultProps",Vt);var Wt=i(3326),Gt=i(1435);const Ht=.5,qt=1/6,Xt={N:[0,Ht],E:[Ht,0],S:[0,-.5],W:[-.5,0],NE:[Ht,Ht],NW:[-.5,Ht],SE:[Ht,-.5],SW:[-.5,-.5]},Kt=[Xt.W,Xt.SW,Xt.S],Yt=[Xt.S,Xt.SE,Xt.E],Jt=[Xt.E,Xt.NE,Xt.N],Qt=[Xt.NW,Xt.W,Xt.N],$t=[[-.5,qt],[-.5,-qt],[-qt,-.5],[qt,-.5]],te=[[-qt,-.5],[qt,-.5],[Ht,-qt],[Ht,qt]],ee=[[Ht,-qt],[Ht,qt],[qt,Ht],[-qt,Ht]],ie=[[-.5,qt],[-.5,-qt],[qt,Ht],[-qt,Ht]],ne=[Xt.W,Xt.SW,Xt.SE,Xt.E],oe=[Xt.S,Xt.SE,Xt.NE,Xt.N],se=[Xt.NW,Xt.W,Xt.E,Xt.NE],re=[Xt.NW,Xt.SW,Xt.S,Xt.N],ae=[[-.5,qt],[-.5,-qt],[Ht,-qt],[Ht,qt]],le=[[-qt,-.5],[qt,-.5],[qt,Ht],[-qt,Ht]],ce=[Xt.NW,Xt.SW,Xt.SE,Xt.NE],de=[Xt.NW,Xt.SW,Xt.SE,Xt.E,Xt.N],ue=[Xt.W,Xt.SW,Xt.SE,Xt.NE,Xt.N],he=[Xt.NW,Xt.W,Xt.S,Xt.SE,Xt.NE],pe=[Xt.NW,Xt.SW,Xt.S,Xt.E,Xt.NE],ge=[Xt.NW,Xt.W,[Ht,-qt],[Ht,qt],Xt.N],fe=[[-qt,-.5],[qt,-.5],Xt.E,Xt.NE,Xt.N],me=[[-.5,qt],[-.5,-qt],Xt.S,Xt.SE,Xt.E],ve=[Xt.W,Xt.SW,Xt.S,[qt,Ht],[-qt,Ht]],ye=[Xt.NW,Xt.W,[-qt,-.5],[qt,-.5],Xt.N],_e=[[-.5,qt],[-.5,-qt],Xt.E,Xt.NE,Xt.N],xe=[Xt.S,Xt.SE,Xt.E,[qt,Ht],[-qt,Ht]],we=[Xt.W,Xt.SW,Xt.S,[Ht,-qt],[Ht,qt]],Pe=[Xt.W,Xt.SW,Xt.SE,Xt.E,[qt,Ht],[-qt,Ht]],be=[[-.5,qt],[-.5,-qt],Xt.S,Xt.SE,Xt.NE,Xt.N],Se=[Xt.NW,Xt.W,[-qt,-.5],[qt,-.5],Xt.E,Xt.NE],Ce=[Xt.NW,Xt.SW,Xt.S,[Ht,-qt],[Ht,qt],Xt.N],Me=[Xt.W,Xt.SW,Xt.S,Xt.E,Xt.NE,Xt.N],Te=[Xt.NW,Xt.W,Xt.S,Xt.SE,Xt.E,Xt.N],Le=[[-.5,qt],[-.5,-qt],[-qt,-.5],[qt,-.5],Xt.E,Xt.NE,Xt.N],Ae=[Xt.W,Xt.SW,Xt.S,[Ht,-qt],[Ht,qt],[qt,Ht],[-qt,Ht]],Ze=[Xt.NW,Xt.W,[-qt,-.5],[qt,-.5],[Ht,-qt],[Ht,qt],Xt.N],Ee=[[-.5,qt],[-.5,-qt],Xt.S,Xt.SE,Xt.E,[qt,Ht],[-qt,Ht]],ze=[[-.5,qt],[-.5,-qt],[-qt,-.5],[qt,-.5],[Ht,-qt],[Ht,qt],[qt,Ht],[-qt,Ht]],Ie={0:[],1:[[Xt.W,Xt.S]],2:[[Xt.S,Xt.E]],3:[[Xt.W,Xt.E]],4:[[Xt.N,Xt.E]],5:{0:[[Xt.W,Xt.S],[Xt.N,Xt.E]],1:[[Xt.W,Xt.N],[Xt.S,Xt.E]]},6:[[Xt.N,Xt.S]],7:[[Xt.W,Xt.N]],8:[[Xt.W,Xt.N]],9:[[Xt.N,Xt.S]],10:{0:[[Xt.W,Xt.N],[Xt.S,Xt.E]],1:[[Xt.W,Xt.S],[Xt.N,Xt.E]]},11:[[Xt.N,Xt.E]],12:[[Xt.W,Xt.E]],13:[[Xt.S,Xt.E]],14:[[Xt.W,Xt.S]],15:[]};function Oe(t){return parseInt(t,4)}const Re={[Oe("0000")]:[],[Oe("2222")]:[],[Oe("2221")]:[Kt],[Oe("2212")]:[Yt],[Oe("2122")]:[Jt],[Oe("1222")]:[Qt],[Oe("0001")]:[Kt],[Oe("0010")]:[Yt],[Oe("0100")]:[Jt],[Oe("1000")]:[Qt],[Oe("2220")]:[$t],[Oe("2202")]:[te],[Oe("2022")]:[ee],[Oe("0222")]:[ie],[Oe("0002")]:[$t],[Oe("0020")]:[te],[Oe("0200")]:[ee],[Oe("2000")]:[ie],[Oe("0011")]:[ne],[Oe("0110")]:[oe],[Oe("1100")]:[se],[Oe("1001")]:[re],[Oe("2211")]:[ne],[Oe("2112")]:[oe],[Oe("1122")]:[se],[Oe("1221")]:[re],[Oe("2200")]:[ae],[Oe("2002")]:[le],[Oe("0022")]:[ae],[Oe("0220")]:[le],[Oe("1111")]:[ce],[Oe("1211")]:[de],[Oe("2111")]:[ue],[Oe("1112")]:[he],[Oe("1121")]:[pe],[Oe("1011")]:[de],[Oe("0111")]:[ue],[Oe("1110")]:[he],[Oe("1101")]:[pe],[Oe("1200")]:[ge],[Oe("0120")]:[fe],[Oe("0012")]:[me],[Oe("2001")]:[ve],[Oe("1022")]:[ge],[Oe("2102")]:[fe],[Oe("2210")]:[me],[Oe("0221")]:[ve],[Oe("1002")]:[ye],[Oe("2100")]:[_e],[Oe("0210")]:[xe],[Oe("0021")]:[we],[Oe("1220")]:[ye],[Oe("0122")]:[_e],[Oe("2012")]:[xe],[Oe("2201")]:[we],[Oe("0211")]:[Pe],[Oe("2110")]:[be],[Oe("1102")]:[Se],[Oe("1021")]:[Ce],[Oe("2011")]:[Pe],[Oe("0112")]:[be],[Oe("1120")]:[Se],[Oe("1201")]:[Ce],[Oe("2101")]:[Me],[Oe("0121")]:[Me],[Oe("1012")]:[Te],[Oe("1210")]:[Te],[Oe("0101")]:{0:[Kt,Jt],1:[Me],2:[Me]},[Oe("1010")]:{0:[Qt,Yt],1:[Te],2:[Te]},[Oe("2121")]:{0:[Me],1:[Me],2:[Kt,Jt]},[Oe("1212")]:{0:[Te],1:[Te],2:[Qt,Yt]},[Oe("2120")]:{0:[Le],1:[Le],2:[$t,Jt]},[Oe("2021")]:{0:[Ae],1:[Ae],2:[Kt,ee]},[Oe("1202")]:{0:[Ze],1:[Ze],2:[Qt,te]},[Oe("0212")]:{0:[Ee],1:[Ee],2:[Yt,ie]},[Oe("0102")]:{0:[$t,Jt],1:[Le],2:[Le]},[Oe("0201")]:{0:[Kt,ee],1:[Ae],2:[Ae]},[Oe("1020")]:{0:[Qt,te],1:[Ze],2:[Ze]},[Oe("2010")]:{0:[Yt,ie],1:[Ee],2:[Ee]},[Oe("2020")]:{0:[ie,te],1:[ze],2:[$t,ee]},[Oe("0202")]:{0:[ee,$t],1:[ze],2:[ie,te]}},De={ISO_LINES:1,ISO_BANDS:2},Fe={zIndex:0,zOffset:.005};function ke(t,e){return Array.isArray(e)?t<e[0]?0:t<e[1]?1:2:t>=e?1:0}function je(t){const{cellWeights:e,x:i,y:n,width:s,height:r}=t;let a=t.threshold;t.thresholdValue&&(o.Z.deprecated("thresholdValue","threshold")(),a=t.thresholdValue);const l=i<0,c=i>=s-1,d=n<0,u=n>=r-1,h=l||c||d||u,p={},g={};l||u?g.top=0:(p.top=e[(n+1)*s+i],g.top=ke(p.top,a)),c||u?g.topRight=0:(p.topRight=e[(n+1)*s+i+1],g.topRight=ke(p.topRight,a)),c||d?g.right=0:(p.right=e[n*s+i+1],g.right=ke(p.right,a)),l||d?g.current=0:(p.current=e[n*s+i],g.current=ke(p.current,a));const{top:f,topRight:m,right:v,current:y}=g;let _=-1;Number.isFinite(a)&&(_=f<<3|m<<2|v<<1|y),Array.isArray(a)&&(_=f<<6|m<<4|v<<2|y);let x=0;return h||(x=ke((p.top+p.topRight+p.right+p.current)/4,a)),{code:_,meanCode:x}}function Ne(t){const{gridOrigin:e,cellSize:i,x:n,y:o,code:s,meanCode:r,type:a=De.ISO_LINES}=t,l={...Fe,...t.thresholdData};let c=a===De.ISO_BANDS?Re[s]:Ie[s];Array.isArray(c)||(c=c[r]);const d=l.zIndex*l.zOffset,u=(n+1)*i[0],h=(o+1)*i[1],p=e[0]+u,g=e[1]+h;if(a===De.ISO_BANDS){const t=[];return c.forEach((e=>{const n=[];e.forEach((t=>{const e=p+t[0]*i[0],o=g+t[1]*i[1];n.push([e,o,d])})),t.push(n)})),t}const f=[];return c.forEach((t=>{t.forEach((t=>{const e=p+t[0]*i[0],n=g+t[1]*i[1];f.push([e,n,d])}))})),f}const Ue=[255,255,255,255],Ve={cellSize:{type:"number",min:1,max:1e3,value:1e3},getPosition:{type:"accessor",value:t=>t.position},getWeight:{type:"accessor",value:1},gpuAggregation:!0,aggregation:"SUM",contours:[{threshold:1}],zOffset:.005},Be="positions",We={data:{props:["cellSize"]},weights:{props:["aggregation"],accessors:["getWeight"]}};class Ge extends Ct{initializeState(){super.initializeAggregationLayer({dimensions:We}),this.setState({contourData:{},projectPoints:!1,weights:{count:{size:1,operation:g.SUM}}});this.getAttributeManager().add({[Be]:{size:3,accessor:"getPosition",type:5130,fp64:this.use64bitPositions()},count:{size:3,accessor:"getWeight"}})}updateState(t){super.updateState(t);let e=!1;const{oldProps:i,props:n}=t,{aggregationDirty:o}=this.state;i.contours===n.contours&&i.zOffset===n.zOffset||(e=!0,this._updateThresholdData(t.props)),this.getNumInstances()>0&&(o||e)&&this._generateContours()}renderLayers(){const{contourSegments:t,contourPolygons:e}=this.state.contourData,i=this.getSubLayerClass("lines",Wt.Z),n=this.getSubLayerClass("bands",Gt.Z);return[t&&t.length>0&&new i(this.getSubLayerProps({id:"lines"}),{data:this.state.contourData.contourSegments,getSourcePosition:t=>t.start,getTargetPosition:t=>t.end,getColor:t=>t.contour.color||Ue,getWidth:t=>t.contour.strokeWidth||1}),e&&e.length>0&&new n(this.getSubLayerProps({id:"bands"}),{data:this.state.contourData.contourPolygons,getPolygon:t=>t.vertices,getFillColor:t=>t.contour.color||Ue})]}updateAggregationState(t){const{props:e,oldProps:i}=t,{cellSize:n,coordinateSystem:s}=e,{viewport:r}=this.context,a=i.cellSize!==n;let l=e.gpuAggregation;this.state.gpuAggregation!==e.gpuAggregation&&l&&!N.isSupported(this.context.gl)&&(o.Z.warn("GPU Grid Aggregation not supported, falling back to CPU")(),l=!1);const c=l!==this.state.gpuAggregation;this.setState({gpuAggregation:l});const{dimensions:d}=this.state,u=this.isAttributeChanged(Be),{data:h,weights:p}=d;let{boundingBox:g}=this.state;if(u&&(g=xt(this.getAttributes(),this.getNumInstances()),this.setState({boundingBox:g})),u||a){const{gridOffset:t,translation:e,width:i,height:o,numCol:a,numRow:l}=bt(g,n,r,s);this.allocateResources(l,a),this.setState({gridOffset:t,boundingBox:g,translation:e,posOffset:e.slice(),gridOrigin:[-1*e[0],-1*e[1]],width:i,height:o,numCol:a,numRow:l})}const f=u||c||this.isAggregationDirty(t,{dimension:h,compareAll:l}),m=this.isAggregationDirty(t,{dimension:p});m&&this._updateAccessors(t),(f||m)&&this._resetResults(),this.setState({aggregationDataDirty:f,aggregationWeightsDirty:m})}_updateAccessors(t){const{getWeight:e,aggregation:i,data:n}=t.props,{count:o}=this.state.weights;o&&(o.getWeight=e,o.operation=g[i]),this.setState({getValue:y(i,e,{data:n})})}_resetResults(){const{count:t}=this.state.weights;t&&(t.aggregationData=null)}_generateContours(){const{numCol:t,numRow:e,gridOrigin:i,gridOffset:n,thresholdData:o}=this.state,{count:s}=this.state.weights;let{aggregationData:r}=s;r||(r=s.aggregationBuffer.getData(),s.aggregationData=r);const{cellWeights:a}=N.getCellData({countsData:r}),l=function({thresholdData:t,cellWeights:e,gridSize:i,gridOrigin:n,cellSize:o}){const s=[],r=[],a=i[0],l=i[1];let c=0,d=0;for(const i of t){const{contour:t}=i,{threshold:u}=t;for(let h=-1;h<a;h++)for(let p=-1;p<l;p++){const{code:g,meanCode:f}=je({cellWeights:e,threshold:u,x:h,y:p,width:a,height:l}),m={type:De.ISO_BANDS,gridOrigin:n,cellSize:o,x:h,y:p,width:a,height:l,code:g,meanCode:f,thresholdData:i};if(Array.isArray(u)){m.type=De.ISO_BANDS;const e=Ne(m);for(const i of e)r[d++]={vertices:i,contour:t}}else{m.type=De.ISO_LINES;const e=Ne(m);for(let i=0;i<e.length;i+=2)s[c++]={start:e[i],end:e[i+1],contour:t}}}}return{contourSegments:s,contourPolygons:r}}({thresholdData:o,cellWeights:a,gridSize:[t,e],gridOrigin:i,cellSize:[n.xOffset,n.yOffset]});this.setState({contourData:l})}_updateThresholdData(t){const{contours:e,zOffset:i}=t,n=e.length,o=new Array(n);for(let t=0;t<n;t++){const n=e[t];o[t]={contour:n,zIndex:n.zIndex||t,zOffset:i}}this.setState({thresholdData:o})}}(0,n.Z)(Ge,"layerName","ContourLayer"),(0,n.Z)(Ge,"defaultProps",Ve);var He=i(8918),qe=i(7287),Xe=i(5126),Ke=i(1167);const Ye={colorDomain:null,colorRange:W,elevationDomain:null,elevationRange:[0,1e3],elevationScale:{type:"number",min:0,value:1},gridSize:{type:"array",value:[1,1]},gridOrigin:{type:"array",value:[0,0]},gridOffset:{type:"array",value:[0,0]},cellSize:{type:"number",min:0,max:1e3,value:1e3},offset:{type:"array",value:[1,1]},coverage:{type:"number",min:0,max:1,value:1},extruded:!0,material:!0};class Je extends V.Z{getShaders(){return super.getShaders({vs:"#version 300 es\n#define SHADER_NAME gpu-grid-cell-layer-vertex-shader\n#define RANGE_COUNT 6\n\nin vec3 positions;\nin vec3 normals;\n\nin vec4 colors;\nin vec4 elevations;\nin vec3 instancePickingColors;\n\n// Custom uniforms\nuniform vec2 offset;\nuniform bool extruded;\nuniform float cellSize;\nuniform float coverage;\nuniform float opacity;\nuniform float elevationScale;\n\nuniform ivec2 gridSize;\nuniform vec2 gridOrigin;\nuniform vec2 gridOriginLow;\nuniform vec2 gridOffset;\nuniform vec2 gridOffsetLow;\nuniform vec4 colorRange[RANGE_COUNT];\nuniform vec2 elevationRange;\n\n// Domain uniforms\nuniform vec2 colorDomain;\nuniform bool colorDomainValid;\nuniform vec2 elevationDomain;\nuniform bool elevationDomainValid;\n\nlayout(std140) uniform;\nuniform ColorData\n{\n  vec4 maxMinCount;\n} colorData;\nuniform ElevationData\n{\n  vec4 maxMinCount;\n} elevationData;\n\n#define EPSILON 0.00001\n\n// Result\nout vec4 vColor;\n\nvec4 quantizeScale(vec2 domain, vec4 range[RANGE_COUNT], float value) {\n  vec4 outColor = vec4(0., 0., 0., 0.);\n  if (value >= (domain.x - EPSILON) && value <= (domain.y + EPSILON)) {\n    float domainRange = domain.y - domain.x;\n    if (domainRange <= 0.) {\n      outColor = colorRange[0];\n    } else {\n      float rangeCount = float(RANGE_COUNT);\n      float rangeStep = domainRange / rangeCount;\n      float idx = floor((value - domain.x) / rangeStep);\n      idx = clamp(idx, 0., rangeCount - 1.);\n      int intIdx = int(idx);\n      outColor = colorRange[intIdx];\n    }\n  }\n  return outColor;\n}\n\nfloat linearScale(vec2 domain, vec2 range, float value) {\n  if (value >= (domain.x - EPSILON) && value <= (domain.y + EPSILON)) {\n    return ((value - domain.x) / (domain.y - domain.x)) * (range.y - range.x) + range.x;\n  }\n  return -1.;\n}\n\nvoid main(void) {\n  vec2 clrDomain = colorDomainValid ? colorDomain : vec2(colorData.maxMinCount.a, colorData.maxMinCount.r);\n  vec4 color = quantizeScale(clrDomain, colorRange, colors.r);\n\n  float elevation = 0.0;\n\n  if (extruded) {\n    vec2 elvDomain = elevationDomainValid ? elevationDomain : vec2(elevationData.maxMinCount.a, elevationData.maxMinCount.r);\n    elevation = linearScale(elvDomain, elevationRange, elevations.r);\n    elevation = elevation  * (positions.z + 1.0) / 2.0 * elevationScale;\n  }\n\n  // if aggregated color or elevation is 0 do not render\n  float shouldRender = float(color.r > 0.0 && elevations.r >= 0.0);\n  float dotRadius = cellSize / 2. * coverage * shouldRender;\n\n  int yIndex = (gl_InstanceID / gridSize[0]);\n  int xIndex = gl_InstanceID - (yIndex * gridSize[0]);\n\n  vec2 instancePositionXFP64 = mul_fp64(vec2(gridOffset[0], gridOffsetLow[0]), vec2(float(xIndex), 0.));\n  instancePositionXFP64 = sum_fp64(instancePositionXFP64, vec2(gridOrigin[0], gridOriginLow[0]));\n  vec2 instancePositionYFP64 = mul_fp64(vec2(gridOffset[1], gridOffsetLow[1]), vec2(float(yIndex), 0.));\n  instancePositionYFP64 = sum_fp64(instancePositionYFP64, vec2(gridOrigin[1], gridOriginLow[1]));\n\n  vec3 centroidPosition = vec3(instancePositionXFP64[0], instancePositionYFP64[0], elevation);\n  vec3 centroidPosition64Low = vec3(instancePositionXFP64[1], instancePositionYFP64[1], 0.0);\n  geometry.worldPosition = centroidPosition;\n  vec3 pos = vec3(project_size(positions.xy + offset) * dotRadius, 0.);\n\n  // Set color to be rendered to picking fbo (also used to check for selection highlight).\n  picking_setPickingColor(instancePickingColors);\n\n  gl_Position = project_position_to_clipspace(centroidPosition, centroidPosition64Low, pos, geometry.position);\n\n  // Light calculations\n  // Worldspace is the linear space after Mercator projection\n\n  vec3 normals_commonspace = project_normal(normals);\n\n   if (extruded) {\n    vec3 lightColor = lighting_getLightColor(color.rgb, project_uCameraPosition, geometry.position.xyz, normals_commonspace);\n    vColor = vec4(lightColor, color.a * opacity) / 255.;\n  } else {\n    vColor = vec4(color.rgb, color.a * opacity) / 255.;\n  }\n}\n",fs:"#version 300 es\n#define SHADER_NAME gpu-grid-cell-layer-fragment-shader\n\nprecision highp float;\n\nin vec4 vColor;\n\nout vec4 fragColor;\n\nvoid main(void) {\n  fragColor = vColor;\n  fragColor = picking_filterColor(fragColor);\n}\n",modules:[p.Z,qe.N,B.Z,u.n2]})}initializeState({gl:t}){this.getAttributeManager().addInstanced({colors:{size:4,noAlloc:!0},elevations:{size:4,noAlloc:!0}});const e=this._getModel(t);this._setupUniformBuffer(e),this.setState({model:e})}_getModel(t){return new c.Z(t,{...this.getShaders(),id:this.props.id,geometry:new Ke.Z,isInstanced:!0})}draw({uniforms:t}){const{cellSize:e,offset:i,extruded:n,elevationScale:o,coverage:s,gridSize:r,gridOrigin:a,gridOffset:l,elevationRange:c,colorMaxMinBuffer:d,elevationMaxMinBuffer:u}=this.props,h=[(0,Xe.Ks)(a[0]),(0,Xe.Ks)(a[1])],p=[(0,Xe.Ks)(l[0]),(0,Xe.Ks)(l[1])],g=this.getDomainUniforms(),f=G(this.props.colorRange);this.bindUniformBuffers(d,u),this.state.model.setUniforms(t).setUniforms(g).setUniforms({cellSize:e,offset:i,extruded:n,elevationScale:o,coverage:s,gridSize:r,gridOrigin:a,gridOriginLow:h,gridOffset:l,gridOffsetLow:p,colorRange:f,elevationRange:c}).draw(),this.unbindUniformBuffers(d,u)}bindUniformBuffers(t,e){t.bind({target:35345,index:0}),e.bind({target:35345,index:1})}unbindUniformBuffers(t,e){t.unbind({target:35345,index:0}),e.unbind({target:35345,index:1})}getDomainUniforms(){const{colorDomain:t,elevationDomain:e}=this.props,i={};return null!==t?(i.colorDomainValid=!0,i.colorDomain=t):i.colorDomainValid=!1,null!==e?(i.elevationDomainValid=!0,i.elevationDomain=e):i.elevationDomainValid=!1,i}_setupUniformBuffer(t){const e=this.context.gl,i=t.program.handle,n=e.getUniformBlockIndex(i,"ColorData"),o=e.getUniformBlockIndex(i,"ElevationData");e.uniformBlockBinding(i,n,0),e.uniformBlockBinding(i,o,1)}}(0,n.Z)(Je,"layerName","GPUGridCellLayer"),(0,n.Z)(Je,"defaultProps",Ye);const Qe={colorDomain:null,colorRange:W,getColorWeight:{type:"accessor",value:1},colorAggregation:"SUM",elevationDomain:null,elevationRange:[0,1e3],getElevationWeight:{type:"accessor",value:1},elevationAggregation:"SUM",elevationScale:{type:"number",min:0,value:1},cellSize:{type:"number",min:1,max:1e3,value:1e3},coverage:{type:"number",min:0,max:1,value:1},getPosition:{type:"accessor",value:t=>t.position},extruded:!1,material:!0},$e={data:{props:["cellSize","colorAggregation","elevationAggregation"]}},ti="positions";class ei extends Ct{initializeState({gl:t}){const e=N.isSupported(t);e||o.Z.error("GPUGridLayer is not supported on this browser, use GridLayer instead")(),super.initializeAggregationLayer({dimensions:$e}),this.setState({gpuAggregation:!0,projectPoints:!1,isSupported:e,weights:{color:{needMin:!0,needMax:!0,combineMaxMin:!0,maxMinBuffer:new Q.Z(t,{byteLength:16,accessor:{size:4,type:5126,divisor:1}})},elevation:{needMin:!0,needMax:!0,combineMaxMin:!0,maxMinBuffer:new Q.Z(t,{byteLength:16,accessor:{size:4,type:5126,divisor:1}})}},positionAttributeName:"positions"});this.getAttributeManager().add({[ti]:{size:3,accessor:"getPosition",type:5130,fp64:this.use64bitPositions()},color:{size:3,accessor:"getColorWeight"},elevation:{size:3,accessor:"getElevationWeight"}})}updateState(t){if(!1===this.state.isSupported)return;super.updateState(t);const{aggregationDirty:e}=this.state;e&&this.setState({gridHash:null})}getHashKeyForIndex(t){const{numRow:e,numCol:i,boundingBox:n,gridOffset:o}=this.state,s=[i,e],r=[n.xMin,n.yMin],a=[o.xOffset,o.yOffset],l=Math.floor(t/s[0]),c=t-l*s[0],d=Math.floor((l*a[1]+r[1]+90+a[1]/2)/a[1]),u=Math.floor((c*a[0]+r[0]+180+a[0]/2)/a[0]);return"".concat(d,"-").concat(u)}getPositionForIndex(t){const{numRow:e,numCol:i,boundingBox:n,gridOffset:o}=this.state,s=[i,e],r=[n.xMin,n.yMin],a=[o.xOffset,o.yOffset],l=Math.floor(t/s[0]);return[(t-l*s[0])*a[0]+r[0],l*a[1]+r[1]]}getPickingInfo({info:t,mode:e}){const{index:i}=t;let n=null;if(i>=0){const{gpuGridAggregator:t}=this.state,o=this.getPositionForIndex(i),s=N.getAggregationData({pixelIndex:i,...t.getData("color")}),r=N.getAggregationData({pixelIndex:i,...t.getData("elevation")});if(n={colorValue:s.cellWeight,elevationValue:r.cellWeight,count:s.cellCount||r.cellCount,position:o,totalCount:s.totalCount||r.totalCount},"hover"!==e){const{props:t}=this;let{gridHash:e}=this.state;if(!e){const{gridOffset:i,translation:n,boundingBox:o}=this.state,{viewport:s}=this.context;e=St(t,{gridOffset:i,attributes:this.getAttributes(),viewport:s,translation:n,boundingBox:o}).gridHash,this.setState({gridHash:e})}const o=e[this.getHashKeyForIndex(i)];Object.assign(n,o)}}return t.picked=Boolean(n),t.object=n,t}renderLayers(){if(!this.state.isSupported)return null;const{elevationScale:t,extruded:e,cellSize:i,coverage:n,material:o,elevationRange:s,colorDomain:r,elevationDomain:a}=this.props,{weights:l,numRow:c,numCol:d,gridOrigin:u,gridOffset:h}=this.state,{color:p,elevation:g}=l,f=G(this.props.colorRange);return new(this.getSubLayerClass("gpu-grid-cell",Je))({gridSize:[d,c],gridOrigin:u,gridOffset:[h.xOffset,h.yOffset],colorRange:f,elevationRange:s,colorDomain:r,elevationDomain:a,cellSize:i,coverage:n,material:o,elevationScale:t,extruded:e},this.getSubLayerProps({id:"gpu-grid-cell"}),{data:{attributes:{colors:p.aggregationBuffer,elevations:g.aggregationBuffer}},colorMaxMinBuffer:p.maxMinBuffer,elevationMaxMinBuffer:g.maxMinBuffer,numInstances:d*c})}finalizeState(t){const{color:e,elevation:i}=this.state.weights;[e,i].forEach((t=>{const{aggregationBuffer:e,maxMinBuffer:i}=t;i.delete(),null==e||e.delete()})),super.finalizeState(t)}updateAggregationState(t){const{props:e,oldProps:i}=t,{cellSize:n,coordinateSystem:o}=e,{viewport:s}=this.context,r=i.cellSize!==n,{dimensions:a}=this.state,l=this.isAttributeChanged(ti),c=l||this.isAttributeChanged();let{boundingBox:d}=this.state;if(l&&(d=xt(this.getAttributes(),this.getNumInstances()),this.setState({boundingBox:d})),l||r){const{gridOffset:t,translation:e,width:i,height:r,numCol:a,numRow:l}=bt(d,n,s,o);this.allocateResources(l,a),this.setState({gridOffset:t,translation:e,gridOrigin:[-1*e[0],-1*e[1]],width:i,height:r,numCol:a,numRow:l})}const u=c||this.isAggregationDirty(t,{dimension:a.data,compareAll:!0});u&&this._updateAccessors(t),this.setState({aggregationDataDirty:u})}_updateAccessors(t){const{colorAggregation:e,elevationAggregation:i}=t.props,{color:n,elevation:o}=this.state.weights;n.operation=g[e],o.operation=g[i]}}(0,n.Z)(ei,"layerName","GPUGridLayer"),(0,n.Z)(ei,"defaultProps",Qe);const ii={...ei.defaultProps,...kt.defaultProps,gpuAggregation:!1};class ni extends He.Z{constructor(...t){super(...t),(0,n.Z)(this,"state",void 0)}initializeState(){this.state={useGPUAggregation:!0}}updateState({props:t}){this.setState({useGPUAggregation:this.canUseGPUAggregation(t)})}renderLayers(){const{data:t,updateTriggers:e}=this.props,i=this.state.useGPUAggregation?"GPU":"CPU";return new(this.state.useGPUAggregation?this.getSubLayerClass("GPU",ei):this.getSubLayerClass("CPU",kt))(this.props,this.getSubLayerProps({id:i,updateTriggers:e}),{data:t})}canUseGPUAggregation(t){const{gpuAggregation:e,lowerPercentile:i,upperPercentile:n,getColorValue:o,getElevationValue:s,colorScaleType:r}=t;return!!e&&(!!N.isSupported(this.context.gl)&&(0===i&&100===n&&(null===o&&null===s&&("quantile"!==r&&"ordinal"!==r))))}}(0,n.Z)(ni,"layerName","GridLayer"),(0,n.Z)(ni,"defaultProps",ii);const oi=new Float32Array(12);function si(t,e=2){let i=0;for(const n of t)for(let t=0;t<e;t++)oi[i++]=n[t]||0;return oi}var ri=i(3518);class ai extends V.Z{getShaders(){return{vs:"#define SHADER_NAME heatp-map-layer-vertex-shader\n\nuniform sampler2D maxTexture;\nuniform float intensity;\nuniform vec2 colorDomain;\nuniform float threshold;\nuniform float aggregationMode;\n\nattribute vec3 positions;\nattribute vec2 texCoords;\n\nvarying vec2 vTexCoords;\nvarying float vIntensityMin;\nvarying float vIntensityMax;\n\nvoid main(void) {\n  gl_Position = project_position_to_clipspace(positions, vec3(0.0), vec3(0.0));\n  vTexCoords = texCoords;\n  vec4 maxTexture = texture2D(maxTexture, vec2(0.5));\n  float maxValue = aggregationMode < 0.5 ? maxTexture.r : maxTexture.g;\n  float minValue = maxValue * threshold;\n  if (colorDomain[1] > 0.) {\n    // if user specified custom domain use it.\n    maxValue = colorDomain[1];\n    minValue = colorDomain[0];\n  }\n  vIntensityMax = intensity / maxValue;\n  vIntensityMin = intensity / minValue;\n}\n",fs:"#define SHADER_NAME triangle-layer-fragment-shader\n\nprecision highp float;\n\nuniform float opacity;\nuniform sampler2D texture;\nuniform sampler2D colorTexture;\nuniform float aggregationMode;\n\nvarying vec2 vTexCoords;\nvarying float vIntensityMin;\nvarying float vIntensityMax;\n\nvec4 getLinearColor(float value) {\n  float factor = clamp(value * vIntensityMax, 0., 1.);\n  vec4 color = texture2D(colorTexture, vec2(factor, 0.5));\n  color.a *= min(value * vIntensityMin, 1.0);\n  return color;\n}\n\nvoid main(void) {\n  vec4 weights = texture2D(texture, vTexCoords);\n  float weight = weights.r;\n\n  if (aggregationMode > 0.5) {\n    weight /= max(1.0, weights.a);\n  }\n\n  // discard pixels with 0 weight.\n  if (weight <= 0.) {\n     discard;\n  }\n\n  vec4 linearColor = getLinearColor(weight);\n  linearColor.a *= opacity;\n  gl_FragColor =linearColor;\n}\n",modules:[p.Z]}}initializeState({gl:t}){this.getAttributeManager().add({positions:{size:3,noAlloc:!0},texCoords:{size:2,noAlloc:!0}}),this.setState({model:this._getModel(t)})}_getModel(t){const{vertexCount:e}=this.props;return new c.Z(t,{...this.getShaders(),id:this.props.id,geometry:new U.Z({drawMode:6,vertexCount:e})})}draw({uniforms:t}){const{model:e}=this.state,{texture:i,maxTexture:n,colorTexture:o,intensity:s,threshold:r,aggregationMode:a,colorDomain:l}=this.props;e.setUniforms({...t,texture:i,maxTexture:n,colorTexture:o,intensity:s,threshold:r,aggregationMode:a,colorDomain:l}).draw()}}(0,n.Z)(ai,"layerName","TriangleLayer");const li={mipmaps:!1,parameters:{10240:9729,10241:9729,10242:33071,10243:33071},dataFormat:6408},ci=[0,0],di={SUM:0,MEAN:1},ui={getPosition:{type:"accessor",value:t=>t.position},getWeight:{type:"accessor",value:1},intensity:{type:"number",min:0,value:1},radiusPixels:{type:"number",min:1,max:100,value:50},colorRange:W,threshold:{type:"number",min:0,max:1,value:.05},colorDomain:{type:"array",value:null,optional:!0},aggregation:"SUM",weightsTextureSize:{type:"number",min:128,max:2048,value:2048},debounceTimeout:{type:"number",min:0,max:1e3,value:500}},hi=[s.h.BLEND_EQUATION_MINMAX,s.h.TEXTURE_FLOAT],pi=[s.h.COLOR_ATTACHMENT_RGBA32F,s.h.FLOAT_BLEND],gi={data:{props:["radiusPixels"]}};class fi extends J.Z{constructor(...t){super(...t),(0,n.Z)(this,"state",void 0)}initializeState(){const{gl:t}=this.context;if(!(0,r.ag)(t,hi))return this.setState({supported:!1}),void o.Z.error("HeatmapLayer: ".concat(this.id," is not supported on this browser"))();super.initializeAggregationLayer(gi),this.setState({supported:!0,colorDomain:ci}),this._setupTextureParams(),this._setupAttributes(),this._setupResources()}shouldUpdateState({changeFlags:t}){return t.somethingChanged}updateState(t){this.state.supported&&(super.updateState(t),this._updateHeatmapState(t))}_updateHeatmapState(t){const{props:e,oldProps:i}=t,n=this._getChangeFlags(t);(n.dataChanged||n.viewportChanged)&&(n.boundsChanged=this._updateBounds(n.dataChanged),this._updateTextureRenderingBounds()),n.dataChanged||n.boundsChanged?(clearTimeout(this.state.updateTimer),this.setState({isWeightMapDirty:!0})):n.viewportZoomChanged&&this._debouncedUpdateWeightmap(),e.colorRange!==i.colorRange&&this._updateColorTexture(t),this.state.isWeightMapDirty&&this._updateWeightmap(),this.setState({zoom:t.context.viewport.zoom})}renderLayers(){if(!this.state.supported)return[];const{weightsTexture:t,triPositionBuffer:e,triTexCoordBuffer:i,maxWeightsTexture:n,colorTexture:o,colorDomain:s}=this.state,{updateTriggers:r,intensity:a,threshold:l,aggregation:c}=this.props;return new(this.getSubLayerClass("triangle",ai))(this.getSubLayerProps({id:"triangle-layer",updateTriggers:r}),{coordinateSystem:vt.Df.DEFAULT,data:{attributes:{positions:e,texCoords:i}},vertexCount:4,maxTexture:n,colorTexture:o,aggregationMode:di[c]||0,texture:t,intensity:a,threshold:l,colorDomain:s})}finalizeState(t){super.finalizeState(t);const{weightsTransform:e,weightsTexture:i,maxWeightTransform:n,maxWeightsTexture:o,triPositionBuffer:s,triTexCoordBuffer:r,colorTexture:a,updateTimer:l}=this.state;null==e||e.delete(),null==i||i.delete(),null==n||n.delete(),null==o||o.delete(),null==s||s.delete(),null==r||r.delete(),null==a||a.delete(),l&&clearTimeout(l)}_getAttributeManager(){return new ri.Z(this.context.gl,{id:this.props.id,stats:this.context.stats})}_getChangeFlags(t){const e={},{dimensions:i}=this.state;e.dataChanged=this.isAttributeChanged()||this.isAggregationDirty(t,{compareAll:!0,dimension:i.data}),e.viewportChanged=t.changeFlags.viewportChanged;const{zoom:n}=this.state;return t.context.viewport&&t.context.viewport.zoom===n||(e.viewportZoomChanged=!0),e}_createTextures(){const{gl:t}=this.context,{textureSize:e,format:i,type:n}=this.state;this.setState({weightsTexture:new z.Z(t,{width:e,height:e,format:i,type:n,...li}),maxWeightsTexture:new z.Z(t,{format:i,type:n,...li})})}_setupAttributes(){this.getAttributeManager().add({positions:{size:3,type:5130,accessor:"getPosition"},weights:{size:1,accessor:"getWeight"}}),this.setState({positionAttributeName:"positions"})}_setupTextureParams(){const{gl:t}=this.context,{weightsTextureSize:e}=this.props,i=Math.min(e,(0,a.ZS)(t,3379)),n=(0,r.ag)(t,pi),{format:s,type:l}=function({gl:t,floatTargetSupport:e}){return e?{format:(0,a.D0)(t)?34836:6408,type:5126}:{format:6408,type:5121}}({gl:t,floatTargetSupport:n}),c=n?1:1/255;this.setState({textureSize:i,format:s,type:l,weightsScale:c}),n||o.Z.warn("HeatmapLayer: ".concat(this.id," rendering to float texture not supported, fallingback to low precession format"))()}getShaders(t){return super.getShaders("max-weights-transform"===t?{vs:"attribute vec4 inTexture;\nvarying vec4 outTexture;\n\nvoid main()\n{\noutTexture = inTexture;\ngl_Position = vec4(0, 0, 0, 1.);\n// Enforce default value for ANGLE issue (https://bugs.chromium.org/p/angleproject/issues/detail?id=3941)\ngl_PointSize = 1.0;\n}\n",_fs:"varying vec4 outTexture;\nvoid main() {\n  gl_FragColor = outTexture;\n  gl_FragColor.g = outTexture.r / max(1.0, outTexture.a);\n}\n"}:{vs:"attribute vec3 positions;\nattribute vec3 positions64Low;\nattribute float weights;\nvarying vec4 weightsTexture;\nuniform float radiusPixels;\nuniform float textureWidth;\nuniform vec4 commonBounds;\nuniform float weightsScale;\nvoid main()\n{\n  weightsTexture = vec4(weights * weightsScale, 0., 0., 1.);\n\n  float radiusTexels  = project_pixel_size(radiusPixels) * textureWidth / (commonBounds.z - commonBounds.x);\n  gl_PointSize = radiusTexels * 2.;\n\n  vec3 commonPosition = project_position(positions, positions64Low);\n\n  // map xy from commonBounds to [-1, 1]\n  gl_Position.xy = (commonPosition.xy - commonBounds.xy) / (commonBounds.zw - commonBounds.xy) ;\n  gl_Position.xy = (gl_Position.xy * 2.) - (1.);\n}\n",_fs:"varying vec4 weightsTexture;\n// Epanechnikov function, keeping for reference\n// float epanechnikovKDE(float u) {\n//   return 0.75 * (1.0 - u * u);\n// }\nfloat gaussianKDE(float u){\n  return pow(2.71828, -u*u/0.05555)/(1.77245385*0.166666);\n}\nvoid main()\n{\n  float dist = length(gl_PointCoord - vec2(0.5, 0.5));\n  if (dist > 0.5) {\n    discard;\n  }\n  gl_FragColor = weightsTexture * gaussianKDE(2. * dist);\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n"})}_createWeightsTransform(t={}){var e;const{gl:i}=this.context;let{weightsTransform:n}=this.state;const{weightsTexture:o}=this.state;null===(e=n)||void 0===e||e.delete(),n=new d.Z(i,{id:"".concat(this.id,"-weights-transform"),elementCount:1,_targetTexture:o,_targetTextureVarying:"weightsTexture",...t}),this.setState({weightsTransform:n})}_setupResources(){const{gl:t}=this.context;this._createTextures();const{textureSize:e,weightsTexture:i,maxWeightsTexture:n}=this.state,o=this.getShaders("weights-transform");this._createWeightsTransform(o);const s=this.getShaders("max-weights-transform"),r=new d.Z(t,{id:"".concat(this.id,"-max-weights-transform"),_sourceTextures:{inTexture:i},_targetTexture:n,_targetTextureVarying:"outTexture",...s,elementCount:e*e});this.setState({weightsTexture:i,maxWeightsTexture:n,maxWeightTransform:r,zoom:null,triPositionBuffer:new Q.Z(t,{byteLength:48,accessor:{size:3}}),triTexCoordBuffer:new Q.Z(t,{byteLength:48,accessor:{size:2}})})}updateShaders(t){this._createWeightsTransform(t)}_updateMaxWeightValue(){const{maxWeightTransform:t}=this.state;t.run({parameters:{blend:!0,depthTest:!1,blendFunc:[1,1],blendEquation:32776}})}_updateBounds(t=!1){const{viewport:e}=this.context,i=[e.unproject([0,0]),e.unproject([e.width,0]),e.unproject([e.width,e.height]),e.unproject([0,e.height])].map((t=>t.map(Math.fround))),n=function(t){const e=t.map((t=>t[0])),i=t.map((t=>t[1])),n=Math.min.apply(null,e),o=Math.max.apply(null,e);return[n,Math.min.apply(null,i),o,Math.max.apply(null,i)]}(i),o={visibleWorldBounds:n,viewportCorners:i};let s=!1;if(t||!this.state.worldBounds||(r=this.state.worldBounds,!((a=n)[0]>=r[0]&&a[2]<=r[2]&&a[1]>=r[1]&&a[3]<=r[3]))){const t=this._worldToCommonBounds(n),e=this._commonToWorldBounds(t);this.props.coordinateSystem===vt.Df.LNGLAT&&(e[1]=Math.max(e[1],-85.051129),e[3]=Math.min(e[3],85.051129),e[0]=Math.max(e[0],-360),e[2]=Math.min(e[2],360));const i=this._worldToCommonBounds(e);o.worldBounds=e,o.normalizedCommonBounds=i,s=!0}var r,a;return this.setState(o),s}_updateTextureRenderingBounds(){const{triPositionBuffer:t,triTexCoordBuffer:e,normalizedCommonBounds:i,viewportCorners:n}=this.state,{viewport:o}=this.context;t.subData(si(n,3));const s=n.map((t=>function(t,e){const[i,n,o,s]=e;return[(t[0]-i)/(o-i),(t[1]-n)/(s-n)]}(o.projectPosition(t),i)));e.subData(si(s,2))}_updateColorTexture(t){const{colorRange:e}=t.props;let{colorTexture:i}=this.state;const n=G(e,!1,Uint8Array);i?i.setImageData({data:n,width:e.length}):i=new z.Z(this.context.gl,{data:n,width:e.length,height:1,...li}),this.setState({colorTexture:i})}_updateWeightmap(){const{radiusPixels:t,colorDomain:e,aggregation:i}=this.props,{weightsTransform:n,worldBounds:o,textureSize:s,weightsTexture:r,weightsScale:l}=this.state;this.state.isWeightMapDirty=!1;const c=this._worldToCommonBounds(o,{useLayerCoordinateSystem:!0});if(e&&"SUM"===i){const{viewport:t}=this.context,i=t.distanceScales.metersPerUnit[2]*(c[2]-c[0])/s;this.state.colorDomain=e.map((t=>t*i*l))}else this.state.colorDomain=e||ci;const d={radiusPixels:t,commonBounds:c,textureWidth:s,weightsScale:l};n.update({elementCount:this.getNumInstances()}),(0,a.s8)(this.context.gl,{clearColor:[0,0,0,0]},(()=>{n.run({uniforms:d,parameters:{blend:!0,depthTest:!1,blendFunc:[1,1],blendEquation:32774},clearRenderTarget:!0,attributes:this.getAttributes(),moduleSettings:this.getModuleSettings()})})),this._updateMaxWeightValue(),r.setParameters({10240:9729,10241:9729})}_debouncedUpdateWeightmap(t=!1){let{updateTimer:e}=this.state;const{debounceTimeout:i}=this.props;t?(e=null,this._updateBounds(!0),this._updateTextureRenderingBounds(),this.setState({isWeightMapDirty:!0})):(this.setState({isWeightMapDirty:!1}),clearTimeout(e),e=setTimeout(this._debouncedUpdateWeightmap.bind(this,!0),i)),this.setState({updateTimer:e})}_worldToCommonBounds(t,e={}){const{useLayerCoordinateSystem:i=!1}=e,[n,o,s,r]=t,{viewport:a}=this.context,{textureSize:l}=this.state,{coordinateSystem:c}=this.props,d=i&&(c===vt.Df.LNGLAT_OFFSETS||c===vt.Df.METER_OFFSETS),u=d?a.projectPosition(this.props.coordinateOrigin):[0,0],h=2*l/a.scale;let p,g;return i&&!d?(p=this.projectPosition([n,o,0]),g=this.projectPosition([s,r,0])):(p=a.projectPosition([n,o,0]),g=a.projectPosition([s,r,0])),function(t,e,i){const[n,o,s,r]=t,a=s-n,l=r-o;let c=a,d=l;a/l<e/i?c=e/i*l:d=i/e*a,c<e&&(c=e,d=i);const u=(s+n)/2,h=(r+o)/2;return[u-c/2,h-d/2,u+c/2,h+d/2]}([p[0]-u[0],p[1]-u[1],g[0]-u[0],g[1]-u[1]],h,h)}_commonToWorldBounds(t){const[e,i,n,o]=t,{viewport:s}=this.context,r=s.unprojectPosition([e,i]),a=s.unprojectPosition([n,o]);return r.slice(0,2).concat(a.slice(0,2))}}(0,n.Z)(fi,"layerName","HeatmapLayer"),(0,n.Z)(fi,"defaultProps",ui)},8082:(t,e,i)=>{i.d(e,{Z:()=>f});var n=i(4572),o=i(600),s=i(6497);const r={transitionDuration:0},a=t=>1-(1-t)*(1-t),l=["wheel"],c=["panstart","panmove","panend"],d=["pinchstart","pinchmove","pinchend"],u=["tripanstart","tripanmove","tripanend"],h=["doubletap"],p=["keydown"],g={};class f{constructor(t){(0,n.Z)(this,"props",void 0),(0,n.Z)(this,"state",{}),(0,n.Z)(this,"transitionManager",void 0),(0,n.Z)(this,"eventManager",void 0),(0,n.Z)(this,"onViewStateChange",void 0),(0,n.Z)(this,"onStateChange",void 0),(0,n.Z)(this,"makeViewport",void 0),(0,n.Z)(this,"_controllerState",void 0),(0,n.Z)(this,"_events",{}),(0,n.Z)(this,"_interactionState",{isDragging:!1}),(0,n.Z)(this,"_customEvents",[]),(0,n.Z)(this,"_eventStartBlocked",null),(0,n.Z)(this,"_panMove",!1),(0,n.Z)(this,"invertPan",!1),(0,n.Z)(this,"dragMode","rotate"),(0,n.Z)(this,"inertia",0),(0,n.Z)(this,"scrollZoom",!0),(0,n.Z)(this,"dragPan",!0),(0,n.Z)(this,"dragRotate",!0),(0,n.Z)(this,"doubleClickZoom",!0),(0,n.Z)(this,"touchZoom",!0),(0,n.Z)(this,"touchRotate",!1),(0,n.Z)(this,"keyboard",!0),this.transitionManager=new o.Z({...t,getControllerState:t=>new this.ControllerState(t),onViewStateChange:this._onTransition.bind(this),onStateChange:this._setInteractionState.bind(this)}),this.handleEvent=this.handleEvent.bind(this),this.eventManager=t.eventManager,this.onViewStateChange=t.onViewStateChange||(()=>{}),this.onStateChange=t.onStateChange||(()=>{}),this.makeViewport=t.makeViewport}set events(t){this.toggleEvents(this._customEvents,!1),this.toggleEvents(t,!0),this._customEvents=t,this.props&&this.setProps(this.props)}finalize(){for(const e in this._events){var t;if(this._events[e])null===(t=this.eventManager)||void 0===t||t.off(e,this.handleEvent)}this.transitionManager.finalize()}handleEvent(t){this._controllerState=void 0;const e=this._eventStartBlocked;switch(t.type){case"panstart":return!e&&this._onPanStart(t);case"panmove":return this._onPan(t);case"panend":return this._onPanEnd(t);case"pinchstart":return!e&&this._onPinchStart(t);case"pinchmove":return this._onPinch(t);case"pinchend":return this._onPinchEnd(t);case"tripanstart":return!e&&this._onTriplePanStart(t);case"tripanmove":return this._onTriplePan(t);case"tripanend":return this._onTriplePanEnd(t);case"doubletap":return this._onDoubleTap(t);case"wheel":return this._onWheel(t);case"keydown":return this._onKeyDown(t);default:return!1}}get controllerState(){return this._controllerState=this._controllerState||new this.ControllerState({makeViewport:this.makeViewport,...this.props,...this.state}),this._controllerState}getCenter(t){const{x:e,y:i}=this.props,{offsetCenter:n}=t;return[n.x-e,n.y-i]}isPointInBounds(t,e){const{width:i,height:n}=this.props;if(e&&e.handled)return!1;const o=t[0]>=0&&t[0]<=i&&t[1]>=0&&t[1]<=n;return o&&e&&e.stopPropagation(),o}isFunctionKeyPressed(t){const{srcEvent:e}=t;return Boolean(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}isDragging(){return this._interactionState.isDragging||!1}blockEvents(t){const e=setTimeout((()=>{this._eventStartBlocked===e&&(this._eventStartBlocked=null)}),t);this._eventStartBlocked=e}setProps(t){t.dragMode&&(this.dragMode=t.dragMode),this.props=t,"transitionInterpolator"in t||(t.transitionInterpolator=this._getTransitionProps().transitionInterpolator),this.transitionManager.processViewStateChange(t);const{inertia:e}=t;this.inertia=Number.isFinite(e)?e:!0===e?300:0;const{scrollZoom:i=!0,dragPan:n=!0,dragRotate:o=!0,doubleClickZoom:s=!0,touchZoom:r=!0,touchRotate:a=!1,keyboard:g=!0}=t,f=Boolean(this.onViewStateChange);this.toggleEvents(l,f&&i),this.toggleEvents(c,f&&(n||o)),this.toggleEvents(d,f&&(r||a)),this.toggleEvents(u,f&&a),this.toggleEvents(h,f&&s),this.toggleEvents(p,f&&g),this.scrollZoom=i,this.dragPan=n,this.dragRotate=o,this.doubleClickZoom=s,this.touchZoom=r,this.touchRotate=a,this.keyboard=g}updateTransition(){this.transitionManager.updateTransition()}toggleEvents(t,e){this.eventManager&&t.forEach((t=>{this._events[t]!==e&&(this._events[t]=e,e?this.eventManager.on(t,this.handleEvent):this.eventManager.off(t,this.handleEvent))}))}updateViewport(t,e=null,i={}){const n={...t.getViewportProps(),...e},o=this.controllerState!==t;if(this.state=t.getState(),this._setInteractionState(i),o){const t=this.controllerState&&this.controllerState.getViewportProps();this.onViewStateChange&&this.onViewStateChange({viewState:n,interactionState:this._interactionState,oldViewState:t})}}_onTransition(t){this.onViewStateChange({...t,interactionState:this._interactionState})}_setInteractionState(t){Object.assign(this._interactionState,t),this.onStateChange(this._interactionState)}_onPanStart(t){const e=this.getCenter(t);if(!this.isPointInBounds(e,t))return!1;let i=this.isFunctionKeyPressed(t)||t.rightButton||!1;(this.invertPan||"pan"===this.dragMode)&&(i=!i);const n=this.controllerState[i?"panStart":"rotateStart"]({pos:e});return this._panMove=i,this.updateViewport(n,r,{isDragging:!0}),!0}_onPan(t){return!!this.isDragging()&&(this._panMove?this._onPanMove(t):this._onPanRotate(t))}_onPanEnd(t){return!!this.isDragging()&&(this._panMove?this._onPanMoveEnd(t):this._onPanRotateEnd(t))}_onPanMove(t){if(!this.dragPan)return!1;const e=this.getCenter(t),i=this.controllerState.pan({pos:e});return this.updateViewport(i,r,{isDragging:!0,isPanning:!0}),!0}_onPanMoveEnd(t){const{inertia:e}=this;if(this.dragPan&&e&&t.velocity){const i=this.getCenter(t),n=[i[0]+t.velocityX*e/2,i[1]+t.velocityY*e/2],o=this.controllerState.pan({pos:n}).panEnd();this.updateViewport(o,{...this._getTransitionProps(),transitionDuration:e,transitionEasing:a},{isDragging:!1,isPanning:!0})}else{const t=this.controllerState.panEnd();this.updateViewport(t,null,{isDragging:!1,isPanning:!1})}return!0}_onPanRotate(t){if(!this.dragRotate)return!1;const e=this.getCenter(t),i=this.controllerState.rotate({pos:e});return this.updateViewport(i,r,{isDragging:!0,isRotating:!0}),!0}_onPanRotateEnd(t){const{inertia:e}=this;if(this.dragRotate&&e&&t.velocity){const i=this.getCenter(t),n=[i[0]+t.velocityX*e/2,i[1]+t.velocityY*e/2],o=this.controllerState.rotate({pos:n}).rotateEnd();this.updateViewport(o,{...this._getTransitionProps(),transitionDuration:e,transitionEasing:a},{isDragging:!1,isRotating:!0})}else{const t=this.controllerState.rotateEnd();this.updateViewport(t,null,{isDragging:!1,isRotating:!1})}return!0}_onWheel(t){if(!this.scrollZoom)return!1;t.srcEvent.preventDefault();const e=this.getCenter(t);if(!this.isPointInBounds(e,t))return!1;const{speed:i=.01,smooth:n=!1}=!0===this.scrollZoom?{}:this.scrollZoom,{delta:o}=t;let s=2/(1+Math.exp(-Math.abs(o*i)));o<0&&0!==s&&(s=1/s);const r=this.controllerState.zoom({pos:e,scale:s});return this.updateViewport(r,{...this._getTransitionProps({around:e}),transitionDuration:n?250:1},{isZooming:!0,isPanning:!0}),!0}_onTriplePanStart(t){const e=this.getCenter(t);if(!this.isPointInBounds(e,t))return!1;const i=this.controllerState.rotateStart({pos:e});return this.updateViewport(i,r,{isDragging:!0}),!0}_onTriplePan(t){if(!this.touchRotate)return!1;if(!this.isDragging())return!1;const e=this.getCenter(t);e[0]-=t.deltaX;const i=this.controllerState.rotate({pos:e});return this.updateViewport(i,r,{isDragging:!0,isRotating:!0}),!0}_onTriplePanEnd(t){if(!this.isDragging())return!1;const{inertia:e}=this;if(this.touchRotate&&e&&t.velocityY){const i=this.getCenter(t),n=[i[0],i[1]+=t.velocityY*e/2],o=this.controllerState.rotate({pos:n});this.updateViewport(o,{...this._getTransitionProps(),transitionDuration:e,transitionEasing:a},{isDragging:!1,isRotating:!0}),this.blockEvents(e)}else{const t=this.controllerState.rotateEnd();this.updateViewport(t,null,{isDragging:!1,isRotating:!1})}return!0}_onPinchStart(t){const e=this.getCenter(t);if(!this.isPointInBounds(e,t))return!1;const i=this.controllerState.zoomStart({pos:e}).rotateStart({pos:e});return g._startPinchRotation=t.rotation,g._lastPinchEvent=t,this.updateViewport(i,r,{isDragging:!0}),!0}_onPinch(t){if(!this.touchZoom&&!this.touchRotate)return!1;if(!this.isDragging())return!1;let e=this.controllerState;if(this.touchZoom){const{scale:i}=t,n=this.getCenter(t);e=e.zoom({pos:n,scale:i})}if(this.touchRotate){const{rotation:i}=t;e=e.rotate({deltaAngleX:g._startPinchRotation-i})}return this.updateViewport(e,r,{isDragging:!0,isPanning:this.touchZoom,isZooming:this.touchZoom,isRotating:this.touchRotate}),g._lastPinchEvent=t,!0}_onPinchEnd(t){if(!this.isDragging())return!1;const{inertia:e}=this,{_lastPinchEvent:i}=g;if(this.touchZoom&&e&&i&&t.scale!==i.scale){const n=this.getCenter(t);let o=this.controllerState.rotateEnd();const s=Math.log2(t.scale),r=(s-Math.log2(i.scale))/(t.deltaTime-i.deltaTime),l=Math.pow(2,s+r*e/2);o=o.zoom({pos:n,scale:l}).zoomEnd(),this.updateViewport(o,{...this._getTransitionProps({around:n}),transitionDuration:e,transitionEasing:a},{isDragging:!1,isPanning:this.touchZoom,isZooming:this.touchZoom,isRotating:!1}),this.blockEvents(e)}else{const t=this.controllerState.zoomEnd().rotateEnd();this.updateViewport(t,null,{isDragging:!1,isPanning:!1,isZooming:!1,isRotating:!1})}return g._startPinchRotation=null,g._lastPinchEvent=null,!0}_onDoubleTap(t){if(!this.doubleClickZoom)return!1;const e=this.getCenter(t);if(!this.isPointInBounds(e,t))return!1;const i=this.isFunctionKeyPressed(t),n=this.controllerState.zoom({pos:e,scale:i?.5:2});return this.updateViewport(n,this._getTransitionProps({around:e}),{isZooming:!0,isPanning:!0}),this.blockEvents(100),!0}_onKeyDown(t){if(!this.keyboard)return!1;const e=this.isFunctionKeyPressed(t),{zoomSpeed:i,moveSpeed:n,rotateSpeedX:o,rotateSpeedY:s}=!0===this.keyboard?{}:this.keyboard,{controllerState:r}=this;let a;const l={};switch(t.srcEvent.code){case"Minus":a=e?r.zoomOut(i).zoomOut(i):r.zoomOut(i),l.isZooming=!0;break;case"Equal":a=e?r.zoomIn(i).zoomIn(i):r.zoomIn(i),l.isZooming=!0;break;case"ArrowLeft":e?(a=r.rotateLeft(o),l.isRotating=!0):(a=r.moveLeft(n),l.isPanning=!0);break;case"ArrowRight":e?(a=r.rotateRight(o),l.isRotating=!0):(a=r.moveRight(n),l.isPanning=!0);break;case"ArrowUp":e?(a=r.rotateUp(s),l.isRotating=!0):(a=r.moveUp(n),l.isPanning=!0);break;case"ArrowDown":e?(a=r.rotateDown(s),l.isRotating=!0):(a=r.moveDown(n),l.isPanning=!0);break;default:return!1}return this.updateViewport(a,this._getTransitionProps(),l),!0}_getTransitionProps(t){const{transition:e}=this;return e&&e.transitionInterpolator?t?{...e,transitionInterpolator:new s.Z({...t,...e.transitionInterpolator.opts,makeViewport:this.controllerState.makeViewport})}:e:r}}},6883:(t,e,i)=>{i.d(e,{U:()=>d,Z:()=>u});var n=i(4572),o=i(4034),s=i(8082),r=i(6442),a=i(7013),l=i(5304),c=i(6497);class d extends r.Z{constructor(t){const{width:e,height:i,latitude:o,longitude:s,zoom:r,bearing:a=0,pitch:c=0,altitude:d=1.5,position:u=[0,0,0],maxZoom:h=20,minZoom:p=0,maxPitch:g=60,minPitch:f=0,startPanLngLat:m,startZoomLngLat:v,startRotatePos:y,startBearing:_,startPitch:x,startZoom:w,normalize:P=!0}=t;(0,l.Z)(Number.isFinite(s)),(0,l.Z)(Number.isFinite(o)),(0,l.Z)(Number.isFinite(r)),super({width:e,height:i,latitude:o,longitude:s,zoom:r,bearing:a,pitch:c,altitude:d,maxZoom:h,minZoom:p,maxPitch:g,minPitch:f,normalize:P,position:u},{startPanLngLat:m,startZoomLngLat:v,startRotatePos:y,startBearing:_,startPitch:x,startZoom:w}),(0,n.Z)(this,"makeViewport",void 0),this.makeViewport=t.makeViewport}panStart({pos:t}){return this._getUpdatedState({startPanLngLat:this._unproject(t)})}pan({pos:t,startPos:e}){const i=this.getState().startPanLngLat||this._unproject(e);if(!i)return this;const n=this.makeViewport(this.getViewportProps()).panByPosition(i,t);return this._getUpdatedState(n)}panEnd(){return this._getUpdatedState({startPanLngLat:null})}rotateStart({pos:t}){return this._getUpdatedState({startRotatePos:t,startBearing:this.getViewportProps().bearing,startPitch:this.getViewportProps().pitch})}rotate({pos:t,deltaAngleX:e=0,deltaAngleY:i=0}){const{startRotatePos:n,startBearing:o,startPitch:s}=this.getState();if(!n||void 0===o||void 0===s)return this;let r;return r=t?this._getNewRotation(t,n,s,o):{bearing:o+e,pitch:s+i},this._getUpdatedState(r)}rotateEnd(){return this._getUpdatedState({startBearing:null,startPitch:null})}zoomStart({pos:t}){return this._getUpdatedState({startZoomLngLat:this._unproject(t),startZoom:this.getViewportProps().zoom})}zoom({pos:t,startPos:e,scale:i}){let{startZoom:n,startZoomLngLat:s}=this.getState();if(s||(n=this.getViewportProps().zoom,s=this._unproject(e)||this._unproject(t)),!s)return this;const{maxZoom:r,minZoom:a}=this.getViewportProps();let l=n+Math.log2(i);l=(0,o.uZ)(l,a,r);const c=this.makeViewport({...this.getViewportProps(),zoom:l});return this._getUpdatedState({zoom:l,...c.panByPosition(s,t)})}zoomEnd(){return this._getUpdatedState({startZoomLngLat:null,startZoom:null})}zoomIn(t=2){return this._zoomFromCenter(t)}zoomOut(t=2){return this._zoomFromCenter(1/t)}moveLeft(t=100){return this._panFromCenter([t,0])}moveRight(t=100){return this._panFromCenter([-t,0])}moveUp(t=100){return this._panFromCenter([0,t])}moveDown(t=100){return this._panFromCenter([0,-t])}rotateLeft(t=15){return this._getUpdatedState({bearing:this.getViewportProps().bearing-t})}rotateRight(t=15){return this._getUpdatedState({bearing:this.getViewportProps().bearing+t})}rotateUp(t=10){return this._getUpdatedState({pitch:this.getViewportProps().pitch+t})}rotateDown(t=10){return this._getUpdatedState({pitch:this.getViewportProps().pitch-t})}shortestPathFrom(t){const e=t.getViewportProps(),i={...this.getViewportProps()},{bearing:n,longitude:o}=i;return Math.abs(n-e.bearing)>180&&(i.bearing=n<0?n+360:n-360),Math.abs(o-e.longitude)>180&&(i.longitude=o<0?o+360:o-360),i}applyConstraints(t){const{maxZoom:e,minZoom:i,zoom:n}=t;t.zoom=(0,o.uZ)(n,i,e);const{maxPitch:s,minPitch:r,pitch:l}=t;t.pitch=(0,o.uZ)(l,r,s);const{normalize:c=!0}=t;return c&&Object.assign(t,(0,a.QA)(t)),t}_zoomFromCenter(t){const{width:e,height:i}=this.getViewportProps();return this.zoom({pos:[e/2,i/2],scale:t})}_panFromCenter(t){const{width:e,height:i}=this.getViewportProps();return this.pan({startPos:[e/2,i/2],pos:[e/2+t[0],i/2+t[1]]})}_getUpdatedState(t){return new this.constructor({makeViewport:this.makeViewport,...this.getViewportProps(),...this.getState(),...t})}_unproject(t){const e=this.makeViewport(this.getViewportProps());return t&&e.unproject(t)}_getNewRotation(t,e,i,n){const s=t[0]-e[0],r=t[1]-e[1],a=t[1],l=e[1],{width:c,height:d}=this.getViewportProps(),u=s/c;let h=0;r>0?Math.abs(d-l)>5&&(h=r/(l-d)*1.2):r<0&&l>5&&(h=1-a/l),h=(0,o.uZ)(h,-1,1);const{minPitch:p,maxPitch:g}=this.getViewportProps();let f=i;return h>0?f=i+h*(g-i):h<0&&(f=i-h*(p-i)),{pitch:f,bearing:n+180*u}}}class u extends s.Z{constructor(...t){super(...t),(0,n.Z)(this,"ControllerState",d),(0,n.Z)(this,"transition",{transitionDuration:300,transitionInterpolator:new c.Z({transitionProps:{compare:["longitude","latitude","zoom","bearing","pitch","position"],required:["longitude","latitude","zoom"]}})}),(0,n.Z)(this,"dragMode","pan")}setProps(t){t.position=t.position||[0,0,0];const e=this.props;super.setProps(t);(!e||e.height!==t.height)&&this.updateViewport(new this.ControllerState({makeViewport:this.makeViewport,...t,...this.state}))}}},7557:(t,e,i)=>{i.d(e,{G:()=>c,Z:()=>d});var n=i(4572),o=i(4034),s=i(8082),r=i(6442),a=i(5126),l=i(6497);class c extends r.Z{constructor(t){const{width:e,height:i,rotationX:o=0,rotationOrbit:s=0,target:r=[0,0,0],zoom:a=0,minRotationX:l=-90,maxRotationX:c=90,minZoom:d=-1/0,maxZoom:u=1/0,startPanPosition:h,startRotatePos:p,startRotationX:g,startRotationOrbit:f,startZoomPosition:m,startZoom:v}=t;super({width:e,height:i,rotationX:o,rotationOrbit:s,target:r,zoom:a,minRotationX:l,maxRotationX:c,minZoom:d,maxZoom:u},{startPanPosition:h,startRotatePos:p,startRotationX:g,startRotationOrbit:f,startZoomPosition:m,startZoom:v}),(0,n.Z)(this,"makeViewport",void 0),this.makeViewport=t.makeViewport}panStart({pos:t}){return this._getUpdatedState({startPanPosition:this._unproject(t)})}pan({pos:t,startPosition:e}){const i=this.getState().startPanPosition||e;if(!i)return this;const n=this.makeViewport(this.getViewportProps()).panByPosition(i,t);return this._getUpdatedState(n)}panEnd(){return this._getUpdatedState({startPanPosition:null})}rotateStart({pos:t}){return this._getUpdatedState({startRotatePos:t,startRotationX:this.getViewportProps().rotationX,startRotationOrbit:this.getViewportProps().rotationOrbit})}rotate({pos:t,deltaAngleX:e=0,deltaAngleY:i=0}){const{startRotatePos:n,startRotationX:o,startRotationOrbit:s}=this.getState(),{width:r,height:a}=this.getViewportProps();if(!n||void 0===o||void 0===s)return this;let l;if(t){let e=(t[0]-n[0])/r;(o<-90||o>90)&&(e*=-1),l={rotationX:o+180*((t[1]-n[1])/a),rotationOrbit:s+180*e}}else l={rotationX:o+i,rotationOrbit:s+e};return this._getUpdatedState(l)}rotateEnd(){return this._getUpdatedState({startRotationX:null,startRotationOrbit:null})}shortestPathFrom(t){const e=t.getViewportProps(),i={...this.getViewportProps()},{rotationOrbit:n}=i;return Math.abs(n-e.rotationOrbit)>180&&(i.rotationOrbit=n<0?n+360:n-360),i}zoomStart({pos:t}){return this._getUpdatedState({startZoomPosition:this._unproject(t),startZoom:this.getViewportProps().zoom})}zoom({pos:t,startPos:e,scale:i}){let{startZoom:n,startZoomPosition:o}=this.getState();if(o||(n=this.getViewportProps().zoom,o=this._unproject(e)||this._unproject(t)),!o)return this;const s=this._calculateNewZoom({scale:i,startZoom:n}),r=this.makeViewport({...this.getViewportProps(),zoom:s});return this._getUpdatedState({zoom:s,...r.panByPosition(o,t)})}zoomEnd(){return this._getUpdatedState({startZoomPosition:null,startZoom:null})}zoomIn(t=2){return this._getUpdatedState({zoom:this._calculateNewZoom({scale:t})})}zoomOut(t=2){return this._getUpdatedState({zoom:this._calculateNewZoom({scale:1/t})})}moveLeft(t=50){return this._panFromCenter([-t,0])}moveRight(t=50){return this._panFromCenter([t,0])}moveUp(t=50){return this._panFromCenter([0,-t])}moveDown(t=50){return this._panFromCenter([0,t])}rotateLeft(t=15){return this._getUpdatedState({rotationOrbit:this.getViewportProps().rotationOrbit-t})}rotateRight(t=15){return this._getUpdatedState({rotationOrbit:this.getViewportProps().rotationOrbit+t})}rotateUp(t=10){return this._getUpdatedState({rotationX:this.getViewportProps().rotationX-t})}rotateDown(t=10){return this._getUpdatedState({rotationX:this.getViewportProps().rotationX+t})}_unproject(t){const e=this.makeViewport(this.getViewportProps());return t&&e.unproject(t)}_calculateNewZoom({scale:t,startZoom:e}){const{maxZoom:i,minZoom:n}=this.getViewportProps();void 0===e&&(e=this.getViewportProps().zoom);const s=e+Math.log2(t);return(0,o.uZ)(s,n,i)}_panFromCenter(t){const{width:e,height:i,target:n}=this.getViewportProps();return this.pan({startPosition:n,pos:[e/2+t[0],i/2+t[1]]})}_getUpdatedState(t){return new this.constructor({makeViewport:this.makeViewport,...this.getViewportProps(),...this.getState(),...t})}applyConstraints(t){const{maxZoom:e,minZoom:i,zoom:n,maxRotationX:s,minRotationX:r,rotationOrbit:l}=t;return t.zoom=Array.isArray(n)?[(0,o.uZ)(n[0],i,e),(0,o.uZ)(n[1],i,e)]:(0,o.uZ)(n,i,e),t.rotationX=(0,o.uZ)(t.rotationX,r,s),(l<-180||l>180)&&(t.rotationOrbit=(0,a.wQ)(l+180,360)-180),t}}class d extends s.Z{constructor(...t){super(...t),(0,n.Z)(this,"ControllerState",c),(0,n.Z)(this,"transition",{transitionDuration:300,transitionInterpolator:new l.Z({transitionProps:{compare:["target","zoom","rotationX","rotationOrbit"],required:["target","zoom"]}})})}}},2577:(t,e,i)=>{i.d(e,{Z:()=>c});var n=i(4572),o=i(4034),s=i(8082),r=i(7557),a=i(6497);class l extends r.G{constructor(t){super(t),(0,n.Z)(this,"zoomAxis",void 0),this.zoomAxis=t.zoomAxis||"all"}_calculateNewZoom({scale:t,startZoom:e}){const{maxZoom:i,minZoom:n}=this.getViewportProps();void 0===e&&(e=this.getViewportProps().zoom);let s=Math.log2(t);if(Array.isArray(e)){let[t,r]=e;switch(this.zoomAxis){case"X":t=(0,o.uZ)(t+s,n,i);break;case"Y":r=(0,o.uZ)(r+s,n,i);break;default:let e=Math.min(t+s,r+s);e<n&&(s+=n-e),e=Math.max(t+s,r+s),e>i&&(s+=i-e),t+=s,r+=s}return[t,r]}return(0,o.uZ)(e+s,n,i)}}class c extends s.Z{constructor(...t){super(...t),(0,n.Z)(this,"ControllerState",l),(0,n.Z)(this,"transition",{transitionDuration:300,transitionInterpolator:new a.Z(["target","zoom"])}),(0,n.Z)(this,"dragMode","pan")}_onPanRotate(){return!1}}},600:(t,e,i)=>{i.d(e,{Z:()=>c,r:()=>r});var n=i(4572),o=i(3630);const s=()=>{},r={BREAK:1,SNAP_TO_END:2,IGNORE:3},a=t=>t,l=r.BREAK;class c{constructor(t){(0,n.Z)(this,"getControllerState",void 0),(0,n.Z)(this,"props",void 0),(0,n.Z)(this,"propsInTransition",void 0),(0,n.Z)(this,"transition",void 0),(0,n.Z)(this,"onViewStateChange",void 0),(0,n.Z)(this,"onStateChange",void 0),(0,n.Z)(this,"_onTransitionUpdate",(t=>{const{time:e,settings:{interpolator:i,startProps:n,endProps:o,duration:s,easing:r}}=t,a=r(e/s),l=i.interpolateProps(n,o,a);this.propsInTransition=this.getControllerState({...this.props,...l}).getViewportProps(),this.onViewStateChange({viewState:this.propsInTransition,oldViewState:this.props})})),this.getControllerState=t.getControllerState,this.propsInTransition=null,this.transition=new o.Z(t.timeline),this.onViewStateChange=t.onViewStateChange||s,this.onStateChange=t.onStateChange||s}finalize(){this.transition.cancel()}getViewportInTransition(){return this.propsInTransition}processViewStateChange(t){let e=!1;const i=this.props;if(this.props=t,!i||this._shouldIgnoreViewportChange(i,t))return!1;if(this._isTransitionEnabled(t)){let n=i;if(this.transition.inProgress){const{interruption:t,endProps:e}=this.transition.settings;n={...i,...t===r.SNAP_TO_END?e:this.propsInTransition||i}}this._triggerTransition(n,t),e=!0}else this.transition.cancel();return e}updateTransition(){this.transition.update()}_isTransitionEnabled(t){const{transitionDuration:e,transitionInterpolator:i}=t;return(e>0||"auto"===e)&&Boolean(i)}_isUpdateDueToCurrentTransition(t){return!(!this.transition.inProgress||!this.propsInTransition)&&this.transition.settings.interpolator.arePropsEqual(t,this.propsInTransition)}_shouldIgnoreViewportChange(t,e){return this.transition.inProgress?this.transition.settings.interruption===r.IGNORE||this._isUpdateDueToCurrentTransition(e):!this._isTransitionEnabled(e)||e.transitionInterpolator.arePropsEqual(t,e)}_triggerTransition(t,e){const i=this.getControllerState(t),n=this.getControllerState(e).shortestPathFrom(i),o=e.transitionInterpolator,s=o.getDuration?o.getDuration(t,e):e.transitionDuration;if(0===s)return;const r=o.initializeProps(t,n);this.propsInTransition={};const c={duration:s,easing:e.transitionEasing||a,interpolator:o,interruption:e.transitionInterruption||l,startProps:r.start,endProps:r.end,onStart:e.onTransitionStart,onUpdate:this._onTransitionUpdate,onInterrupt:this._onTransitionEnd(e.onTransitionInterrupt),onEnd:this._onTransitionEnd(e.onTransitionEnd)};this.transition.start(c),this.onStateChange({inTransition:!0}),this.updateTransition()}_onTransitionEnd(t){return e=>{this.propsInTransition=null,this.onStateChange({inTransition:!1,isZooming:!1,isPanning:!1,isRotating:!1}),null==t||t(e)}}}},6442:(t,e,i)=>{i.d(e,{Z:()=>o});var n=i(4572);class o{constructor(t,e){(0,n.Z)(this,"_viewportProps",void 0),(0,n.Z)(this,"_state",void 0),this._viewportProps=this.applyConstraints(t),this._state=e}getViewportProps(){return this._viewportProps}getState(){return this._state}}},3803:(t,e,i)=>{i.d(e,{Z:()=>r,z:()=>s});var n=i(744);let o={};function s(t){o=t}function r(t,e,i,s){n.Z.level>0&&o[t]&&o[t].call(null,e,i,s)}},5361:(t,e,i)=>{i.d(e,{M:()=>a});var n=i(4572);const o=[255,255,255],s=1;let r=0;class a{constructor(t={}){(0,n.Z)(this,"id",void 0),(0,n.Z)(this,"color",void 0),(0,n.Z)(this,"intensity",void 0),(0,n.Z)(this,"type","ambient");const{color:e=o}=t,{intensity:i=s}=t;this.id=t.id||"ambient-".concat(r++),this.color=e,this.intensity=i}}},9152:(t,e,i)=>{i.d(e,{O:()=>c});var n=i(4572),o=i(3855);const s=[255,255,255],r=1,a=[0,0,-1];let l=0;class c{constructor(t={}){(0,n.Z)(this,"id",void 0),(0,n.Z)(this,"color",void 0),(0,n.Z)(this,"intensity",void 0),(0,n.Z)(this,"type","directional"),(0,n.Z)(this,"direction",void 0),(0,n.Z)(this,"shadow",void 0);const{color:e=s}=t,{intensity:i=r}=t,{direction:c=a}=t,{_shadow:d=!1}=t;this.id=t.id||"directional-".concat(l++),this.color=e,this.intensity=i,this.type="directional",this.direction=new o.Z(c).normalize().toArray(),this.shadow=d}getProjectedLight(t){return this}}},9601:(t,e,i)=>{i.d(e,{Z:()=>_});var n=i(4572),o=i(1731),s=i(4912),r=i(5361),a=i(9152),l=i(5451),c=i(3855),d=i(3182),u=i(9830),h=i(3849),p=i(9450);class g extends d.Z{constructor(t,e){super(t,e),(0,n.Z)(this,"shadowMap",void 0),(0,n.Z)(this,"depthBuffer",void 0),(0,n.Z)(this,"fbo",void 0),this.shadowMap=new s.Z(t,{width:1,height:1,parameters:{10241:9729,10240:9729,10242:33071,10243:33071}}),this.depthBuffer=new u.Z(t,{format:33189,width:1,height:1}),this.fbo=new h.Z(t,{id:"shadowmap",width:1,height:1,attachments:{36064:this.shadowMap,36096:this.depthBuffer}})}render(t){const e=this.fbo;(0,p.s8)(this.gl,{depthRange:[0,1],depthTest:!0,blend:!1,clearColor:[1,1,1,1]},(()=>{const i=t.viewports[0],n=(0,p.w)(this.gl),o=i.width*n,s=i.height*n;o===e.width&&s===e.height||e.resize({width:o,height:s}),super.render({...t,target:e,pass:"shadow"})}))}shouldDrawLayer(t){return!1!==t.props.shadowEnabled}getModuleParameters(){return{drawToShadowMap:!0}}delete(){this.fbo&&(this.fbo.delete(),this.fbo=null),this.shadowMap&&(this.shadowMap.delete(),this.shadowMap=null),this.depthBuffer&&(this.depthBuffer.delete(),this.depthBuffer=null)}}var f=i(3115);const m={color:[255,255,255],intensity:1},v=[{color:[255,255,255],intensity:1,direction:[-1,3,-1]},{color:[255,255,255],intensity:.9,direction:[1,-8,-2.5]}],y=[0,0,0,200/255];class _{constructor(t={}){(0,n.Z)(this,"id","lighting-effect"),(0,n.Z)(this,"props",null),(0,n.Z)(this,"shadowColor",y),(0,n.Z)(this,"shadow",void 0),(0,n.Z)(this,"ambientLight",null),(0,n.Z)(this,"directionalLights",[]),(0,n.Z)(this,"pointLights",[]),(0,n.Z)(this,"shadowPasses",[]),(0,n.Z)(this,"shadowMaps",[]),(0,n.Z)(this,"dummyShadowMap",null),(0,n.Z)(this,"programManager",void 0),(0,n.Z)(this,"shadowMatrices",void 0);for(const e in t){const i=t[e];switch(i.type){case"ambient":this.ambientLight=i;break;case"directional":this.directionalLights.push(i);break;case"point":this.pointLights.push(i)}}this._applyDefaultLights(),this.shadow=this.directionalLights.some((t=>t.shadow))}preRender(t,{layers:e,layerFilter:i,viewports:n,onViewportActive:r,views:a}){if(this.shadow){this.shadowMatrices=this._calculateMatrices(),0===this.shadowPasses.length&&this._createShadowPasses(t),this.programManager||(this.programManager=o.Z.getDefaultProgramManager(t),f.Z&&this.programManager.addDefaultModule(f.Z)),this.dummyShadowMap||(this.dummyShadowMap=new s.Z(t,{width:1,height:1}));for(let t=0;t<this.shadowPasses.length;t++){this.shadowPasses[t].render({layers:e,layerFilter:i,viewports:n,onViewportActive:r,views:a,moduleParameters:{shadowLightId:t,dummyShadowMap:this.dummyShadowMap,shadowMatrices:this.shadowMatrices}})}}}getModuleParameters(t){const e=this.shadow?{shadowMaps:this.shadowMaps,dummyShadowMap:this.dummyShadowMap,shadowColor:this.shadowColor,shadowMatrices:this.shadowMatrices}:{};return e.lightSources={ambientLight:this.ambientLight,directionalLights:this.directionalLights.map((e=>e.getProjectedLight({layer:t}))),pointLights:this.pointLights.map((e=>e.getProjectedLight({layer:t})))},e}cleanup(){for(const t of this.shadowPasses)t.delete();this.shadowPasses.length=0,this.shadowMaps.length=0,this.dummyShadowMap&&(this.dummyShadowMap.delete(),this.dummyShadowMap=null),this.shadow&&this.programManager&&(this.programManager.removeDefaultModule(f.Z),this.programManager=null)}_calculateMatrices(){const t=[];for(const e of this.directionalLights){const i=(new l.Z).lookAt({eye:new c.Z(e.direction).negate()});t.push(i)}return t}_createShadowPasses(t){for(let e=0;e<this.directionalLights.length;e++){const i=new g(t);this.shadowPasses[e]=i,this.shadowMaps[e]=i.shadowMap}}_applyDefaultLights(){const{ambientLight:t,pointLights:e,directionalLights:i}=this;t||0!==e.length||0!==i.length||(this.ambientLight=new r.M(m),this.directionalLights.push(new a.O(v[0]),new a.O(v[1])))}}},867:(t,e,i)=>{i.r(e),i.d(e,{AmbientLight:()=>s.M,AttributeManager:()=>Z.Z,COORDINATE_SYSTEM:()=>n.Df,CompositeLayer:()=>z.Z,Controller:()=>Q.Z,Deck:()=>L.Z,DeckRenderer:()=>I.Z,DirectionalLight:()=>r.O,FirstPersonController:()=>st,FirstPersonView:()=>rt,FirstPersonViewport:()=>W,FlyToInterpolator:()=>xt,Layer:()=>E.Z,LayerExtension:()=>ft.Z,LayerManager:()=>A.Z,LightingEffect:()=>o.Z,LinearInterpolator:()=>et.Z,MapController:()=>dt.Z,MapView:()=>J.Z,OPERATION:()=>n.k8,OrbitController:()=>at.Z,OrbitView:()=>lt,OrbitViewport:()=>U,OrthographicController:()=>gt.Z,OrthographicView:()=>ct.Z,OrthographicViewport:()=>V.Z,PointLight:()=>g,PostProcessEffect:()=>C,TRANSITION_EVENTS:()=>mt.r,Tesselator:()=>St.Z,TransitionInterpolator:()=>vt.Z,UNIT:()=>n.iI,View:()=>Y.Z,Viewport:()=>O.Z,WebMercatorViewport:()=>R.Z,_CameraLight:()=>m,_GlobeController:()=>ht,_GlobeView:()=>pt,_GlobeViewport:()=>D.Z,_LayersPass:()=>T.Z,_SunLight:()=>y,_compareProps:()=>At.tg,_count:()=>Mt.Q,_fillArray:()=>Ct.k,_flatten:()=>Ct.x,_memoize:()=>Tt.Z,_mergeShaders:()=>Lt.l,assert:()=>Pt.Z,createIterable:()=>bt.jB,fp64LowPart:()=>tt.Ks,gouraudLighting:()=>X.N,log:()=>wt.Z,phongLighting:()=>X.s,picking:()=>G.Z,project:()=>H.Z,project32:()=>q.Z,shadow:()=>K.Z});var n=i(4088),o=i(9601),s=i(5361),r=i(9152),a=i(4572),l=i(8547);const c=[255,255,255],d=1,u=[0,0,1],h=[0,0,1];let p=0;class g{constructor(t={}){(0,a.Z)(this,"id",void 0),(0,a.Z)(this,"color",void 0),(0,a.Z)(this,"intensity",void 0),(0,a.Z)(this,"type","point"),(0,a.Z)(this,"position",void 0),(0,a.Z)(this,"attenuation",void 0),(0,a.Z)(this,"projectedLight",void 0);const{color:e=c}=t,{intensity:i=d}=t,{position:n=h}=t;this.id=t.id||"point-".concat(p++),this.color=e,this.intensity=i,this.type="point",this.position=n,this.attenuation=function(t){if(t.attenuation)return t.attenuation;if("intensity"in t)return[0,0,t.intensity||0];return u}(t),this.projectedLight={...this}}getProjectedLight({layer:t}){const{projectedLight:e}=this,i=t.context.viewport,{coordinateSystem:o,coordinateOrigin:s}=t.props,r=(0,l.D)(this.position,{viewport:i,coordinateSystem:o,coordinateOrigin:s,fromCoordinateSystem:i.isGeospatial?n.Df.LNGLAT:n.Df.CARTESIAN,fromCoordinateOrigin:[0,0,0]});return e.color=this.color,e.intensity=this.intensity,e.position=r,e}}var f=i(8771);class m extends g{getProjectedLight({layer:t}){const{projectedLight:e}=this,i=t.context.viewport,{coordinateSystem:n,coordinateOrigin:o,modelMatrix:s}=t.props,{project_uCameraPosition:r}=(0,f.C)({viewport:i,modelMatrix:s,coordinateSystem:n,coordinateOrigin:o});return e.color=this.color,e.intensity=this.intensity,e.position=r,e}}var v=i(7179);class y extends r.O{constructor(t){super(t),(0,a.Z)(this,"timestamp",void 0),this.timestamp=t.timestamp}getProjectedLight({layer:t}){const{viewport:e}=t.context;if(e.resolution&&e.resolution>0){const[t,e,i]=(0,v.o)(this.timestamp,0,0);this.direction=[t,-i,e]}else{const{latitude:t,longitude:i}=e;this.direction=(0,v.o)(this.timestamp,t,i)}return this}}var _=i(6234),x=i(9450),w=i(6047),P=i(830);class b extends P.Z{constructor(t,e){super(t,e),(0,a.Z)(this,"model",void 0);const{module:i,fs:n,id:o}=e;this.model=new _.Z(t,{id:o,fs:n,modules:[i]})}render(t){const e=this.gl;(0,x.dR)(e,{viewport:[0,0,e.drawingBufferWidth,e.drawingBufferHeight]}),(0,x.s8)(e,{framebuffer:t.outputBuffer,clearColor:[0,0,0,0]},(()=>this._renderPass(e,t)))}delete(){this.model.delete(),this.model=null}_renderPass(t,e){const{inputBuffer:i}=e;(0,w.Z)(t,{color:!0}),this.model.draw({moduleSettings:this.props.moduleSettings,uniforms:{texture:i,texSize:[i.width,i.height]},parameters:{depthWrite:!1,depthTest:!1}})}}var S=i(6119);class C{constructor(t,e={}){(0,a.Z)(this,"id",void 0),(0,a.Z)(this,"props",void 0),(0,a.Z)(this,"module",void 0),(0,a.Z)(this,"passes",void 0),this.id="".concat(t.name,"-pass"),this.props=e,(0,S.v)(t),this.module=t}preRender(){}postRender(t,e){const i=this.passes||function(t,e,i,n){if(!e.passes){const o=M(e);return[new b(t,{id:i,module:e,fs:o,moduleSettings:n})]}return e.passes.map(((o,s)=>{const r=M(e,o),a="".concat(i,"-").concat(s);return new b(t,{id:a,module:e,fs:r,moduleSettings:n})}))}(t,this.module,this.id,this.props);this.passes=i;const{target:n}=e;let o=e.inputBuffer,s=e.swapBuffer;for(let t=0;t<this.passes.length;t++){n&&t===this.passes.length-1&&(s=n),this.passes[t].render({inputBuffer:o,outputBuffer:s});const e=s;s=o,o=e}return o}cleanup(){if(this.passes){for(const t of this.passes)t.delete();this.passes=void 0}}}function M(t,e=t){if(e.filter){return(t=>"uniform sampler2D texture;\nuniform vec2 texSize;\n\nvarying vec2 position;\nvarying vec2 coordinate;\nvarying vec2 uv;\n\nvoid main() {\n  vec2 texCoord = coordinate;\n\n  gl_FragColor = texture2D(texture, texCoord);\n  gl_FragColor = ".concat(t,"(gl_FragColor, texSize, texCoord);\n}\n"))("string"==typeof e.filter?e.filter:"".concat(t.name,"_filterColor"))}if(e.sampler){return(t=>"uniform sampler2D texture;\nuniform vec2 texSize;\n\nvarying vec2 position;\nvarying vec2 coordinate;\nvarying vec2 uv;\n\nvoid main() {\n  vec2 texCoord = coordinate;\n\n  gl_FragColor = ".concat(t,"(texture, texSize, texCoord);\n}\n"))("string"==typeof e.sampler?e.sampler:"".concat(t.name,"_sampleColor"))}return null}var T=i(3182),L=i(8289),A=i(5841),Z=i(3518),E=i(4185),z=i(8918),I=i(9877),O=i(9225),R=i(6935),D=i(3131),F=i(5451),k=i(7013);const j=Math.PI/180;function N({height:t,focalDistance:e,orbitAxis:i,rotationX:n,rotationOrbit:o,zoom:s}){const r="Z"===i?[0,0,1]:[0,1,0],a="Z"===i?[0,-e,0]:[0,0,e],l=(new F.Z).lookAt({eye:a,up:r});l.rotateX(n*j),"Z"===i?l.rotateZ(o*j):l.rotateY(o*j);const c=Math.pow(2,s)/t;return l.scale(c),l}class U extends O.Z{constructor(t){const{height:e,projectionMatrix:i,fovy:n=50,orbitAxis:o="Z",target:s=[0,0,0],rotationX:r=0,rotationOrbit:l=0,zoom:c=0}=t,d=i?i[5]/2:(0,k.sj)(n);super({...t,longitude:void 0,viewMatrix:N({height:e||1,focalDistance:d,orbitAxis:o,rotationX:r,rotationOrbit:l,zoom:c}),fovy:n,focalDistance:d,position:s,zoom:c}),(0,a.Z)(this,"projectedCenter",void 0),this.projectedCenter=this.project(this.center)}unproject(t,{topLeft:e=!0}={}){const[i,n,o=this.projectedCenter[2]]=t,s=e?n:this.height-n,[r,a,l]=(0,k.CT)([i,s,o],this.pixelUnprojectionMatrix);return[r,a,l]}panByPosition(t,e){const i=this.project(t),n=[this.width/2+i[0]-e[0],this.height/2+i[1]-e[1],this.projectedCenter[2]];return{target:this.unproject(n)}}}var V=i(9573),B=i(7858);class W extends O.Z{constructor(t){const{longitude:e,latitude:i,modelMatrix:n,bearing:o=0,pitch:s=0,up:r=[0,0,1]}=t,l=new B.Z({bearing:o,pitch:-90===s?1e-4:90+s}).toVector3().normalize(),c=n?new F.Z(n).transformAsVector(l):l,d=Number.isFinite(i)?(0,k.Bf)({latitude:i}):0,u=Math.pow(2,d),h=(new F.Z).lookAt({eye:[0,0,0],center:c,up:r}).scale(u);super({...t,zoom:d,viewMatrix:h}),(0,a.Z)(this,"longitude",void 0),(0,a.Z)(this,"latitude",void 0),this.latitude=i,this.longitude=e}}var G=i(3117),H=i(3751),q=i(3844),X=i(7287),K=i(3115),Y=i(4897),J=i(4009),Q=i(8082),$=i(6442),tt=i(5126),et=i(6497),it=i(3855),nt=i(4034);class ot extends $.Z{constructor(t){const{width:e,height:i,position:n=[0,0,0],bearing:o=0,pitch:s=0,longitude:r=null,latitude:a=null,maxPitch:l=90,minPitch:c=-90,startRotatePos:d,startBearing:u,startPitch:h,startZoomPosition:p}=t;super({width:e,height:i,position:n,bearing:o,pitch:s,longitude:r,latitude:a,maxPitch:l,minPitch:c},{startRotatePos:d,startBearing:u,startPitch:h,startZoomPosition:p})}panStart(){return this}pan(){return this}panEnd(){return this}rotateStart({pos:t}){return this._getUpdatedState({startRotatePos:t,startBearing:this.getViewportProps().bearing,startPitch:this.getViewportProps().pitch})}rotate({pos:t,deltaAngleX:e=0,deltaAngleY:i=0}){const{startRotatePos:n,startBearing:o,startPitch:s}=this.getState(),{width:r,height:a}=this.getViewportProps();if(!n||void 0===o||void 0===s)return this;let l;if(t){l={bearing:o-180*((t[0]-n[0])/r),pitch:s-90*((t[1]-n[1])/a)}}else l={bearing:o-e,pitch:s-i};return this._getUpdatedState(l)}rotateEnd(){return this._getUpdatedState({startRotatePos:null,startBearing:null,startPitch:null})}zoomStart(){return this._getUpdatedState({startZoomPosition:this.getViewportProps().position})}zoom({scale:t}){let{startZoomPosition:e}=this.getState();e||(e=this.getViewportProps().position);const i=this.getDirection();return this._move(i,20*Math.log2(t),e)}zoomEnd(){return this._getUpdatedState({startZoomPosition:null})}moveLeft(t=20){const e=this.getDirection(!0);return this._move(e.rotateZ({radians:Math.PI/2}),t)}moveRight(t=20){const e=this.getDirection(!0);return this._move(e.rotateZ({radians:-Math.PI/2}),t)}moveUp(t=20){const e=this.getDirection(!0);return this._move(e,t)}moveDown(t=20){const e=this.getDirection(!0);return this._move(e.negate(),t)}rotateLeft(t=15){return this._getUpdatedState({bearing:this.getViewportProps().bearing-t})}rotateRight(t=15){return this._getUpdatedState({bearing:this.getViewportProps().bearing+t})}rotateUp(t=10){return this._getUpdatedState({pitch:this.getViewportProps().pitch+t})}rotateDown(t=10){return this._getUpdatedState({pitch:this.getViewportProps().pitch-t})}zoomIn(t=2){return this.zoom({scale:t})}zoomOut(t=2){return this.zoom({scale:1/t})}shortestPathFrom(t){const e=t.getViewportProps(),i={...this.getViewportProps()},{bearing:n,longitude:o}=i;return Math.abs(n-e.bearing)>180&&(i.bearing=n<0?n+360:n-360),null!==o&&null!==e.longitude&&Math.abs(o-e.longitude)>180&&(i.longitude=o<0?o+360:o-360),i}_move(t,e,i=this.getViewportProps().position){const n=t.scale(e);return this._getUpdatedState({position:new it.Z(i).add(n)})}getDirection(t=!1){return new B.Z({bearing:this.getViewportProps().bearing,pitch:t?90:90+this.getViewportProps().pitch}).toVector3().normalize()}_getUpdatedState(t){return new ot({...this.getViewportProps(),...this.getState(),...t})}applyConstraints(t){const{pitch:e,maxPitch:i,minPitch:n,longitude:o,bearing:s}=t;return t.pitch=(0,nt.uZ)(e,n,i),null!==o&&(o<-180||o>180)&&(t.longitude=(0,tt.wQ)(o+180,360)-180),(s<-180||s>180)&&(t.bearing=(0,tt.wQ)(s+180,360)-180),t}}class st extends Q.Z{constructor(...t){super(...t),(0,a.Z)(this,"ControllerState",ot),(0,a.Z)(this,"transition",{transitionDuration:300,transitionInterpolator:new et.Z(["position","pitch","bearing"])})}}class rt extends Y.Z{get ViewportType(){return W}get ControllerType(){return st}}(0,a.Z)(rt,"displayName","FirstPersonView");var at=i(7557);class lt extends Y.Z{constructor(t={}){super(t),this.props.orbitAxis=t.orbitAxis||"Z"}get ViewportType(){return U}get ControllerType(){return at.Z}}(0,a.Z)(lt,"displayName","OrbitView");var ct=i(743),dt=i(6883);class ut extends dt.U{applyConstraints(t){const{maxZoom:e,minZoom:i,zoom:n}=t;t.zoom=(0,nt.uZ)(n,i,e);const{longitude:o,latitude:s}=t;return(o<-180||o>180)&&(t.longitude=(0,tt.wQ)(o+180,360)-180),t.latitude=(0,nt.uZ)(s,-89,89),t}}class ht extends Q.Z{constructor(...t){super(...t),(0,a.Z)(this,"ControllerState",ut),(0,a.Z)(this,"transition",{transitionDuration:300,transitionInterpolator:new et.Z(["longitude","latitude","zoom"])}),(0,a.Z)(this,"dragMode","pan")}setProps(t){super.setProps(t),this.dragRotate=!1,this.touchRotate=!1}}class pt extends Y.Z{get ViewportType(){return D.Z}get ControllerType(){return ht}}(0,a.Z)(pt,"displayName","GlobeView");var gt=i(2577),ft=i(3693),mt=i(600),vt=i(6507);const yt=["bearing","pitch"],_t={speed:1.2,curve:1.414};class xt extends vt.Z{constructor(t={}){super({compare:["longitude","latitude","zoom","bearing","pitch"],extract:["width","height","longitude","latitude","zoom","bearing","pitch"],required:["width","height","latitude","longitude","zoom"]}),(0,a.Z)(this,"opts",void 0),this.opts={..._t,...t}}interpolateProps(t,e,i){const n=(0,k.if)(t,e,i,this.opts);for(const o of yt)n[o]=(0,nt.t7)(t[o]||0,e[o]||0,i);return n}getDuration(t,e){let{transitionDuration:i}=e;return"auto"===i&&(i=(0,k.up)(t,e,this.opts)),i}}var wt=i(744),Pt=i(5304),bt=i(8550),St=i(8005),Ct=i(1855),Mt=i(5015),Tt=i(8177),Lt=i(7870),At=i(1761)},3518:(t,e,i)=>{i.d(e,{Z:()=>E});var n=i(4572),o=i(4211),s=i(6948),r=i(3478);class a{constructor(t,e){(0,n.Z)(this,"opts",void 0),(0,n.Z)(this,"source",void 0),this.opts=e,this.source=t}get value(){return this.source.value}getValue(){const t=this.source.getBuffer(),e=this.getAccessor();if(t)return[t,e];const{value:i}=this.source,{size:n}=e;let o=i;if(i&&i.length!==n){o=new Float32Array(n);const t=e.elementOffset||0;for(let e=0;e<n;++e)o[e]=i[t+e]}return o}getAccessor(){return{...this.source.getAccessor(),...this.opts}}}var l=i(6610),c=i(5126),d=i(744);function u(t){return t.stride||t.size*t.bytesPerElement}function h(t,e){e.offset&&d.Z.removed("shaderAttribute.offset","vertexOffset, elementOffset")();const i=u(t),n=(void 0!==e.vertexOffset?e.vertexOffset:t.vertexOffset||0)*i+(e.elementOffset||0)*t.bytesPerElement+(t.offset||0);return{...e,offset:n,stride:i}}class p{constructor(t,e,i){(0,n.Z)(this,"gl",void 0),(0,n.Z)(this,"id",void 0),(0,n.Z)(this,"size",void 0),(0,n.Z)(this,"settings",void 0),(0,n.Z)(this,"value",void 0),(0,n.Z)(this,"doublePrecision",void 0),(0,n.Z)(this,"_buffer",void 0),(0,n.Z)(this,"state",void 0),this.gl=t,this.id=e.id||"",this.size=e.size||1;const r=e.logicalType||e.type,a=5130===r;let l,{defaultValue:c}=e;c=Number.isFinite(c)?[c]:c||new Array(this.size).fill(0),l=a?5126:!r&&e.isIndexed?t&&(0,o.U6)(t,s.h.ELEMENT_INDEX_UINT32)?5125:5123:r||5126;let d=function(t){switch(t){case 5126:return Float32Array;case 5130:return Float64Array;case 5123:case 33635:case 32819:case 32820:return Uint16Array;case 5125:return Uint32Array;case 5121:return Uint8ClampedArray;case 5120:return Int8Array;case 5122:return Int16Array;case 5124:return Int32Array;default:throw new Error("Unknown GL type")}}(r||l||5126);this.doublePrecision=a,a&&!1===e.fp64&&(d=Float32Array),this.value=null,this.settings={...e,defaultType:d,defaultValue:c,logicalType:r,type:l,size:this.size,bytesPerElement:d.BYTES_PER_ELEMENT},this.state={...i,externalBuffer:null,bufferAccessor:this.settings,allocatedValue:null,numInstances:0,bounds:null,constant:!1},this._buffer=null}get isConstant(){return this.state.constant}get buffer(){if(!this._buffer){const{isIndexed:t,type:e}=this.settings;this._buffer=new r.Z(this.gl,{id:this.id,target:t?34963:34962,accessor:{type:e}})}return this._buffer}get byteOffset(){const t=this.getAccessor();return t.vertexOffset?t.vertexOffset*u(t):0}get numInstances(){return this.state.numInstances}set numInstances(t){this.state.numInstances=t}delete(){this._buffer&&(this._buffer.delete(),this._buffer=null),l.Z.release(this.state.allocatedValue)}getShaderAttributes(t,e){if(this.doublePrecision){const i={},n=this.value instanceof Float64Array,o=function(t,e){const i=h(t,e);return{high:i,low:{...i,offset:i.offset+4*t.size}}}(this.getAccessor(),e||{});return i[t]=new a(this,o.high),i["".concat(t,"64Low")]=n?new a(this,o.low):new Float32Array(this.size),i}if(e){const i=h(this.getAccessor(),e);return{[t]:new a(this,i)}}return{[t]:this}}getBuffer(){return this.state.constant?null:this.state.externalBuffer||this._buffer}getValue(){return this.state.constant?this.value:[this.getBuffer(),this.getAccessor()]}getAccessor(){return this.state.bufferAccessor}getBounds(){if(this.state.bounds)return this.state.bounds;let t=null;if(this.state.constant&&this.value){const e=Array.from(this.value);t=[e,e]}else{const{value:e,numInstances:i,size:n}=this,o=i*n;if(e&&o&&e.length>=o){const i=new Array(n).fill(1/0),s=new Array(n).fill(-1/0);for(let t=0;t<o;)for(let o=0;o<n;o++){const n=e[t++];n<i[o]&&(i[o]=n),n>s[o]&&(s[o]=n)}t=[i,s]}}return this.state.bounds=t,t}setData(t){const{state:e}=this;let i;i=ArrayBuffer.isView(t)?{value:t}:t instanceof r.Z?{buffer:t}:t;const n={...this.settings,...i};if(e.bufferAccessor=n,e.bounds=null,i.constant){let t=i.value;t=this._normalizeValue(t,[],0),this.settings.normalized&&(t=this.normalizeConstant(t));if(!(!e.constant||!this._areValuesEqual(t,this.value)))return!1;e.externalBuffer=null,e.constant=!0,this.value=t}else if(i.buffer){const t=i.buffer;e.externalBuffer=t,e.constant=!1,this.value=i.value||null;const o=i.value instanceof Float64Array;n.type=i.type||t.accessor.type,n.bytesPerElement=t.accessor.BYTES_PER_ELEMENT*(o?2:1),n.stride=u(n)}else if(i.value){this._checkExternalBuffer(i);let t=i.value;e.externalBuffer=null,e.constant=!1,this.value=t,n.bytesPerElement=t.BYTES_PER_ELEMENT,n.stride=u(n);const{buffer:o,byteOffset:s}=this;this.doublePrecision&&t instanceof Float64Array&&(t=(0,c.TK)(t,n));const r=t.byteLength+s+2*n.stride;o.byteLength<r&&o.reallocate(r),o.setAccessor(null),o.subData({data:t,offset:s}),n.type=i.type||o.accessor.type}return!0}updateSubBuffer(t={}){this.state.bounds=null;const e=this.value,{startOffset:i=0,endOffset:n}=t;this.buffer.subData({data:this.doublePrecision&&e instanceof Float64Array?(0,c.TK)(e,{size:this.size,startIndex:i,endIndex:n}):e.subarray(i,n),offset:i*e.BYTES_PER_ELEMENT+this.byteOffset})}allocate(t,e=!1){const{state:i}=this,n=i.allocatedValue,o=l.Z.allocate(n,t+1,{size:this.size,type:this.settings.defaultType,copy:e});this.value=o;const{buffer:s,byteOffset:r}=this;return s.byteLength<o.byteLength+r&&(s.reallocate(o.byteLength+r),e&&n&&s.subData({data:n instanceof Float64Array?(0,c.TK)(n,this):n,offset:r})),i.allocatedValue=o,i.constant=!1,i.externalBuffer=null,i.bufferAccessor=this.settings,!0}_checkExternalBuffer(t){const{value:e}=t;if(!ArrayBuffer.isView(e))throw new Error("Attribute ".concat(this.id," value is not TypedArray"));const i=this.settings.defaultType;let n=!1;if(this.doublePrecision&&(n=e.BYTES_PER_ELEMENT<4),n)throw new Error("Attribute ".concat(this.id," does not support ").concat(e.constructor.name));e instanceof i||!this.settings.normalized||"normalized"in t||d.Z.warn("Attribute ".concat(this.id," is normalized"))()}normalizeConstant(t){switch(this.settings.type){case 5120:return new Float32Array(t).map((t=>(t+128)/255*2-1));case 5122:return new Float32Array(t).map((t=>(t+32768)/65535*2-1));case 5121:return new Float32Array(t).map((t=>t/255));case 5123:return new Float32Array(t).map((t=>t/65535));default:return t}}_normalizeValue(t,e,i){const{defaultValue:n,size:o}=this.settings;if(Number.isFinite(t))return e[i]=t,e;if(!t)return e[i]=n[0],e;switch(o){case 4:e[i+3]=Number.isFinite(t[3])?t[3]:n[3];case 3:e[i+2]=Number.isFinite(t[2])?t[2]:n[2];case 2:e[i+1]=Number.isFinite(t[1])?t[1]:n[1];case 1:e[i+0]=Number.isFinite(t[0])?t[0]:n[0];break;default:let s=o;for(;--s>=0;)e[i+s]=Number.isFinite(t[s])?t[s]:n[s]}return e}_areValuesEqual(t,e){if(!t||!e)return!1;const{size:i}=this;for(let n=0;n<i;n++)if(t[n]!==e[n])return!1;return!0}}var g=i(5304),f=i(8550),m=i(1855);const v=[],y=[[0,1/0]];var _=i(9006);class x extends p{constructor(t,e){super(t,e,{startIndices:null,lastExternalBuffer:null,binaryValue:null,binaryAccessor:null,needsUpdate:!0,needsRedraw:!1,updateRanges:y}),(0,n.Z)(this,"constant",!1),this.settings.update=e.update||(e.accessor?this._autoUpdater:void 0),Object.seal(this.settings),Object.seal(this.state),this._validateAttributeUpdaters()}get startIndices(){return this.state.startIndices}set startIndices(t){this.state.startIndices=t}needsUpdate(){return this.state.needsUpdate}needsRedraw({clearChangedFlags:t=!1}={}){const e=this.state.needsRedraw;return this.state.needsRedraw=e&&!t,e}getUpdateTriggers(){const{accessor:t}=this.settings;return[this.id].concat("function"!=typeof t&&t||[])}supportsTransition(){return Boolean(this.settings.transition)}getTransitionSetting(t){if(!t||!this.supportsTransition())return null;const{accessor:e}=this.settings,i=this.settings.transition,n=Array.isArray(e)?t[e.find((e=>t[e]))]:t[e];return(0,_.M0)(n,i)}setNeedsUpdate(t=this.id,e){if(this.state.needsUpdate=this.state.needsUpdate||t,this.setNeedsRedraw(t),e){const{startRow:t=0,endRow:i=1/0}=e;this.state.updateRanges=function(t,e){if(t===y)return t;if(e[0]<0&&(e[0]=0),e[0]>=e[1])return t;const i=[],n=t.length;let o=0;for(let s=0;s<n;s++){const n=t[s];n[1]<e[0]?(i.push(n),o=s+1):n[0]>e[1]?i.push(n):e=[Math.min(n[0],e[0]),Math.max(n[1],e[1])]}return i.splice(o,0,e),i}(this.state.updateRanges,[t,i])}else this.state.updateRanges=y}clearNeedsUpdate(){this.state.needsUpdate=!1,this.state.updateRanges=v}setNeedsRedraw(t=this.id){this.state.needsRedraw=this.state.needsRedraw||t}allocate(t){const{state:e,settings:i}=this;return!i.noAlloc&&(!!i.update&&(super.allocate(t,e.updateRanges!==y),!0))}updateBuffer({numInstances:t,data:e,props:i,context:n}){if(!this.needsUpdate())return!1;const{state:{updateRanges:o},settings:{update:s,noAlloc:r}}=this;let a=!0;if(s){for(const[r,a]of o)s.call(n,this,{data:e,startRow:r,endRow:a,props:i,numInstances:t});if(this.value)if(this.constant||this.buffer.byteLength<this.value.byteLength+this.byteOffset)this.setData({value:this.value,constant:this.constant}),this.constant=!1;else for(const[e,i]of o){const n=Number.isFinite(e)?this.getVertexOffset(e):0,o=Number.isFinite(i)?this.getVertexOffset(i):r||!Number.isFinite(t)?this.value.length:t*this.size;super.updateSubBuffer({startOffset:n,endOffset:o})}else;this._checkAttributeArray()}else a=!1;return this.clearNeedsUpdate(),this.setNeedsRedraw(),a}setConstantValue(t){if(void 0===t||"function"==typeof t)return!1;return this.setData({constant:!0,value:t})&&this.setNeedsRedraw(),this.clearNeedsUpdate(),!0}setExternalBuffer(t){const{state:e}=this;return t?(this.clearNeedsUpdate(),e.lastExternalBuffer===t||(e.lastExternalBuffer=t,this.setNeedsRedraw(),this.setData(t)),!0):(e.lastExternalBuffer=null,!1)}setBinaryValue(t,e=null){const{state:i,settings:n}=this;if(!t)return i.binaryValue=null,i.binaryAccessor=null,!1;if(n.noAlloc)return!1;if(i.binaryValue===t)return this.clearNeedsUpdate(),!0;i.binaryValue=t,this.setNeedsRedraw();if(n.transform||e!==this.startIndices){ArrayBuffer.isView(t)&&(t={value:t});const o=t;(0,g.Z)(ArrayBuffer.isView(o.value),"invalid ".concat(n.accessor));const s=Boolean(o.size)&&o.size!==this.size;return i.binaryAccessor=(0,f.jr)(o.value,{size:o.size||this.size,stride:o.stride,offset:o.offset,startIndices:e,nested:s}),!1}return this.clearNeedsUpdate(),this.setData(t),!0}getVertexOffset(t){const{startIndices:e}=this;return(e?t<e.length?e[t]:this.numInstances:t)*this.size}getShaderAttributes(){const t=this.settings.shaderAttributes||{[this.id]:null},e={};for(const i in t)Object.assign(e,super.getShaderAttributes(i,t[i]));return e}_autoUpdater(t,{data:e,startRow:i,endRow:n,props:o,numInstances:s}){if(t.constant)return;const{settings:r,state:a,value:l,size:c,startIndices:d}=t,{accessor:u,transform:h}=r,p=a.binaryAccessor||("function"==typeof u?u:o[u]);(0,g.Z)("function"==typeof p,'accessor "'.concat(u,'" is not a function'));let v=t.getVertexOffset(i);const{iterable:y,objectInfo:_}=(0,f.jB)(e,i,n);for(const e of y){_.index++;let i=p(e,_);if(h&&(i=h.call(this,i)),d){const e=(_.index<d.length-1?d[_.index+1]:s)-d[_.index];if(i&&Array.isArray(i[0])){let e=v;for(const n of i)t._normalizeValue(n,l,e),e+=c}else i&&i.length>c?l.set(i,v):(t._normalizeValue(i,_.target,0),(0,m.k)({target:l,source:_.target,start:v,count:e}));v+=e*c}else t._normalizeValue(i,l,v),v+=c}}_validateAttributeUpdaters(){const{settings:t}=this;if(!(t.noAlloc||"function"==typeof t.update))throw new Error("Attribute ".concat(this.id," missing update or accessor"))}_checkAttributeArray(){const{value:t}=this,e=Math.min(4,this.size);if(t&&t.length>=e){let i=!0;switch(e){case 4:i=i&&Number.isFinite(t[3]);case 3:i=i&&Number.isFinite(t[2]);case 2:i=i&&Number.isFinite(t[1]);case 1:i=i&&Number.isFinite(t[0]);break;default:i=!1}if(!i)throw new Error("Illegal attribute generated for ".concat(this.id))}}}var w=i(3803),P=i(3346),b=i(3630);const S="\n#define SHADER_NAME interpolation-transition-vertex-shader\n\nuniform float time;\nattribute ATTRIBUTE_TYPE aFrom;\nattribute ATTRIBUTE_TYPE aTo;\nvarying ATTRIBUTE_TYPE vCurrent;\n\nvoid main(void) {\n  vCurrent = mix(aFrom, aTo, time);\n  gl_Position = vec4(0.0);\n}\n";var C=i(1953),M=i(4912),T=i(3849);const L={interpolation:class{constructor({gl:t,attribute:e,timeline:i}){(0,n.Z)(this,"gl",void 0),(0,n.Z)(this,"type","interpolation"),(0,n.Z)(this,"attributeInTransition",void 0),(0,n.Z)(this,"settings",void 0),(0,n.Z)(this,"attribute",void 0),(0,n.Z)(this,"transition",void 0),(0,n.Z)(this,"currentStartIndices",void 0),(0,n.Z)(this,"currentLength",void 0),(0,n.Z)(this,"transform",void 0),(0,n.Z)(this,"buffers",void 0),this.gl=t,this.transition=new b.Z(i),this.attribute=e,this.attributeInTransition=new x(t,e.settings),this.currentStartIndices=e.startIndices,this.currentLength=0,this.transform=function(t,e){const i=(0,_.w)(e.size);return new P.Z(t,{vs:S,defines:{ATTRIBUTE_TYPE:i},varyings:["vCurrent"]})}(t,e);const o={byteLength:0,usage:35050};this.buffers=[new r.Z(t,o),new r.Z(t,o)]}get inProgress(){return this.transition.inProgress}start(t,e){if(t.duration<=0)return void this.transition.cancel();this.settings=t;const{gl:i,buffers:n,attribute:o}=this;(0,_.DY)(n);const s={numInstances:e,attribute:o,fromLength:this.currentLength,fromStartIndices:this.currentStartIndices,getData:t.enter};for(const t of n)(0,_.IV)({buffer:t,...s});this.currentStartIndices=o.startIndices,this.currentLength=(0,_.pi)(o,e),this.attributeInTransition.setData({buffer:n[1],value:o.value}),this.transition.start(t),this.transform.update({elementCount:Math.floor(this.currentLength/o.size),sourceBuffers:{aFrom:n[0],aTo:(0,_.AQ)(i,o)},feedbackBuffers:{vCurrent:n[1]}})}update(){const t=this.transition.update();if(t){const{duration:t,easing:e}=this.settings,{time:i}=this.transition;let n=i/t;e&&(n=e(n)),this.transform.run({uniforms:{time:n}})}return t}cancel(){this.transition.cancel(),this.transform.delete();for(const t of this.buffers)t.delete();this.buffers.length=0}},spring:class{constructor({gl:t,attribute:e,timeline:i}){(0,n.Z)(this,"gl",void 0),(0,n.Z)(this,"type","spring"),(0,n.Z)(this,"attributeInTransition",void 0),(0,n.Z)(this,"settings",void 0),(0,n.Z)(this,"attribute",void 0),(0,n.Z)(this,"transition",void 0),(0,n.Z)(this,"currentStartIndices",void 0),(0,n.Z)(this,"currentLength",void 0),(0,n.Z)(this,"texture",void 0),(0,n.Z)(this,"framebuffer",void 0),(0,n.Z)(this,"transform",void 0),(0,n.Z)(this,"buffers",void 0),this.gl=t,this.type="spring",this.transition=new b.Z(i),this.attribute=e,this.attributeInTransition=new x(t,{...e.settings,normalized:!1}),this.currentStartIndices=e.startIndices,this.currentLength=0,this.texture=function(t){return new M.Z(t,{data:new Uint8Array(4),format:6408,type:5121,border:0,mipmaps:!1,dataFormat:6408,width:1,height:1})}(t),this.framebuffer=function(t,e){return new T.Z(t,{id:"spring-transition-is-transitioning-framebuffer",width:1,height:1,attachments:{36064:e}})}(t,this.texture),this.transform=function(t,e,i){const n=(0,_.w)(e.size);return new P.Z(t,{framebuffer:i,vs:"\n#define SHADER_NAME spring-transition-vertex-shader\n\n#define EPSILON 0.00001\n\nuniform float stiffness;\nuniform float damping;\nattribute ATTRIBUTE_TYPE aPrev;\nattribute ATTRIBUTE_TYPE aCur;\nattribute ATTRIBUTE_TYPE aTo;\nvarying ATTRIBUTE_TYPE vNext;\nvarying float vIsTransitioningFlag;\n\nATTRIBUTE_TYPE getNextValue(ATTRIBUTE_TYPE cur, ATTRIBUTE_TYPE prev, ATTRIBUTE_TYPE dest) {\n  ATTRIBUTE_TYPE velocity = cur - prev;\n  ATTRIBUTE_TYPE delta = dest - cur;\n  ATTRIBUTE_TYPE spring = delta * stiffness;\n  ATTRIBUTE_TYPE damper = velocity * -1.0 * damping;\n  return spring + damper + velocity + cur;\n}\n\nvoid main(void) {\n  bool isTransitioning = length(aCur - aPrev) > EPSILON || length(aTo - aCur) > EPSILON;\n  vIsTransitioningFlag = isTransitioning ? 1.0 : 0.0;\n\n  vNext = getNextValue(aCur, aPrev, aTo);\n  gl_Position = vec4(0, 0, 0, 1);\n  gl_PointSize = 100.0;\n}\n",fs:"\n#define SHADER_NAME spring-transition-is-transitioning-fragment-shader\n\nvarying float vIsTransitioningFlag;\n\nvoid main(void) {\n  if (vIsTransitioningFlag == 0.0) {\n    discard;\n  }\n  gl_FragColor = vec4(1.0);\n}",defines:{ATTRIBUTE_TYPE:n},varyings:["vNext"]})}(t,e,this.framebuffer);const o={byteLength:0,usage:35050};this.buffers=[new r.Z(t,o),new r.Z(t,o),new r.Z(t,o)]}get inProgress(){return this.transition.inProgress}start(t,e){const{gl:i,buffers:n,attribute:o}=this,s={numInstances:e,attribute:o,fromLength:this.currentLength,fromStartIndices:this.currentStartIndices,getData:t.enter};for(const t of n)(0,_.IV)({buffer:t,...s});this.settings=t,this.currentStartIndices=o.startIndices,this.currentLength=(0,_.pi)(o,e),this.attributeInTransition.setData({buffer:n[1],value:o.value}),this.transition.start({...t,duration:1/0}),this.transform.update({elementCount:Math.floor(this.currentLength/o.size),sourceBuffers:{aTo:(0,_.AQ)(i,o)}})}update(){const{buffers:t,transform:e,framebuffer:i,transition:n}=this;if(!n.update())return!1;const o=this.settings;e.update({sourceBuffers:{aPrev:t[0],aCur:t[1]},feedbackBuffers:{vNext:t[2]}}),e.run({framebuffer:i,discard:!1,clearRenderTarget:!0,uniforms:{stiffness:o.stiffness,damping:o.damping},parameters:{depthTest:!1,blend:!0,viewport:[0,0,1,1],blendFunc:[1,1],blendEquation:[32776,32776]}}),(0,_.DY)(t),this.attributeInTransition.setData({buffer:t[1],value:this.attribute.value});return(0,C.z6)(i)[0]>0||n.end(),!0}cancel(){this.transition.cancel(),this.transform.delete();for(const t of this.buffers)t.delete();this.buffers.length=0,this.texture.delete(),this.framebuffer.delete()}}};class A{constructor(t,{id:e,timeline:i}){(0,n.Z)(this,"id",void 0),(0,n.Z)(this,"isSupported",void 0),(0,n.Z)(this,"gl",void 0),(0,n.Z)(this,"timeline",void 0),(0,n.Z)(this,"transitions",void 0),(0,n.Z)(this,"needsRedraw",void 0),(0,n.Z)(this,"numInstances",void 0),this.id=e,this.gl=t,this.timeline=i,this.transitions={},this.needsRedraw=!1,this.numInstances=1,this.isSupported=P.Z.isSupported(t)}finalize(){for(const t in this.transitions)this._removeTransition(t)}update({attributes:t,transitions:e,numInstances:i}){this.numInstances=i||1;for(const i in t){const n=t[i],o=n.getTransitionSetting(e);o&&this._updateAttribute(i,n,o)}for(const i in this.transitions){const n=t[i];n&&n.getTransitionSetting(e)||this._removeTransition(i)}}hasAttribute(t){const e=this.transitions[t];return e&&e.inProgress}getAttributes(){const t={};for(const e in this.transitions){const i=this.transitions[e];i.inProgress&&(t[e]=i.attributeInTransition)}return t}run(){if(!this.isSupported||0===this.numInstances)return!1;for(const t in this.transitions){this.transitions[t].update()&&(this.needsRedraw=!0)}const t=this.needsRedraw;return this.needsRedraw=!1,t}_removeTransition(t){this.transitions[t].cancel(),delete this.transitions[t]}_updateAttribute(t,e,i){const n=this.transitions[t];let o=!n||n.type!==i.type;if(o){if(!this.isSupported)return void d.Z.warn("WebGL2 not supported by this browser. Transition for ".concat(t," is disabled."))();n&&this._removeTransition(t);const s=L[i.type];s?this.transitions[t]=new s({attribute:e,timeline:this.timeline,gl:this.gl}):(d.Z.error("unsupported transition type '".concat(i.type,"'"))(),o=!1)}(o||e.needsRedraw())&&(this.needsRedraw=!0,this.transitions[t].start(i,this.numInstances))}}const Z="attributeManager.invalidate";class E{constructor(t,{id:e="attribute-manager",stats:i,timeline:o}={}){(0,n.Z)(this,"id",void 0),(0,n.Z)(this,"gl",void 0),(0,n.Z)(this,"attributes",void 0),(0,n.Z)(this,"updateTriggers",void 0),(0,n.Z)(this,"needsRedraw",void 0),(0,n.Z)(this,"userData",void 0),(0,n.Z)(this,"stats",void 0),(0,n.Z)(this,"attributeTransitionManager",void 0),this.id=e,this.gl=t,this.attributes={},this.updateTriggers={},this.needsRedraw=!0,this.userData={},this.stats=i,this.attributeTransitionManager=new A(t,{id:"".concat(e,"-transitions"),timeline:o}),Object.seal(this)}finalize(){for(const t in this.attributes)this.attributes[t].delete();this.attributeTransitionManager.finalize()}getNeedsRedraw(t={clearRedrawFlags:!1}){const e=this.needsRedraw;return this.needsRedraw=this.needsRedraw&&!t.clearRedrawFlags,e&&this.id}setNeedsRedraw(){this.needsRedraw=!0}add(t){this._add(t)}addInstanced(t){this._add(t,{instanced:1})}remove(t){for(const e of t)void 0!==this.attributes[e]&&(this.attributes[e].delete(),delete this.attributes[e])}invalidate(t,e){const i=this._invalidateTrigger(t,e);(0,w.Z)(Z,this,t,i)}invalidateAll(t){for(const e in this.attributes)this.attributes[e].setNeedsUpdate(e,t);(0,w.Z)(Z,this,"all")}update({data:t,numInstances:e,startIndices:i=null,transitions:n,props:o={},buffers:s={},context:r={}}){let a=!1;(0,w.Z)("attributeManager.updateStart",this),this.stats&&this.stats.get("Update Attributes").timeStart();for(const n in this.attributes){const l=this.attributes[n],c=l.settings.accessor;l.startIndices=i,l.numInstances=e,o[n]&&d.Z.removed("props.".concat(n),"data.attributes.".concat(n))(),l.setExternalBuffer(s[n])||l.setBinaryValue("string"==typeof c?s[c]:void 0,t.startIndices)||"string"==typeof c&&!s[c]&&l.setConstantValue(o[c])||l.needsUpdate()&&(a=!0,this._updateAttribute({attribute:l,numInstances:e,data:t,props:o,context:r})),this.needsRedraw=this.needsRedraw||l.needsRedraw()}a&&(0,w.Z)("attributeManager.updateEnd",this,e),this.stats&&this.stats.get("Update Attributes").timeEnd(),this.attributeTransitionManager.update({attributes:this.attributes,numInstances:e,transitions:n})}updateTransition(){const{attributeTransitionManager:t}=this,e=t.run();return this.needsRedraw=this.needsRedraw||e,e}getAttributes(){return this.attributes}getChangedAttributes(t={clearChangedFlags:!1}){const{attributes:e,attributeTransitionManager:i}=this,n={...i.getAttributes()};for(const o in e){const s=e[o];s.needsRedraw(t)&&!i.hasAttribute(o)&&(n[o]=s)}return n}getShaderAttributes(t,e={}){t||(t=this.getAttributes());const i={};for(const n in t)e[n]||Object.assign(i,t[n].getShaderAttributes());return i}_add(t,e={}){for(const i in t){const n=t[i];this.attributes[i]=this._createAttribute(i,n,e)}this._mapUpdateTriggersToAttributes()}_createAttribute(t,e,i){const n={...e,id:t,size:(e.isIndexed?1:e.size)||1,divisor:i.instanced?1:e.divisor||0};return new x(this.gl,n)}_mapUpdateTriggersToAttributes(){const t={};for(const e in this.attributes){this.attributes[e].getUpdateTriggers().forEach((i=>{t[i]||(t[i]=[]),t[i].push(e)}))}this.updateTriggers=t}_invalidateTrigger(t,e){const{attributes:i,updateTriggers:n}=this,o=n[t];return o&&o.forEach((t=>{const n=i[t];n&&n.setNeedsUpdate(n.id,e)})),o}_updateAttribute(t){const{attribute:e,numInstances:i}=t;if((0,w.Z)("attribute.updateStart",e),e.constant)return void e.setConstantValue(e.value);e.allocate(i)&&(0,w.Z)("attribute.allocate",e,i);e.updateBuffer(t)&&(this.needsRedraw=!0,(0,w.Z)("attribute.updateEnd",e,i))}}},9006:(t,e,i)=>{function n(t){const{source:e,target:i,start:n=0,size:o,getData:s}=t,r=t.end||i.length,a=e.length,l=r-n;if(a>l)return void i.set(e.subarray(0,l),n);if(i.set(e,n),!s)return;let c=a;for(;c<l;){const t=s(c,e);for(let e=0;e<o;e++)i[n+c]=t[e]||0,c++}}i.d(e,{DY:()=>l,pi:()=>c,w:()=>a,AQ:()=>r,M0:()=>s,IV:()=>d});const o={interpolation:{duration:0,easing:t=>t},spring:{stiffness:.05,damping:.5}};function s(t,e){if(!t)return null;Number.isFinite(t)&&(t={type:"interpolation",duration:t});const i=t.type||"interpolation";return{...o[i],...e,...t,type:i}}function r(t,e){const i=e.getBuffer();return i?[i,{divisor:0,size:e.size,normalized:e.settings.normalized}]:e.value}function a(t){switch(t){case 1:return"float";case 2:return"vec2";case 3:return"vec3";case 4:return"vec4";default:throw new Error('No defined attribute type for size "'.concat(t,'"'))}}function l(t){t.push(t.shift())}function c(t,e){const{doublePrecision:i,settings:n,value:o,size:s}=t,r=i&&o instanceof Float64Array?2:1;return(n.noAlloc?o.length:e*s)*r}function d({buffer:t,numInstances:e,attribute:i,fromLength:o,fromStartIndices:s,getData:r=(t=>t)}){const a=i.doublePrecision&&i.value instanceof Float64Array?2:1,l=i.size*a,d=i.byteOffset,u=i.startIndices,h=s&&u,p=c(i,e),g=i.isConstant;if(!h&&o>=p)return;const f=g?i.value:i.getBuffer().getData({srcByteOffset:d});if(i.settings.normalized&&!g){const t=r;r=(e,n)=>i.normalizeConstant(t(e,n))}const m=g?(t,e)=>r(f,e):(t,e)=>r(f.subarray(t,t+l),e),v=t.getData({length:o}),y=new Float32Array(p);!function({source:t,target:e,size:i,getData:o,sourceStartIndices:s,targetStartIndices:r}){if(!Array.isArray(r))return n({source:t,target:e,size:i,getData:o}),e;let a=0,l=0;const c=o&&((t,e)=>o(t+l,e)),d=Math.min(s.length,r.length);for(let o=1;o<d;o++){const d=s[o]*i,u=r[o]*i;n({source:t.subarray(a,d),target:e,start:l,end:u,size:i,getData:c}),a=d,l=u}l<e.length&&n({source:[],target:e,start:l,size:i,getData:c})}({source:v,target:y,sourceStartIndices:s,targetStartIndices:u,size:l,getData:m}),t.byteLength<y.byteLength+d&&t.reallocate(y.byteLength+d),t.subData({data:y,offset:d})}},8918:(t,e,i)=>{i.d(e,{Z:()=>a});var n=i(4572),o=i(4185),s=i(3803),r=i(1855);class a extends o.Z{get isComposite(){return!0}get isLoaded(){return super.isLoaded&&this.getSubLayers().every((t=>t.isLoaded))}getSubLayers(){return this.internalState&&this.internalState.subLayers||[]}initializeState(t){}setState(t){super.setState(t),this.setNeedsUpdate()}getPickingInfo({info:t}){const{object:e}=t;return e&&e.__source&&e.__source.parent&&e.__source.parent.id===this.id?(t.object=e.__source.object,t.index=e.__source.index,t):t}filterSubLayer(t){return!0}shouldRenderSubLayer(t,e){return e&&e.length}getSubLayerClass(t,e){const{_subLayerProps:i}=this.props;return i&&i[t]&&i[t].type||e}getSubLayerRow(t,e,i){return t.__source={parent:this,object:e,index:i},t}getSubLayerAccessor(t){if("function"==typeof t){const e={index:-1,data:this.props.data,target:[]};return(i,n)=>i&&i.__source?(e.index=i.__source.index,t(i.__source.object,e)):t(i,n)}return t}getSubLayerProps(t={}){var e;const{opacity:i,pickable:n,visible:o,parameters:s,getPolygonOffset:r,highlightedObjectIndex:a,autoHighlight:l,highlightColor:c,coordinateSystem:d,coordinateOrigin:u,wrapLongitude:h,positionFormat:p,modelMatrix:g,extensions:f,fetch:m,operation:v,_subLayerProps:y}=this.props,_={id:"",updateTriggers:{},opacity:i,pickable:n,visible:o,parameters:s,getPolygonOffset:r,highlightedObjectIndex:a,autoHighlight:l,highlightColor:c,coordinateSystem:d,coordinateOrigin:u,wrapLongitude:h,positionFormat:p,modelMatrix:g,extensions:f,fetch:m,operation:v},x=y&&t.id&&y[t.id],w=x&&x.updateTriggers,P=t.id||"sublayer";if(x){const e=this.constructor._propTypes,i=t.type?t.type._propTypes:{};for(const t in x){const n=i[t]||e[t];n&&"accessor"===n.type&&(x[t]=this.getSubLayerAccessor(x[t]))}}Object.assign(_,t,x),_.id="".concat(this.props.id,"-").concat(P),_.updateTriggers={all:null===(e=this.props.updateTriggers)||void 0===e?void 0:e.all,...t.updateTriggers,...w};for(const t of f){const e=t.getSubLayerProps.call(this,t);e&&Object.assign(_,e,{updateTriggers:Object.assign(_.updateTriggers,e.updateTriggers)})}return _}_updateAutoHighlight(t){for(const e of this.getSubLayers())e.updateAutoHighlight(t)}_getAttributeManager(){return null}_postUpdate(t,e){let i=this.internalState.subLayers;const n=!i||this.needsUpdate();if(n){const t=this.renderLayers();i=(0,r.x)(t,Boolean),this.internalState.subLayers=i}(0,s.Z)("compositeLayer.renderLayers",this,n,i);for(const t of i)t.parent=this}}(0,n.Z)(a,"layerName","CompositeLayer")},4088:(t,e,i)=>{i.d(e,{Df:()=>o,FP:()=>a,iI:()=>r,k8:()=>l,zG:()=>s});var n=i(744);const o={DEFAULT:-1,LNGLAT:1,METER_OFFSETS:2,LNGLAT_OFFSETS:3,CARTESIAN:0};Object.defineProperty(o,"IDENTITY",{get:()=>(n.Z.deprecated("COORDINATE_SYSTEM.IDENTITY","COORDINATE_SYSTEM.CARTESIAN")(),0)});const s={WEB_MERCATOR:1,GLOBE:2,WEB_MERCATOR_AUTO_OFFSET:4,IDENTITY:0},r={common:0,meters:1,pixels:2},a={click:{handler:"onClick"},panstart:{handler:"onDragStart"},panmove:{handler:"onDrag"},panend:{handler:"onDragEnd"}},l={DRAW:"draw",MASK:"mask"}},9877:(t,e,i)=>{i.d(e,{Z:()=>c});var n=i(3803),o=i(4088),s=i(3182);class r extends s.Z{shouldDrawLayer(t){return t.props.operation===o.k8.DRAW}}var a=i(930),l=i(3849);class c{constructor(t){this.gl=t,this.layerFilter=null,this.drawPickingColors=!1,this.drawLayersPass=new r(t),this.pickLayersPass=new a.Z(t),this.renderCount=0,this._needsRedraw="Initial render",this.renderBuffers=[],this.lastPostProcessEffect=null}setProps(t){"layerFilter"in t&&this.layerFilter!==t.layerFilter&&(this.layerFilter=t.layerFilter,this._needsRedraw="layerFilter changed"),"drawPickingColors"in t&&this.drawPickingColors!==t.drawPickingColors&&(this.drawPickingColors=t.drawPickingColors,this._needsRedraw="drawPickingColors changed")}renderLayers(t){const e=this.drawPickingColors?this.pickLayersPass:this.drawLayersPass;t.layerFilter=t.layerFilter||this.layerFilter,t.effects=t.effects||[],t.target=t.target||l.Z.getDefaultFramebuffer(this.gl),this._preRender(t.effects,t);const i=this.lastPostProcessEffect?this.renderBuffers[0]:t.target,o=e.render({...t,target:i});this._postRender(t.effects,t),this.renderCount++,(0,n.Z)("deckRenderer.renderLayers",this,o,t)}needsRedraw(t={clearRedrawFlags:!1}){const e=this._needsRedraw;return t.clearRedrawFlags&&(this._needsRedraw=!1),e}finalize(){const{renderBuffers:t}=this;for(const e of t)e.delete();t.length=0}_preRender(t,e){let i=null;for(const n of t)n.preRender(this.gl,e),n.postRender&&(i=n);i&&this._resizeRenderBuffers(),this.lastPostProcessEffect=i}_resizeRenderBuffers(){const{renderBuffers:t}=this;0===t.length&&t.push(new l.Z(this.gl),new l.Z(this.gl));for(const e of t)e.resize()}_postRender(t,e){const{renderBuffers:i}=this,n={inputBuffer:i[0],swapBuffer:i[1],target:null};for(const o of t)if(o.postRender){if(o===this.lastPostProcessEffect){n.target=e.target,o.postRender(this.gl,n);break}const t=o.postRender(this.gl,n);n.inputBuffer=t,n.swapBuffer=t===i[0]?i[1]:i[0]}}}},8289:(t,e,i)=>{i.d(e,{Z:()=>Q});var n=i(4572),o=i(5841),s=i(6871),r=i(744),a=i(1855);class l{constructor(t){(0,n.Z)(this,"width",void 0),(0,n.Z)(this,"height",void 0),(0,n.Z)(this,"views",void 0),(0,n.Z)(this,"viewState",void 0),(0,n.Z)(this,"controllers",void 0),(0,n.Z)(this,"timeline",void 0),(0,n.Z)(this,"_viewports",void 0),(0,n.Z)(this,"_viewportMap",void 0),(0,n.Z)(this,"_isUpdating",void 0),(0,n.Z)(this,"_needsRedraw",void 0),(0,n.Z)(this,"_needsUpdate",void 0),(0,n.Z)(this,"_eventManager",void 0),(0,n.Z)(this,"_eventCallbacks",void 0),this.views=[],this.width=100,this.height=100,this.viewState={},this.controllers={},this.timeline=t.timeline,this._viewports=[],this._viewportMap={},this._isUpdating=!1,this._needsRedraw="First render",this._needsUpdate="Initialize",this._eventManager=t.eventManager,this._eventCallbacks={onViewStateChange:t.onViewStateChange,onInteractionStateChange:t.onInteractionStateChange},Object.seal(this),this.setProps(t)}finalize(){for(const t in this.controllers){const e=this.controllers[t];e&&e.finalize()}this.controllers={}}needsRedraw(t={clearRedrawFlags:!1}){const e=this._needsRedraw;return t.clearRedrawFlags&&(this._needsRedraw=!1),e}setNeedsUpdate(t){this._needsUpdate=this._needsUpdate||t,this._needsRedraw=this._needsRedraw||t}updateViewStates(){for(const t in this.controllers){const e=this.controllers[t];e&&e.updateTransition()}}getViewports(t){return t?this._viewports.filter((e=>e.containsPixel(t))):this._viewports}getViews(){const t={};return this.views.forEach((e=>{t[e.id]=e})),t}getView(t){return this.views.find((e=>e.id===t))}getViewState(t){const e="string"==typeof t?this.getView(t):t,i=e&&this.viewState[e.getViewStateId()]||this.viewState;return e?e.filterViewState(i):i}getViewport(t){return this._viewportMap[t]}unproject(t,e){const i=this.getViewports(),n={x:t[0],y:t[1]};for(let o=i.length-1;o>=0;--o){const s=i[o];if(s.containsPixel(n)){const i=t.slice();return i[0]-=s.x,i[1]-=s.y,s.unproject(i,e)}}return null}setProps(t){t.views&&this._setViews(t.views),t.viewState&&this._setViewState(t.viewState),("width"in t||"height"in t)&&this._setSize(t.width,t.height),this._isUpdating||this._update()}_update(){this._isUpdating=!0,this._needsUpdate&&(this._needsUpdate=!1,this._rebuildViewports()),this._needsUpdate&&(this._needsUpdate=!1,this._rebuildViewports()),this._isUpdating=!1}_setSize(t,e){t===this.width&&e===this.height||(this.width=t,this.height=e,this.setNeedsUpdate("Size changed"))}_setViews(t){t=(0,a.x)(t,Boolean);this._diffViews(t,this.views)&&this.setNeedsUpdate("views changed"),this.views=t}_setViewState(t){if(t){!(0,s.v)(t,this.viewState)&&this.setNeedsUpdate("viewState changed"),this.viewState=t}else r.Z.warn("missing `viewState` or `initialViewState`")()}_onViewStateChange(t,e){this._eventCallbacks.onViewStateChange&&this._eventCallbacks.onViewStateChange({...e,viewId:t})}_createController(t,e){return new(0,e.type)({timeline:this.timeline,eventManager:this._eventManager,onViewStateChange:this._onViewStateChange.bind(this,e.id),onStateChange:this._eventCallbacks.onInteractionStateChange,makeViewport:e=>{var i;return null===(i=this.getView(t.id))||void 0===i?void 0:i.makeViewport({viewState:e,width:this.width,height:this.height})}})}_updateController(t,e,i,n){const o=t.controller;if(o){const s={...e,...o,id:t.id,x:i.x,y:i.y,width:i.width,height:i.height};return n||(n=this._createController(t,s)),n&&n.setProps(s),n}return null}_rebuildViewports(){const{views:t}=this,e=this.controllers;this._viewports=[],this.controllers={};let i=!1;for(let n=t.length;n--;){const o=t[n],s=this.getViewState(o),r=o.makeViewport({viewState:s,width:this.width,height:this.height});let a=e[o.id];const l=Boolean(o.controller);l&&!a&&(i=!0),!i&&l||!a||(a.finalize(),a=null),this.controllers[o.id]=this._updateController(o,s,r,a),this._viewports.unshift(r)}for(const t in e){const i=e[t];i&&!this.controllers[t]&&i.finalize()}this._buildViewportMap()}_buildViewportMap(){this._viewportMap={},this._viewports.forEach((t=>{t.id&&(this._viewportMap[t.id]=this._viewportMap[t.id]||t)}))}_diffViews(t,e){return t.length!==e.length||t.some(((i,n)=>!t[n].equals(e[n])))}}var c=i(4009),d=i(9601),u=i(4912),h=i(4034),p=i(3849),g=i(9450),f=i(4088),m=i(3182);class v extends m.Z{constructor(t,e){super(t,e),(0,n.Z)(this,"maskMap",void 0),(0,n.Z)(this,"fbo",void 0);const{mapSize:i=2048}=e;this.maskMap=new u.Z(t,{width:i,height:i,parameters:{10241:9729,10240:9729,10242:33071,10243:33071}}),this.fbo=new p.Z(t,{id:"maskmap",width:i,height:i,attachments:{36064:this.maskMap}})}render(t){const e=this.gl,i=[!1,!1,!1,!1];return i[t.channel]=!0,(0,g.s8)(e,{clearColor:[255,255,255,255],blend:!0,blendFunc:[0,1],blendEquation:32778,colorMask:i,depthTest:!1},(()=>super.render({...t,target:this.fbo,pass:"mask"})))}shouldDrawLayer(t){return t.props.operation===f.k8.MASK}delete(){this.fbo.delete(),this.maskMap.delete()}}var y=i(743),_=i(6935),x=i(7013);class w{constructor(){(0,n.Z)(this,"id","mask-effect"),(0,n.Z)(this,"props",null),(0,n.Z)(this,"useInPicking",!0),(0,n.Z)(this,"dummyMaskMap",void 0),(0,n.Z)(this,"channels",[]),(0,n.Z)(this,"masks",null),(0,n.Z)(this,"maskPass",void 0),(0,n.Z)(this,"maskMap",void 0),(0,n.Z)(this,"lastViewport",void 0)}preRender(t,{layers:e,layerFilter:i,viewports:n,onViewportActive:o,views:s}){this.dummyMaskMap||(this.dummyMaskMap=new u.Z(t,{width:1,height:1}));const r=e.filter((t=>t.props.visible&&t.props.operation===f.k8.MASK));if(0===r.length)return this.masks=null,void(this.channels.length=0);this.masks={},this.maskPass||(this.maskPass=new v(t,{id:"default-mask"}),this.maskMap=this.maskPass.maskMap);const a=this._sortMaskChannels(r),l=n[0],c=!this.lastViewport||!this.lastViewport.equals(l);for(const t in a)this._renderChannel(a[t],{layerFilter:i,onViewportActive:o,views:s,viewport:l,viewportChanged:c})}_renderChannel(t,{layerFilter:e,onViewportActive:i,views:n,viewport:o,viewportChanged:s}){const r=this.channels[t.index];if(!r)return;const a=t===r||r.layers.length!==t.layers.length||t.layerBounds.some(((t,e)=>t!==r.layerBounds[e]));if(t.bounds=r.bounds,t.maskBounds=r.maskBounds,this.channels[t.index]=t,(a||s)&&(this.lastViewport=o,t.bounds=function({layers:t,viewport:e}){let i=null;for(const e of t){const t=e.getBounds();t&&(i?(i[0]=Math.min(i[0],t[0][0]),i[1]=Math.min(i[1],t[0][1]),i[2]=Math.max(i[2],t[1][0]),i[3]=Math.max(i[3],t[1][1])):i=[t[0][0],t[0][1],t[1][0],t[1][1]])}const n=e.getBounds();if(!i)return n;const o=function(t){const e={x:t[2]-t[0],y:t[3]-t[1]},i={x:t[0]+.5*e.x,y:t[1]+.5*e.y};return[i.x-e.x,i.y-e.y,i.x+e.x,i.y+e.y]}(n);return i[2]-i[0]<o[2]-o[0]||i[3]-i[1]<o[3]-o[1]||(i[0]=Math.max(i[0],o[0]),i[1]=Math.max(i[1],o[1]),i[2]=Math.min(i[2],o[2]),i[3]=Math.min(i[3],o[3])),i}({layers:t.layers,viewport:o}),a||!(0,h.fS)(t.bounds,r.bounds))){const{maskPass:s,maskMap:r}=this,a=function({bounds:t,viewport:e,width:i,height:n}){if(t[2]<=t[0]||t[3]<=t[1])return null;if(i-=2,n-=2,e instanceof _.Z){const{longitude:e,latitude:o,zoom:s}=(0,x.Xg)({width:i,height:n,bounds:[[t[0],t[1]],[t[2],t[3]]],maxZoom:20});return new _.Z({longitude:e,latitude:o,zoom:s,x:1,y:1,width:i,height:n})}const o=[(t[0]+t[2])/2,(t[1]+t[3])/2,0],s=Math.min(20,i/(t[2]-t[0]),n/(t[3]-t[1]));return new y.Z({x:1,y:1}).makeViewport({width:i,height:n,viewState:{target:o,zoom:Math.log2(s)}})}({bounds:t.bounds,viewport:o,width:r.width,height:r.height});t.maskBounds=a?a.getBounds():[0,0,1,1],s.render({pass:"mask",channel:t.index,layers:t.layers,layerFilter:e,viewports:a?[a]:[],onViewportActive:i,views:n,moduleParameters:{devicePixelRatio:1}})}this.masks[t.id]={index:t.index,bounds:t.maskBounds,coordinateOrigin:t.coordinateOrigin,coordinateSystem:t.coordinateSystem}}_sortMaskChannels(t){const e={};let i=0;for(const n of t){const{id:t}=n.root;let o=e[t];if(!o){if(++i>4){r.Z.warn("Too many mask layers. The max supported is 4")();continue}o={id:t,index:this.channels.findIndex((e=>(null==e?void 0:e.id)===t)),layers:[],layerBounds:[],coordinateOrigin:n.root.props.coordinateOrigin,coordinateSystem:n.root.props.coordinateSystem},e[t]=o}o.layers.push(n),o.layerBounds.push(n.getBounds())}for(let t=0;t<4;t++){const i=this.channels[t];i&&i.id in e||(this.channels[t]=null)}for(const t in e){const i=e[t];i.index<0&&(i.index=this.channels.findIndex((t=>!t)),this.channels[i.index]=i)}return e}getModuleParameters(){return{maskMap:this.masks?this.maskMap:this.dummyMaskMap,maskChannels:this.masks}}cleanup(){this.dummyMaskMap&&(this.dummyMaskMap.delete(),this.dummyMaskMap=void 0),this.maskPass&&(this.maskPass.delete(),this.maskPass=void 0,this.maskMap=void 0),this.lastViewport=void 0,this.masks=null,this.channels.length=0}}const P=new d.Z;class b{constructor(){(0,n.Z)(this,"effects",void 0),(0,n.Z)(this,"_internalEffects",void 0),(0,n.Z)(this,"_needsRedraw",void 0),this.effects=[],this._internalEffects=[],this._needsRedraw="Initial render",this.setEffects()}setProps(t){"effects"in t&&(t.effects.length===this.effects.length&&(0,s.v)(t.effects,this.effects)||(this.setEffects(t.effects),this._needsRedraw="effects changed"))}needsRedraw(t={clearRedrawFlags:!1}){const e=this._needsRedraw;return t.clearRedrawFlags&&(this._needsRedraw=!1),e}getEffects(){return this._internalEffects}finalize(){this.cleanup()}setEffects(t=[]){this.cleanup(),this.effects=t,this._internalEffects=t.slice(),this._internalEffects.push(new w),t.some((t=>t instanceof d.Z))||this._internalEffects.push(P)}cleanup(){for(const t of this.effects)t.cleanup();for(const t of this._internalEffects)t.cleanup();this.effects.length=0,this._internalEffects.length=0}}var S=i(9877),C=i(1953),M=i(930);const T={pickedColor:null,pickedObjectIndex:-1};function L({pickedColors:t,decodePickingColor:e,deviceX:i,deviceY:n,deviceRadius:o,deviceRect:s}){const{x:a,y:l,width:c,height:d}=s;let u=o*o,h=-1,p=0;for(let e=0;e<d;e++){const o=e+l-n,s=o*o;if(s>u)p+=4*c;else for(let e=0;e<c;e++){if(t[p+3]-1>=0){const t=e+a-i,n=t*t+s;n<=u&&(u=n,h=p)}p+=4}}if(h>=0){const i=t.slice(h,h+4),n=e(i);if(n){const t=Math.floor(h/4/c),e=h/4-t*c;return{...n,pickedColor:i,pickedX:a+e,pickedY:l+t}}r.Z.error("Picked non-existent layer. Is picking buffer corrupt?")()}return T}function A({pickInfo:t,viewports:e,pixelRatio:i,x:n,y:o,z:s}){let r,a=e[0];if(e.length>1&&(a=function(t,e){for(let i=t.length-1;i>=0;i--){const n=t[i];if(n.containsPixel(e))return n}return t[0]}((null==t?void 0:t.pickedViewports)||e,{x:n,y:o})),a){const t=[n-a.x,o-a.y];void 0!==s&&(t[2]=s),r=a.unproject(t)}return{color:null,layer:null,viewport:a,index:-1,picked:!1,x:n,y:o,pixel:[n,o],coordinate:r,devicePixel:t&&"pickedX"in t?[t.pickedX,t.pickedY]:void 0,pixelRatio:i}}function Z(t){const{pickInfo:e,lastPickedInfo:i,mode:n,layers:o}=t,{pickedColor:s,pickedLayer:r,pickedObjectIndex:a}=e,l=r?[r]:[];if("hover"===n){const t=i.index,e=i.layerId,n=r?r.props.id:null;if(n!==e||a!==t){if(n!==e){const t=o.find((t=>t.props.id===e));t&&l.unshift(t)}i.layerId=n,i.index=a,i.info=null}}const c=A(t),d=new Map;return d.set(null,c),l.forEach((t=>{let e={...c};t===r&&(e.color=s,e.index=a,e.picked=!0),e=E({layer:t,info:e,mode:n});const o=e.layer;t===r&&"hover"===n&&(i.info=e),d.set(o.id,e),"hover"===n&&o.updateAutoHighlight(e)})),d}function E({layer:t,info:e,mode:i}){for(;t&&e;){const n=e.layer||null;e.sourceLayer=n,e.layer=t,e=t.getPickingInfo({info:e,mode:i,sourceLayer:n}),t=t.parent}return e}class z{constructor(t){(0,n.Z)(this,"gl",void 0),(0,n.Z)(this,"pickingFBO",void 0),(0,n.Z)(this,"depthFBO",void 0),(0,n.Z)(this,"pickLayersPass",void 0),(0,n.Z)(this,"layerFilter",void 0),(0,n.Z)(this,"lastPickedInfo",void 0),(0,n.Z)(this,"_pickable",!0),this.gl=t,this.pickLayersPass=new M.Z(t),this.lastPickedInfo={index:-1,layerId:null,info:null}}setProps(t){"layerFilter"in t&&(this.layerFilter=t.layerFilter),"_pickable"in t&&(this._pickable=t._pickable)}finalize(){this.pickingFBO&&this.pickingFBO.delete(),this.depthFBO&&(this.depthFBO.color.delete(),this.depthFBO.delete())}pickObject(t){return this._pickClosestObject(t)}pickObjects(t){return this._pickVisibleObjects(t)}getLastPickedObject({x:t,y:e,layers:i,viewports:n},o=this.lastPickedInfo.info){const s=o&&o.layer&&o.layer.id,r=o&&o.viewport&&o.viewport.id,a=s?i.find((t=>t.id===s)):null,l=r&&n.find((t=>t.id===r))||n[0],c=l&&l.unproject([t-l.x,e-l.y]),d={x:t,y:e,viewport:l,coordinate:c,layer:a};return{...o,...d}}_resizeBuffer(){var t,e;const{gl:i}=this;if(!this.pickingFBO&&(this.pickingFBO=new p.Z(i),p.Z.isSupported(i,{colorBufferFloat:!0}))){const t=new p.Z(i);t.attach({36064:new u.Z(i,{format:(0,g.D0)(i)?34836:6408,type:5126})}),this.depthFBO=t}null===(t=this.pickingFBO)||void 0===t||t.resize({width:i.canvas.width,height:i.canvas.height}),null===(e=this.depthFBO)||void 0===e||e.resize({width:i.canvas.width,height:i.canvas.height})}_getPickable(t){if(!1===this._pickable)return null;const e=t.filter((t=>t.isPickable()&&!t.isComposite));return e.length?e:null}_pickClosestObject({layers:t,views:e,viewports:i,x:n,y:o,radius:s=0,depth:r=1,mode:a="query",unproject3D:l,onViewportActive:c,effects:d}){const u=this._getPickable(t),h=(0,g.w)(this.gl);if(!u)return{result:[],emptyInfo:A({viewports:i,x:n,y:o,pixelRatio:h})};this._resizeBuffer();const p=(0,g.JY)(this.gl,[n,o],!0),f=[p.x+Math.floor(p.width/2),p.y+Math.floor(p.height/2)],m=Math.round(s*h),{width:v,height:y}=this.pickingFBO,_=this._getPickingRect({deviceX:f[0],deviceY:f[1],deviceRadius:m,deviceWidth:v,deviceHeight:y}),x={x:n-s,y:o-s,width:2*s+1,height:2*s+1};let w;const P=[],b=new Set;for(let t=0;t<r;t++){let s,p;if(_){s=L({...this._drawAndSample({layers:u,views:e,viewports:i,onViewportActive:c,deviceRect:_,cullRect:x,effects:d,pass:"picking:".concat(a)}),deviceX:f[0],deviceY:f[1],deviceRadius:m,deviceRect:_})}else s={pickedColor:null,pickedObjectIndex:-1};if(s.pickedLayer&&l&&this.depthFBO){p=this._drawAndSample({layers:[s.pickedLayer],views:e,viewports:i,onViewportActive:c,deviceRect:{x:s.pickedX,y:s.pickedY,width:1,height:1},cullRect:x,effects:d,pass:"picking:".concat(a,":z")},!0).pickedColors[0]}s.pickedLayer&&t+1<r&&(b.add(s.pickedLayer),s.pickedLayer.disablePickingIndex(s.pickedObjectIndex)),w=Z({pickInfo:s,lastPickedInfo:this.lastPickedInfo,mode:a,layers:u,viewports:i,x:n,y:o,z:p,pixelRatio:h});for(const t of w.values())t.layer&&P.push(t);if(!s.pickedColor)break}for(const t of b)t.restorePickingColors();return{result:P,emptyInfo:w.get(null)}}_pickVisibleObjects({layers:t,views:e,viewports:i,x:n,y:o,width:s=1,height:a=1,mode:l="query",maxObjects:c=null,onViewportActive:d,effects:u}){const h=this._getPickable(t);if(!h)return[];this._resizeBuffer();const p=(0,g.w)(this.gl),f=(0,g.JY)(this.gl,[n,o],!0),m=f.x,v=f.y+f.height,y=(0,g.JY)(this.gl,[n+s,o+a],!0),_=y.x+y.width,x=y.y,w={x:m,y:x,width:_-m,height:v-x},P=function({pickedColors:t,decodePickingColor:e}){const i=new Map;if(t)for(let n=0;n<t.length;n+=4)if(t[n+3]-1>=0){const o=t.slice(n,n+4),s=o.join(",");if(!i.has(s)){const t=e(o);t?i.set(s,{...t,color:o}):r.Z.error("Picked non-existent layer. Is picking buffer corrupt?")()}}return Array.from(i.values())}(this._drawAndSample({layers:h,views:e,viewports:i,onViewportActive:d,deviceRect:w,cullRect:{x:n,y:o,width:s,height:a},effects:u,pass:"picking:".concat(l)})),b=new Map,S=Number.isFinite(c);for(let t=0;t<P.length&&!(S&&c&&b.size>=c);t++){const e=P[t];let i={color:e.pickedColor,layer:null,index:e.pickedObjectIndex,picked:!0,x:n,y:o,pixelRatio:p};i=E({layer:e.pickedLayer,info:i,mode:l}),b.has(i.object)||b.set(i.object,i)}return Array.from(b.values())}_drawAndSample({layers:t,views:e,viewports:i,onViewportActive:n,deviceRect:o,cullRect:s,effects:r,pass:a},l=!1){const c=l?this.depthFBO:this.pickingFBO,{decodePickingColor:d}=this.pickLayersPass.render({layers:t,layerFilter:this.layerFilter,views:e,viewports:i,onViewportActive:n,pickingFBO:c,deviceRect:o,cullRect:s,effects:r,pass:a,pickZ:l}),{x:u,y:h,width:p,height:g}=o,f=new(l?Float32Array:Uint8Array)(p*g*4);return(0,C.z6)(c,{sourceX:u,sourceY:h,sourceWidth:p,sourceHeight:g,target:f}),{pickedColors:f,decodePickingColor:d}}_getPickingRect({deviceX:t,deviceY:e,deviceRadius:i,deviceWidth:n,deviceHeight:o}){const s=Math.max(0,t-i),r=Math.max(0,e-i),a=Math.min(n,t+i+1)-s,l=Math.min(o,e+i+1)-r;return a<=0||l<=0?null:{x:s,y:r,width:a,height:l}}}const I={zIndex:"1",position:"absolute",pointerEvents:"none",color:"#a0a7b4",backgroundColor:"#29323c",padding:"10px",top:"0",left:"0",display:"none"};class O{constructor(t){(0,n.Z)(this,"el",null),(0,n.Z)(this,"isVisible",!1);const e=t.parentElement;e&&(this.el=document.createElement("div"),this.el.className="deck-tooltip",Object.assign(this.el.style,I),e.appendChild(this.el))}setTooltip(t,e,i){const n=this.el;if(n){if("string"==typeof t)n.innerText=t;else{if(!t)return this.isVisible=!1,void(n.style.display="none");t.text&&(n.innerText=t.text),t.html&&(n.innerHTML=t.html),t.className&&(n.className=t.className),Object.assign(n.style,t.style)}this.isVisible=!0,n.style.display="block",n.style.transform="translate(".concat(e,"px, ").concat(i,"px)")}}remove(){this.el&&(this.el.remove(),this.el=null)}}var R=i(6610),D=i(6228),F=i(6487),k=i(3803);const j={id:"JSON",name:"JSON",module:"",version:"",options:{},extensions:["json","geojson"],mimeTypes:["application/json","application/geo+json"],testText:function(t){const e=t[0],i=t[t.length-1];return"{"===e&&"}"===i||"["===e&&"]"===i},parseTextSync:JSON.parse},N="8.8.23",U=globalThis.deck&&globalThis.deck.VERSION;if(U&&U!==N)throw new Error("deck.gl - multiple versions detected: ".concat(U," vs ").concat(N));U||(r.Z.log(1,"deck.gl ".concat(N))(),globalThis.deck={...globalThis.deck,VERSION:N,version:N,log:r.Z,_registerLoggers:k.z},(0,D.fh)([j,[F.S,{imagebitmap:{premultiplyAlpha:"none"}}]]));const V=globalThis.deck;var B=i(3485),W=i(9902),G=i(8055),H=i(9835),q=i(8295),X=i(2670),K=i(5304);function Y(){}const J={id:"",width:"100%",height:"100%",style:null,viewState:null,initialViewState:null,pickingRadius:0,layerFilter:null,glOptions:{},parameters:{},parent:null,gl:null,canvas:null,layers:[],effects:[],views:null,controller:null,useDevicePixels:!0,touchAction:"none",eventRecognizerOptions:{},_framebuffer:null,_animate:!1,_pickable:!0,_typedArrayManagerProps:{},_customRender:null,onWebGLInitialized:Y,onResize:Y,onViewStateChange:Y,onInteractionStateChange:Y,onBeforeRender:Y,onAfterRender:Y,onLoad:Y,onError:t=>r.Z.error(t.message)(),onHover:null,onClick:null,onDragStart:null,onDrag:null,onDragEnd:null,_onMetrics:null,getCursor:({isDragging:t})=>t?"grabbing":"grab",getTooltip:null,debug:!1,drawPickingColors:!1};class Q{constructor(t){(0,n.Z)(this,"props",void 0),(0,n.Z)(this,"width",0),(0,n.Z)(this,"height",0),(0,n.Z)(this,"userData",{}),(0,n.Z)(this,"canvas",null),(0,n.Z)(this,"viewManager",null),(0,n.Z)(this,"layerManager",null),(0,n.Z)(this,"effectManager",null),(0,n.Z)(this,"deckRenderer",null),(0,n.Z)(this,"deckPicker",null),(0,n.Z)(this,"eventManager",null),(0,n.Z)(this,"tooltip",null),(0,n.Z)(this,"metrics",void 0),(0,n.Z)(this,"animationLoop",void 0),(0,n.Z)(this,"stats",void 0),(0,n.Z)(this,"viewState",void 0),(0,n.Z)(this,"cursorState",void 0),(0,n.Z)(this,"_needsRedraw",void 0),(0,n.Z)(this,"_pickRequest",void 0),(0,n.Z)(this,"_lastPointerDownInfo",null),(0,n.Z)(this,"_metricsCounter",void 0),(0,n.Z)(this,"_onPointerMove",(t=>{const{_pickRequest:e}=this;if("pointerleave"===t.type)e.x=-1,e.y=-1,e.radius=0;else{if(t.leftButton||t.rightButton)return;{const i=t.offsetCenter;if(!i)return;e.x=i.x,e.y=i.y,e.radius=this.props.pickingRadius}}this.layerManager&&(this.layerManager.context.mousePosition={x:e.x,y:e.y}),e.event=t})),(0,n.Z)(this,"_onEvent",(t=>{const e=f.FP[t.type],i=t.offsetCenter;if(!e||!i||!this.layerManager)return;const n=this.layerManager.getLayers(),o=this.deckPicker.getLastPickedObject({x:i.x,y:i.y,layers:n,viewports:this.getViewports(i)},this._lastPointerDownInfo),{layer:s}=o,r=s&&(s[e.handler]||s.props[e.handler]),a=this.props[e.handler];let l=!1;r&&(l=r.call(s,o,t)),!l&&a&&a(o,t)})),(0,n.Z)(this,"_onPointerDown",(t=>{const e=t.offsetCenter,i=this._pick("pickObject","pickObject Time",{x:e.x,y:e.y,radius:this.props.pickingRadius});this._lastPointerDownInfo=i.result[0]||i.emptyInfo})),this.props={...J,...t},t=this.props,this._needsRedraw="Initial render",this._pickRequest={mode:"hover",x:-1,y:-1,radius:0,event:null},this.cursorState={isHovering:!1,isDragging:!1},t.viewState&&t.initialViewState&&r.Z.warn("View state tracking is disabled. Use either `initialViewState` for auto update or `viewState` for manual update.")(),"IE"===(0,B.Z)()&&r.Z.warn("IE 11 is not supported")(),this.viewState=t.initialViewState,t.gl||"undefined"!=typeof document&&(this.canvas=this._createCanvas(t)),this.animationLoop=this._createAnimationLoop(t),this.stats=new q.Z({id:"deck.gl"}),this.metrics={fps:0,setPropsTime:0,updateAttributesTime:0,framesRedrawn:0,pickTime:0,pickCount:0,gpuTime:0,gpuTimePerFrame:0,cpuTime:0,cpuTimePerFrame:0,bufferMemory:0,textureMemory:0,renderbufferMemory:0,gpuMemory:0},this._metricsCounter=0,this.setProps(t),t._typedArrayManagerProps&&R.Z.setOptions(t._typedArrayManagerProps),this.animationLoop.start()}finalize(){var t,e,i,n,o,s,r,a;(this.animationLoop.stop(),this.animationLoop=null,this._lastPointerDownInfo=null,null===(t=this.layerManager)||void 0===t||t.finalize(),this.layerManager=null,null===(e=this.viewManager)||void 0===e||e.finalize(),this.viewManager=null,null===(i=this.effectManager)||void 0===i||i.finalize(),this.effectManager=null,null===(n=this.deckRenderer)||void 0===n||n.finalize(),this.deckRenderer=null,null===(o=this.deckPicker)||void 0===o||o.finalize(),this.deckPicker=null,null===(s=this.eventManager)||void 0===s||s.destroy(),this.eventManager=null,null===(r=this.tooltip)||void 0===r||r.remove(),this.tooltip=null,this.props.canvas||this.props.gl||!this.canvas)||(null===(a=this.canvas.parentElement)||void 0===a||a.removeChild(this.canvas),this.canvas=null)}setProps(t){this.stats.get("setProps Time").timeStart(),"onLayerHover"in t&&r.Z.removed("onLayerHover","onHover")(),"onLayerClick"in t&&r.Z.removed("onLayerClick","onClick")(),t.initialViewState&&!(0,s.v)(this.props.initialViewState,t.initialViewState)&&(this.viewState=t.initialViewState),Object.assign(this.props,t),this._setCanvasSize(this.props);const e=Object.create(this.props);Object.assign(e,{views:this._getViews(),width:this.width,height:this.height,viewState:this._getViewState()}),this.animationLoop.setProps(e),this.layerManager&&(this.viewManager.setProps(e),this.layerManager.activateViewport(this.getViewports()[0]),this.layerManager.setProps(e),this.effectManager.setProps(e),this.deckRenderer.setProps(e),this.deckPicker.setProps(e)),this.stats.get("setProps Time").timeEnd()}needsRedraw(t={clearRedrawFlags:!1}){if(!this.layerManager)return!1;if(this.props._animate)return"Deck._animate";let e=this._needsRedraw;t.clearRedrawFlags&&(this._needsRedraw=!1);const i=this.viewManager.needsRedraw(t),n=this.layerManager.needsRedraw(t),o=this.effectManager.needsRedraw(t),s=this.deckRenderer.needsRedraw(t);return e=e||i||n||o||s,e}redraw(t){if(!this.layerManager)return;let e=this.needsRedraw({clearRedrawFlags:!0});e=t||e,e&&(this.stats.get("Redraw Count").incrementCount(),this.props._customRender?this.props._customRender(e):this._drawLayers(e))}get isInitialized(){return null!==this.viewManager}getViews(){return(0,K.Z)(this.viewManager),this.viewManager.views}getViewports(t){return(0,K.Z)(this.viewManager),this.viewManager.getViewports(t)}pickObject(t){const e=this._pick("pickObject","pickObject Time",t).result;return e.length?e[0]:null}pickMultipleObjects(t){return t.depth=t.depth||10,this._pick("pickObject","pickMultipleObjects Time",t).result}pickObjects(t){return this._pick("pickObjects","pickObjects Time",t)}_addResources(t,e=!1){for(const i in t)this.layerManager.resourceManager.add({resourceId:i,data:t[i],forceUpdate:e})}_removeResources(t){for(const e of t)this.layerManager.resourceManager.remove(e)}_pick(t,e,i){(0,K.Z)(this.deckPicker);const{stats:n}=this;n.get("Pick Count").incrementCount(),n.get(e).timeStart();const o=this.deckPicker[t]({layers:this.layerManager.getLayers(i),views:this.viewManager.getViews(),viewports:this.getViewports(i),onViewportActive:this.layerManager.activateViewport,effects:this.effectManager.getEffects(),...i});return n.get(e).timeEnd(),o}_createCanvas(t){let e=t.canvas;if("string"==typeof e&&(e=document.getElementById(e),(0,K.Z)(e)),!e){e=document.createElement("canvas"),e.id=t.id||"deckgl-overlay";(t.parent||document.body).appendChild(e)}return Object.assign(e.style,t.style),e}_setCanvasSize(t){if(!this.canvas)return;const{width:e,height:i}=t;if(e||0===e){const t=Number.isFinite(e)?"".concat(e,"px"):e;this.canvas.style.width=t}if(i||0===i){var n;const e=Number.isFinite(i)?"".concat(i,"px"):i;this.canvas.style.position=(null===(n=t.style)||void 0===n?void 0:n.position)||"absolute",this.canvas.style.height=e}}_updateCanvasSize(){const{canvas:t}=this;if(!t)return;const e=t.clientWidth||t.width,i=t.clientHeight||t.height;var n;e===this.width&&i===this.height||(this.width=e,this.height=i,null===(n=this.viewManager)||void 0===n||n.setProps({width:e,height:i}),this.props.onResize({width:e,height:i}))}_createAnimationLoop(t){const{width:e,height:i,gl:n,glOptions:o,debug:s,onError:r,onBeforeRender:a,onAfterRender:l,useDevicePixels:c}=t;return new W.Z({width:e,height:i,useDevicePixels:c,autoResizeViewport:!1,gl:n,onCreateContext:t=>(0,g.s9)({...o,...t,canvas:this.canvas,debug:s,onContextLost:()=>this._onContextLost()}),onInitialize:t=>this._setGLContext(t.gl),onRender:this._onRenderFrame.bind(this),onBeforeRender:a,onAfterRender:l,onError:r})}_getViewState(){return this.props.viewState||this.viewState}_getViews(){let t=this.props.views||[new c.Z({id:"default-view"})];return t=Array.isArray(t)?t:[t],t.length&&this.props.controller&&(t[0].props.controller=this.props.controller),t}_onContextLost(){const{onError:t}=this.props;this.animationLoop&&t&&t(new Error("WebGL context is lost"))}_pickAndCallback(){const{_pickRequest:t}=this;if(t.event){const{result:i,emptyInfo:n}=this._pick("pickObject","pickObject Time",t);this.cursorState.isHovering=i.length>0;let o=n,s=!1;for(const n of i){var e;o=n,s=(null===(e=n.layer)||void 0===e?void 0:e.onHover(n,t.event))||s}if(!s&&this.props.onHover&&this.props.onHover(o,t.event),this.props.getTooltip&&this.tooltip){const t=this.props.getTooltip(o);this.tooltip.setTooltip(t,o.x,o.y)}t.event=null}}_updateCursor(){const t=this.props.parent||this.canvas;t&&(t.style.cursor=this.props.getCursor(this.cursorState))}_setGLContext(t){if(this.layerManager)return;this.canvas||(this.canvas=t.canvas,(0,g.yW)(t,{enable:!0,copyState:!0})),this.tooltip=new O(this.canvas),(0,g.dR)(t,{blend:!0,blendFunc:[770,771,1,771],polygonOffsetFill:!0,depthTest:!0,depthFunc:515}),this.props.onWebGLInitialized(t);const e=new G.T;e.play(),this.animationLoop.attachTimeline(e),this.eventManager=new X.Q(this.props.parent||t.canvas,{touchAction:this.props.touchAction,recognizerOptions:this.props.eventRecognizerOptions,events:{pointerdown:this._onPointerDown,pointermove:this._onPointerMove,pointerleave:this._onPointerMove}});for(const t in f.FP)this.eventManager.on(t,this._onEvent);this.viewManager=new l({timeline:e,eventManager:this.eventManager,onViewStateChange:this._onViewStateChange.bind(this),onInteractionStateChange:this._onInteractionStateChange.bind(this),views:this._getViews(),viewState:this._getViewState(),width:this.width,height:this.height});const i=this.viewManager.getViewports()[0];this.layerManager=new o.Z(t,{deck:this,stats:this.stats,viewport:i,timeline:e}),this.effectManager=new b,this.deckRenderer=new S.Z(t),this.deckPicker=new z(t),this.setProps(this.props),this._updateCanvasSize(),this.props.onLoad()}_drawLayers(t,e){const{gl:i}=this.layerManager.context;(0,g.dR)(i,this.props.parameters),this.props.onBeforeRender({gl:i}),this.deckRenderer.renderLayers({target:this.props._framebuffer,layers:this.layerManager.getLayers(),viewports:this.viewManager.getViewports(),onViewportActive:this.layerManager.activateViewport,views:this.viewManager.getViews(),pass:"screen",redrawReason:t,effects:this.effectManager.getEffects(),...e}),this.props.onAfterRender({gl:i})}_onRenderFrame(t){this._getFrameStats(),this._metricsCounter++%60==0&&(this._getMetrics(),this.stats.reset(),r.Z.table(4,this.metrics)(),this.props._onMetrics&&this.props._onMetrics(this.metrics)),this._updateCanvasSize(),this._updateCursor(),this.tooltip.isVisible&&this.viewManager.needsRedraw()&&this.tooltip.setTooltip(null),this.layerManager.updateLayers(),this._pickAndCallback(),this.redraw(),this.viewManager&&this.viewManager.updateViewStates()}_onViewStateChange(t){const e=this.props.onViewStateChange(t)||t.viewState;this.viewState&&(this.viewState={...this.viewState,[t.viewId]:e},this.props.viewState||this.viewManager&&this.viewManager.setProps({viewState:this.viewState}))}_onInteractionStateChange(t){this.cursorState.isDragging=t.isDragging||!1,this.props.onInteractionStateChange(t)}_getFrameStats(){const{stats:t}=this;t.get("frameRate").timeEnd(),t.get("frameRate").timeStart();const e=this.animationLoop.stats;t.get("GPU Time").addTime(e.get("GPU Time").lastTiming),t.get("CPU Time").addTime(e.get("CPU Time").lastTiming)}_getMetrics(){const{metrics:t,stats:e}=this;t.fps=e.get("frameRate").getHz(),t.setPropsTime=e.get("setProps Time").time,t.updateAttributesTime=e.get("Update Attributes").time,t.framesRedrawn=e.get("Redraw Count").count,t.pickTime=e.get("pickObject Time").time+e.get("pickMultipleObjects Time").time+e.get("pickObjects Time").time,t.pickCount=e.get("Pick Count").count,t.gpuTime=e.get("GPU Time").time,t.cpuTime=e.get("CPU Time").time,t.gpuTimePerFrame=e.get("GPU Time").getAverageTime(),t.cpuTimePerFrame=e.get("CPU Time").getAverageTime();const i=H.lR.get("Memory Usage");t.bufferMemory=i.get("Buffer Memory").count,t.textureMemory=i.get("Texture Memory").count,t.renderbufferMemory=i.get("Renderbuffer Memory").count,t.gpuMemory=i.get("GPU Memory").count}}(0,n.Z)(Q,"defaultProps",J),(0,n.Z)(Q,"VERSION",V.VERSION)},3693:(t,e,i)=>{i.d(e,{Z:()=>s});var n=i(4572),o=i(6871);class s{constructor(t){(0,n.Z)(this,"opts",void 0),t&&(this.opts=t)}equals(t){return this===t||this.constructor===t.constructor&&(0,o.v)(this.opts,t.opts)}getShaders(t){return null}getSubLayerProps(t){const{defaultProps:e}=t.constructor,i={updateTriggers:{}};for(const t in e)if(t in this.props){const n=e[t],o=this.props[t];i[t]=o,n&&"accessor"===n.type&&(i.updateTriggers[t]=this.props.updateTriggers[t],"function"==typeof o&&(i[t]=this.getSubLayerAccessor(o)))}return i}initializeState(t,e){}updateState(t,e){}draw(t,e){}finalizeState(t,e){}}(0,n.Z)(s,"defaultProps",{})},5841:(t,e,i)=>{i.d(e,{Z:()=>y});var n=i(4572),o=i(8055),s=i(5409),r=i(744),a=i(3803),l=i(1855),c=i(8295),d=i(8162);class u{constructor(t,e,i){(0,n.Z)(this,"id",void 0),(0,n.Z)(this,"context",void 0),(0,n.Z)(this,"isLoaded",void 0),(0,n.Z)(this,"persistent",void 0),(0,n.Z)(this,"_loadCount",0),(0,n.Z)(this,"_subscribers",new Set),(0,n.Z)(this,"_data",void 0),(0,n.Z)(this,"_loader",void 0),(0,n.Z)(this,"_error",void 0),(0,n.Z)(this,"_content",void 0),this.id=t,this.context=i,this.setData(e)}subscribe(t){this._subscribers.add(t)}unsubscribe(t){this._subscribers.delete(t)}inUse(){return this._subscribers.size>0}delete(){}getData(){return this.isLoaded?this._error?Promise.reject(this._error):this._content:this._loader.then((()=>this.getData()))}setData(t,e){if(t===this._data&&!e)return;this._data=t;const i=++this._loadCount;let n=t;"string"==typeof t&&(n=(0,d.z)(t)),n instanceof Promise?(this.isLoaded=!1,this._loader=n.then((t=>{this._loadCount===i&&(this.isLoaded=!0,this._error=void 0,this._content=t)})).catch((t=>{this._loadCount===i&&(this.isLoaded=!0,this._error=t||!0)}))):(this.isLoaded=!0,this._error=void 0,this._content=t);for(const t of this._subscribers)t.onChange(this.getData())}}class h{constructor({gl:t,protocol:e}){(0,n.Z)(this,"protocol",void 0),(0,n.Z)(this,"_context",void 0),(0,n.Z)(this,"_resources",void 0),(0,n.Z)(this,"_consumers",void 0),(0,n.Z)(this,"_pruneRequest",void 0),this.protocol=e||"resource://",this._context={gl:t,resourceManager:this},this._resources={},this._consumers={},this._pruneRequest=null}contains(t){return!!t.startsWith(this.protocol)||t in this._resources}add({resourceId:t,data:e,forceUpdate:i=!1,persistent:n=!0}){let o=this._resources[t];o?o.setData(e,i):(o=new u(t,e,this._context),this._resources[t]=o),o.persistent=n}remove(t){const e=this._resources[t];e&&(e.delete(),delete this._resources[t])}unsubscribe({consumerId:t}){const e=this._consumers[t];if(e){for(const t in e){const i=e[t],n=this._resources[i.resourceId];n&&n.unsubscribe(i)}delete this._consumers[t],this.prune()}}subscribe({resourceId:t,onChange:e,consumerId:i,requestId:n="default"}){const{_resources:o,protocol:s}=this;t.startsWith(s)&&(o[t=t.replace(s,"")]||this.add({resourceId:t,data:null,persistent:!1}));const r=o[t];if(this._track(i,n,r,e),r)return r.getData()}prune(){this._pruneRequest||(this._pruneRequest=setTimeout((()=>this._prune()),0))}finalize(){for(const t in this._resources)this._resources[t].delete()}_track(t,e,i,n){const o=this._consumers,s=o[t]=o[t]||{},r=s[e]||{},a=r.resourceId&&this._resources[r.resourceId];a&&(a.unsubscribe(r),this.prune()),i&&(s[e]=r,r.onChange=n,r.resourceId=i.id,i.subscribe(r))}_prune(){this._pruneRequest=null;for(const t of Object.keys(this._resources)){const e=this._resources[t];e.persistent||e.inUse()||(e.delete(),delete this._resources[t])}}}var p=i(9225),g=i(1731);const f=[i(3751).Z],m=["vs:DECKGL_FILTER_SIZE(inout vec3 size, VertexGeometry geometry)","vs:DECKGL_FILTER_GL_POSITION(inout vec4 position, VertexGeometry geometry)","vs:DECKGL_FILTER_COLOR(inout vec4 color, VertexGeometry geometry)","fs:DECKGL_FILTER_COLOR(inout vec4 color, FragmentGeometry geometry)"];function v(t){const e=g.Z.getDefaultProgramManager(t);for(const t of f)e.addDefaultModule(t);for(const t of m)e.addShaderHook(t);return e}class y{constructor(t,{deck:e,stats:i,viewport:s,timeline:r}={}){(0,n.Z)(this,"layers",void 0),(0,n.Z)(this,"context",void 0),(0,n.Z)(this,"resourceManager",void 0),(0,n.Z)(this,"_lastRenderedLayers",[]),(0,n.Z)(this,"_needsRedraw",!1),(0,n.Z)(this,"_needsUpdate",!1),(0,n.Z)(this,"_nextLayers",null),(0,n.Z)(this,"_debug",!1),(0,n.Z)(this,"activateViewport",(t=>{(0,a.Z)("layerManager.activateViewport",this,t),t&&(this.context.viewport=t)})),this.layers=[],this.resourceManager=new h({gl:t,protocol:"deck://"}),this.context={mousePosition:null,userData:{},layerManager:this,gl:t,deck:e,programManager:t&&v(t),stats:i||new c.Z({id:"deck.gl"}),viewport:s||new p.Z({id:"DEFAULT-INITIAL-VIEWPORT"}),timeline:r||new o.T,resourceManager:this.resourceManager,onError:void 0},Object.seal(this)}finalize(){this.resourceManager.finalize();for(const t of this.layers)this._finalizeLayer(t)}needsRedraw(t={clearRedrawFlags:!1}){let e=this._needsRedraw;t.clearRedrawFlags&&(this._needsRedraw=!1);for(const i of this.layers){const n=i.getNeedsRedraw(t);e=e||n}return e}needsUpdate(){return this._nextLayers&&this._nextLayers!==this._lastRenderedLayers?"layers changed":this._needsUpdate}setNeedsRedraw(t){this._needsRedraw=this._needsRedraw||t}setNeedsUpdate(t){this._needsUpdate=this._needsUpdate||t}getLayers({layerIds:t}={}){return t?this.layers.filter((e=>t.find((t=>0===e.id.indexOf(t))))):this.layers}setProps(t){"debug"in t&&(this._debug=t.debug),"userData"in t&&(this.context.userData=t.userData),"layers"in t&&(this._nextLayers=t.layers),"onError"in t&&(this.context.onError=t.onError)}setLayers(t,e){(0,a.Z)("layerManager.setLayers",this,e,t),this._lastRenderedLayers=t;const i=(0,l.x)(t,Boolean);for(const t of i)t.context=this.context;this._updateLayers(this.layers,i)}updateLayers(){const t=this.needsUpdate();t&&(this.setNeedsRedraw("updating layers: ".concat(t)),this.setLayers(this._nextLayers||this._lastRenderedLayers,t)),this._nextLayers=null}_handleError(t,e,i){i.raiseError(e,"".concat(t," of ").concat(i))}_updateLayers(t,e){const i={};for(const e of t)i[e.id]?r.Z.warn("Multiple old layers with same id ".concat(e.id))():i[e.id]=e;const n=[];this._updateSublayersRecursively(e,i,n),this._finalizeOldLayers(i);let o=!1;for(const t of n)if(t.hasUniformTransition()){o="Uniform transition in ".concat(t);break}this._needsUpdate=o,this.layers=n}_updateSublayersRecursively(t,e,i){for(const n of t){n.context=this.context;const t=e[n.id];null===t&&r.Z.warn("Multiple new layers with same id ".concat(n.id))(),e[n.id]=null;let o=null;try{this._debug&&t!==n&&n.validateProps(),t?(this._transferLayerState(t,n),this._updateLayer(n)):this._initializeLayer(n),i.push(n),o=n.isComposite?n.getSubLayers():null}catch(t){this._handleError("matching",t,n)}o&&this._updateSublayersRecursively(o,e,i)}}_finalizeOldLayers(t){for(const e in t){const i=t[e];i&&this._finalizeLayer(i)}}_initializeLayer(t){try{t._initialize(),t.lifecycle=s.dt.INITIALIZED}catch(e){this._handleError("initialization",e,t)}}_transferLayerState(t,e){e._transferState(t),e.lifecycle=s.dt.MATCHED,e!==t&&(t.lifecycle=s.dt.AWAITING_GC)}_updateLayer(t){try{t._update()}catch(e){this._handleError("update",e,t)}}_finalizeLayer(t){this._needsRedraw=this._needsRedraw||"finalized ".concat(t),t.lifecycle=s.dt.AWAITING_FINALIZATION;try{t._finalize(),t.lifecycle=s.dt.FINALIZED}catch(e){this._handleError("finalization",e,t)}}}},4185:(t,e,i)=>{i.d(e,{Z:()=>tt});var n=i(4572),o=i(4088),s=i(3518),r=i(9006),a=i(4034),l=i(3630);class c extends l.Z{get value(){return this._value}_onUpdate(){const{time:t,settings:{fromValue:e,toValue:i,duration:n,easing:o}}=this,s=o(t/n);this._value=(0,a.t7)(e,i,s)}}const d=1e-5;function u(t,e,i,n,o){const s=e-t;return(i-e)*o+-s*n+s+e}function h(t,e){if(Array.isArray(t)){let i=0;for(let n=0;n<t.length;n++){const o=t[n]-e[n];i+=o*o}return Math.sqrt(i)}return Math.abs(t-e)}class p extends l.Z{get value(){return this._currValue}_onUpdate(){const{fromValue:t,toValue:e,damping:i,stiffness:n}=this.settings,{_prevValue:o=t,_currValue:s=t}=this;let r=function(t,e,i,n,o){if(Array.isArray(i)){const s=[];for(let r=0;r<i.length;r++)s[r]=u(t[r],e[r],i[r],n,o);return s}return u(t,e,i,n,o)}(o,s,e,i,n);const a=h(r,e),l=h(r,s);a<d&&l<d&&(r=e,this.end()),this._prevValue=s,this._currValue=r}}var g=i(744);const f={interpolation:c,spring:p};class m{constructor(t){this.transitions=new Map,this.timeline=t}get active(){return this.transitions.size>0}add(t,e,i,n){const{transitions:o}=this;if(o.has(t)){const i=o.get(t),{value:n=i.settings.fromValue}=i;e=n,this.remove(t)}if(!(n=(0,r.M0)(n)))return;const s=f[n.type];if(!s)return void g.Z.error("unsupported transition type '".concat(n.type,"'"))();const a=new s(this.timeline);a.start({...n,fromValue:e,toValue:i}),o.set(t,a)}remove(t){const{transitions:e}=this;e.has(t)&&(e.get(t).cancel(),e.delete(t))}update(){const t={};for(const[e,i]of this.transitions)i.update(),t[e]=i.value,i.inProgress||this.remove(e);return t}clear(){for(const t of this.transitions.keys())this.remove(t)}}var v=i(1761),y=i(5409),_=i(5015),x=i(3803),w=i(9450),P=i(5304),b=i(8177),S=i(7870),C=i(8547),M=i(6610),T=i(8550),L=i(4912);const A={10241:9987,10240:9729,10242:33071,10243:33071},Z={};var E=i(6871);const z={boolean:{validate:(t,e)=>!0,equal:(t,e,i)=>Boolean(t)===Boolean(e)},number:{validate:(t,e)=>Number.isFinite(t)&&(!("max"in e)||t<=e.max)&&(!("min"in e)||t>=e.min)},color:{validate:(t,e)=>e.optional&&!t||D(t)&&(3===t.length||4===t.length),equal:(t,e,i)=>I(t,e)},accessor:{validate(t,e){const i=F(t);return"function"===i||i===F(e.value)},equal:(t,e,i)=>"function"==typeof e||I(t,e)},array:{validate:(t,e)=>e.optional&&!t||D(t),equal:(t,e,i)=>i.compare?I(t,e):t===e},object:{equal:(t,e,i)=>i.compare?(0,E.v)(t,e):t===e},function:{validate:(t,e)=>e.optional&&!t||"function"==typeof t,equal:(t,e,i)=>!i.compare||t===e},data:{transform:(t,e,i)=>{const{dataTransform:n}=i.props;return n&&t?n(t):t}},image:{transform:(t,e,i)=>function(t,e){const i=t.context&&t.context.gl;if(!i||!e)return null;if(e instanceof L.Z)return e;e.constructor&&"Object"!==e.constructor.name&&(e={data:e});let n=null;e.compressed&&(n={10241:e.data.length>1?9985:9729});const o=new L.Z(i,{...e,parameters:{...A,...n,...t.props.textureParameters}});return Z[o.id]=!0,o}(i,t),release:t=>{var e;(e=t)&&e instanceof L.Z&&Z[e.id]&&(e.delete(),delete Z[e.id])}}};function I(t,e){if(t===e)return!0;if(!D(t)||!D(e))return!1;const i=t.length;if(i!==e.length)return!1;for(let n=0;n<i;n++)if(t[n]!==e[n])return!1;return!0}function O(t,e){switch(F(e)){case"object":return R(t,e);case"array":return R(t,{type:"array",value:e,compare:!1});case"boolean":return R(t,{type:"boolean",value:e});case"number":return R(t,{type:"number",value:e});case"function":return R(t,{type:"function",value:e,compare:!0});default:return{name:t,type:"unknown",value:e}}}function R(t,e){return"type"in e?{name:t,...z[e.type],...e}:"value"in e?{name:t,type:F(e.value),...e}:{name:t,type:"object",value:e}}function D(t){return Array.isArray(t)||ArrayBuffer.isView(t)}function F(t){return D(t)?"array":null===t?"null":typeof t}function k(t){const e=U(t,"_mergedDefaultProps");return e||(function(t){const e=t.prototype;if(!e)return;const i=Object.getPrototypeOf(t),n=k(i),o=U(t,"defaultProps")||{},s=function(t){const e={},i={},n={};for(const[o,s]of Object.entries(t)){const t=null==s?void 0:s.deprecatedFor;if(t)n[o]=Array.isArray(t)?t:[t];else{const t=O(o,s);e[o]=t,i[o]=t.value}}return{propTypes:e,defaultProps:i,deprecatedProps:n}}(o),r=function(t,e,i){const n=Object.create(null);Object.assign(n,e,t);const o=function(t){const e=U(t,"layerName")||U(t,"componentName");e||g.Z.once(0,"".concat(t.name,".componentName not specified"))();return e||t.name}(i);return delete t.id,Object.defineProperties(n,{id:{writable:!0,value:o}}),n}(s.defaultProps,n,t),a={...i._propTypes,...s.propTypes};!function(t,e){const i={},n={};for(const t in e){const o=e[t],{name:s,value:r}=o;o.async&&(i[s]=r,n[s]=j(s))}t[y.lY]=i,t[y.fO]={},Object.defineProperties(t,n)}(r,a);const l={...i._deprecatedProps,...s.deprecatedProps};(function(t,e){for(const i in e)Object.defineProperty(t,i,{enumerable:!1,set(t){const n="".concat(this.id,": ").concat(i);for(const n of e[i])N(this,n)||(this[n]=t);g.Z.deprecated(n,e[i].join("/"))()}})})(r,l),t._mergedDefaultProps=r,t._propTypes=a,t._deprecatedProps=l}(t),t._mergedDefaultProps)}function j(t){return{enumerable:!0,set(e){"string"==typeof e||e instanceof Promise||(0,T.D0)(e)?this[y.fO][t]=e:this[y.bN][t]=e},get(){if(this[y.bN]){if(t in this[y.bN]){return this[y.bN][t]||this[y.lY][t]}if(t in this[y.fO]){const e=this[y.fm]&&this[y.fm].internalState;if(e&&e.hasAsyncProp(t))return e.getAsyncProp(t)||this[y.lY][t]}}return this[y.lY][t]}}}function N(t,e){return Object.prototype.hasOwnProperty.call(t,e)}function U(t,e){return N(t,e)&&t[e]}let V=0;class B{constructor(...t){(0,n.Z)(this,"id",void 0),(0,n.Z)(this,"props",void 0),(0,n.Z)(this,"count",void 0),this.props=function(t,e){const i=k(t.constructor),n=Object.create(i);n[y.fm]=t,n[y.fO]={},n[y.bN]={};for(let t=0;t<e.length;++t){const i=e[t];for(const t in i)n[t]=i[t]}return Object.freeze(n),n}(this,t),this.id=this.props.id,this.count=V++}clone(t){const{props:e}=this,i={};for(const t in e[y.lY])t in e[y.bN]?i[t]=e[y.bN][t]:t in e[y.fO]&&(i[t]=e[y.fO][t]);return new this.constructor({...e,...i,...t})}}(0,n.Z)(B,"componentName","Component"),(0,n.Z)(B,"defaultProps",{});const W=Object.freeze({});class G{constructor(t){(0,n.Z)(this,"component",void 0),(0,n.Z)(this,"onAsyncPropUpdated",void 0),(0,n.Z)(this,"asyncProps",void 0),(0,n.Z)(this,"oldProps",void 0),(0,n.Z)(this,"oldAsyncProps",void 0),this.component=t,this.asyncProps={},this.onAsyncPropUpdated=()=>{},this.oldProps=null,this.oldAsyncProps=null}finalize(){for(const t in this.asyncProps){const e=this.asyncProps[t];e&&e.type&&e.type.release&&e.type.release(e.resolvedValue,e.type,this.component)}}getOldProps(){return this.oldAsyncProps||this.oldProps||W}resetOldProps(){this.oldAsyncProps=null,this.oldProps=this.component.props}hasAsyncProp(t){return t in this.asyncProps}getAsyncProp(t){const e=this.asyncProps[t];return e&&e.resolvedValue}isAsyncPropLoading(t){if(t){const e=this.asyncProps[t];return Boolean(e&&e.pendingLoadCount>0&&e.pendingLoadCount!==e.resolvedLoadCount)}for(const t in this.asyncProps)if(this.isAsyncPropLoading(t))return!0;return!1}reloadAsyncProp(t,e){this._watchPromise(t,Promise.resolve(e))}setAsyncProps(t){const e=t[y.bN]||{},i=t[y.fO]||t,n=t[y.lY]||{};for(const t in e){const i=e[t];this._createAsyncPropData(t,n[t]),this._updateAsyncProp(t,i),e[t]=this.getAsyncProp(t)}for(const t in i){const e=i[t];this._createAsyncPropData(t,n[t]),this._updateAsyncProp(t,e)}}_fetch(t,e){return null}_onResolve(t,e){}_onError(t,e){}_updateAsyncProp(t,e){this._didAsyncInputValueChange(t,e)&&("string"==typeof e&&(e=this._fetch(t,e)),e instanceof Promise?this._watchPromise(t,e):(0,T.D0)(e)?this._resolveAsyncIterable(t,e):this._setPropValue(t,e))}_freezeAsyncOldProps(){if(!this.oldAsyncProps&&this.oldProps){this.oldAsyncProps=Object.create(this.oldProps);for(const t in this.asyncProps)Object.defineProperty(this.oldAsyncProps,t,{enumerable:!0,value:this.oldProps[t]})}}_didAsyncInputValueChange(t,e){const i=this.asyncProps[t];return e!==i.resolvedValue&&e!==i.lastValue&&(i.lastValue=e,!0)}_setPropValue(t,e){this._freezeAsyncOldProps();const i=this.asyncProps[t];i&&(e=this._postProcessValue(i,e),i.resolvedValue=e,i.pendingLoadCount++,i.resolvedLoadCount=i.pendingLoadCount)}_setAsyncPropValue(t,e,i){const n=this.asyncProps[t];n&&i>=n.resolvedLoadCount&&void 0!==e&&(this._freezeAsyncOldProps(),n.resolvedValue=e,n.resolvedLoadCount=i,this.onAsyncPropUpdated(t,e))}_watchPromise(t,e){const i=this.asyncProps[t];if(i){i.pendingLoadCount++;const n=i.pendingLoadCount;e.then((e=>{e=this._postProcessValue(i,e),this._setAsyncPropValue(t,e,n),this._onResolve(t,e)})).catch((e=>{this._onError(t,e)}))}}async _resolveAsyncIterable(t,e){if("data"!==t)return void this._setPropValue(t,e);const i=this.asyncProps[t];if(!i)return;i.pendingLoadCount++;const n=i.pendingLoadCount;let o=[],s=0;for await(const i of e){const{dataTransform:e}=this.component.props;o=e?e(i,o):o.concat(i),Object.defineProperty(o,"__diff",{enumerable:!1,value:[{startRow:s,endRow:o.length}]}),s=o.length,this._setAsyncPropValue(t,o,n)}this._onResolve(t,o)}_postProcessValue(t,e){const i=t.type;return i&&(i.release&&i.release(t.resolvedValue,i,this.component),i.transform)?i.transform(e,i,this.component):e}_createAsyncPropData(t,e){if(!this.asyncProps[t]){const i=this.component&&this.component.constructor._propTypes;this.asyncProps[t]={type:i&&i[t],lastValue:null,resolvedValue:e,pendingLoadCount:0,resolvedLoadCount:0}}}}class H extends G{constructor({attributeManager:t,layer:e}){super(e),(0,n.Z)(this,"attributeManager",void 0),(0,n.Z)(this,"needsRedraw",void 0),(0,n.Z)(this,"needsUpdate",void 0),(0,n.Z)(this,"subLayers",void 0),(0,n.Z)(this,"usesPickingColorCache",void 0),(0,n.Z)(this,"changeFlags",void 0),(0,n.Z)(this,"viewport",void 0),(0,n.Z)(this,"uniformTransitions",void 0),(0,n.Z)(this,"propsInTransition",void 0),this.attributeManager=t,this.needsRedraw=!0,this.needsUpdate=!0,this.subLayers=null,this.usesPickingColorCache=!1}get layer(){return this.component}set layer(t){this.component=t}_fetch(t,e){const i=this.component.props.fetch;return i?i(e,{propName:t,layer:this.layer}):super._fetch(t,e)}_onResolve(t,e){const i=this.component.props.onDataLoad;"data"===t&&i&&i(e,{propName:t,layer:this.layer})}_onError(t,e){this.layer.raiseError(e,"loading ".concat(t," of ").concat(this.layer))}}var q=i(7013),X=i(8162);const K=2**24-1,Y=Object.freeze([]),J=(0,b.Z)((({oldViewport:t,viewport:e})=>t.equals(e)));let Q=new Uint8ClampedArray(0);const $={data:{type:"data",value:Y,async:!0},dataComparator:{type:"function",value:null,compare:!1,optional:!0},_dataDiff:{type:"function",value:t=>t&&t.__diff,compare:!1,optional:!0},dataTransform:{type:"function",value:null,compare:!1,optional:!0},onDataLoad:{type:"function",value:null,compare:!1,optional:!0},onError:{type:"function",value:null,compare:!1,optional:!0},fetch:{type:"function",value:(t,{propName:e,layer:i,loaders:n,loadOptions:o,signal:s})=>{const{resourceManager:r}=i.context;var a;(o=o||i.getLoadOptions(),n=n||i.props.loaders,s)&&(o={...o,fetch:{...null===(a=o)||void 0===a?void 0:a.fetch,signal:s}});let l=r.contains(t);return l||o||(r.add({resourceId:t,data:(0,X.z)(t,n),persistent:!1}),l=!0),l?r.subscribe({resourceId:t,onChange:t=>{var n;return null===(n=i.internalState)||void 0===n?void 0:n.reloadAsyncProp(e,t)},consumerId:i.id,requestId:e}):(0,X.z)(t,n,o)},compare:!1},updateTriggers:{},visible:!0,pickable:!1,opacity:{type:"number",min:0,max:1,value:1},operation:o.k8.DRAW,onHover:{type:"function",value:null,compare:!1,optional:!0},onClick:{type:"function",value:null,compare:!1,optional:!0},onDragStart:{type:"function",value:null,compare:!1,optional:!0},onDrag:{type:"function",value:null,compare:!1,optional:!0},onDragEnd:{type:"function",value:null,compare:!1,optional:!0},coordinateSystem:o.Df.DEFAULT,coordinateOrigin:{type:"array",value:[0,0,0],compare:!0},modelMatrix:{type:"array",value:null,compare:!0,optional:!0},wrapLongitude:!1,positionFormat:"XYZ",colorFormat:"RGBA",parameters:{type:"object",value:{},optional:!0,compare:!0},transitions:null,extensions:[],loaders:{type:"array",value:[],optional:!0,compare:!0},getPolygonOffset:{type:"function",value:({layerIndex:t})=>[0,100*-t],compare:!1},highlightedObjectIndex:null,autoHighlight:!1,highlightColor:{type:"accessor",value:[0,0,128,128]}};class tt extends B{constructor(...t){super(...t),(0,n.Z)(this,"internalState",null),(0,n.Z)(this,"lifecycle",y.dt.NO_STATE),(0,n.Z)(this,"context",void 0),(0,n.Z)(this,"state",void 0),(0,n.Z)(this,"parent",null)}get root(){let t=this;for(;t.parent;)t=t.parent;return t}toString(){const t=this.constructor.layerName||this.constructor.name;return"".concat(t,"({id: '").concat(this.props.id,"'})")}project(t){(0,P.Z)(this.internalState);const e=this.internalState.viewport||this.context.viewport,i=(0,C.T)(t,{viewport:e,modelMatrix:this.props.modelMatrix,coordinateOrigin:this.props.coordinateOrigin,coordinateSystem:this.props.coordinateSystem}),[n,o,s]=(0,q.aW)(i,e.pixelProjectionMatrix);return 2===t.length?[n,o]:[n,o,s]}unproject(t){(0,P.Z)(this.internalState);return(this.internalState.viewport||this.context.viewport).unproject(t)}projectPosition(t,e){(0,P.Z)(this.internalState);const i=this.internalState.viewport||this.context.viewport;return(0,C.D)(t,{viewport:i,modelMatrix:this.props.modelMatrix,coordinateOrigin:this.props.coordinateOrigin,coordinateSystem:this.props.coordinateSystem,...e})}get isComposite(){return!1}setState(t){this.setChangeFlags({stateChanged:!0}),Object.assign(this.state,t),this.setNeedsRedraw()}setNeedsRedraw(){this.internalState&&(this.internalState.needsRedraw=!0)}setNeedsUpdate(){this.internalState&&(this.context.layerManager.setNeedsUpdate(String(this)),this.internalState.needsUpdate=!0)}get isLoaded(){return!!this.internalState&&!this.internalState.isAsyncPropLoading()}get wrapLongitude(){return this.props.wrapLongitude}isPickable(){return this.props.pickable&&this.props.visible}getModels(){return this.state&&(this.state.models||this.state.model&&[this.state.model])||[]}setModuleParameters(t){for(const e of this.getModels())e.updateModuleSettings(t)}getAttributeManager(){return this.internalState&&this.internalState.attributeManager}getCurrentLayer(){return this.internalState&&this.internalState.layer}getLoadOptions(){return this.props.loadOptions}use64bitPositions(){const{coordinateSystem:t}=this.props;return t===o.Df.DEFAULT||t===o.Df.LNGLAT||t===o.Df.CARTESIAN}onHover(t,e){return this.props.onHover&&this.props.onHover(t,e)||!1}onClick(t,e){return this.props.onClick&&this.props.onClick(t,e)||!1}nullPickingColor(){return[0,0,0]}encodePickingColor(t,e=[]){return e[0]=t+1&255,e[1]=t+1>>8&255,e[2]=t+1>>8>>8&255,e}decodePickingColor(t){(0,P.Z)(t instanceof Uint8Array);const[e,i,n]=t;return e+256*i+65536*n-1}getNumInstances(){return Number.isFinite(this.props.numInstances)?this.props.numInstances:this.state&&void 0!==this.state.numInstances?this.state.numInstances:(0,_.Q)(this.props.data)}getStartIndices(){return this.props.startIndices?this.props.startIndices:this.state&&this.state.startIndices?this.state.startIndices:null}getBounds(){var t;const e=this.getAttributeManager();if(!e)return null;const{positions:i,instancePositions:n}=e.attributes;return null===(t=i||n)||void 0===t?void 0:t.getBounds()}getShaders(t){for(const e of this.props.extensions)t=(0,S.l)(t,e.getShaders.call(this,e));return t}shouldUpdateState(t){return t.changeFlags.propsOrDataChanged}updateState(t){const e=this.getAttributeManager(),{dataChanged:i}=t.changeFlags;if(i&&e)if(Array.isArray(i))for(const t of i)e.invalidateAll(t);else e.invalidateAll();const{props:n,oldProps:o}=t,s=Number.isInteger(o.highlightedObjectIndex)||o.pickable,r=Number.isInteger(n.highlightedObjectIndex)||n.pickable;if(s!==r&&e){const{pickingColors:t,instancePickingColors:i}=e.attributes,n=t||i;n&&(r&&n.constant&&(n.constant=!1,e.invalidate(n.id)),n.value||r||(n.constant=!0,n.value=[0,0,0]))}}finalizeState(t){for(const t of this.getModels())t.delete();const e=this.getAttributeManager();e&&e.finalize(),this.context&&this.context.resourceManager.unsubscribe({consumerId:this.id}),this.internalState&&(this.internalState.uniformTransitions.clear(),this.internalState.finalize())}draw(t){for(const e of this.getModels())e.draw(t)}getPickingInfo({info:t,mode:e,sourceLayer:i}){const{index:n}=t;return n>=0&&Array.isArray(this.props.data)&&(t.object=this.props.data[n]),t}raiseError(t,e){var i,n,o,s;(e&&(t.message="".concat(e,": ").concat(t.message)),null!==(i=(n=this.props).onError)&&void 0!==i&&i.call(n,t))||(null===(o=this.context)||void 0===o||null===(s=o.onError)||void 0===s||s.call(o,t,this))}getNeedsRedraw(t={clearRedrawFlags:!1}){return this._getNeedsRedraw(t)}needsUpdate(){return!!this.internalState&&(this.internalState.needsUpdate||this.hasUniformTransition()||this.shouldUpdateState(this._getUpdateParams()))}hasUniformTransition(){var t;return(null===(t=this.internalState)||void 0===t?void 0:t.uniformTransitions.active)||!1}activateViewport(t){if(!this.internalState)return;const e=this.internalState.viewport;this.internalState.viewport=t,e&&J({oldViewport:e,viewport:t})||(this.setChangeFlags({viewportChanged:!0}),this.isComposite?this.needsUpdate()&&this.setNeedsUpdate():this._update())}invalidateAttribute(t="all"){const e=this.getAttributeManager();e&&("all"===t?e.invalidateAll():e.invalidate(t))}updateAttributes(t){for(const e of this.getModels())this._setModelAttributes(e,t)}_updateAttributes(){const t=this.getAttributeManager();if(!t)return;const e=this.props,i=this.getNumInstances(),n=this.getStartIndices();t.update({data:e.data,numInstances:i,startIndices:n,props:e,transitions:e.transitions,buffers:e.data.attributes,context:this});const o=t.getChangedAttributes({clearChangedFlags:!0});this.updateAttributes(o)}_updateAttributeTransition(){const t=this.getAttributeManager();t&&t.updateTransition()}_updateUniformTransition(){const{uniformTransitions:t}=this.internalState;if(t.active){const e=t.update(),i=Object.create(this.props);for(const t in e)Object.defineProperty(i,t,{value:e[t]});return i}return this.props}calculateInstancePickingColors(t,{numInstances:e}){if(t.constant)return;const i=Math.floor(Q.length/3);if(this.internalState.usesPickingColorCache=!0,i<e){e>K&&g.Z.warn("Layer has too many data objects. Picking might not be able to distinguish all objects.")(),Q=M.Z.allocate(Q,e,{size:3,copy:!0,maxCount:Math.max(e,K)});const t=Math.floor(Q.length/3),n=[];for(let e=i;e<t;e++)this.encodePickingColor(e,n),Q[3*e+0]=n[0],Q[3*e+1]=n[1],Q[3*e+2]=n[2]}t.value=Q.subarray(0,3*e)}_setModelAttributes(t,e){const i=this.getAttributeManager(),n=t.userData.excludeAttributes||{},o=i.getShaderAttributes(e,n);t.setAttributes(o)}disablePickingIndex(t){this._disablePickingIndex(t)}_disablePickingIndex(t){const{pickingColors:e,instancePickingColors:i}=this.getAttributeManager().attributes,n=e||i;if(!n)return;const o=n.getVertexOffset(t),s=n.getVertexOffset(t+1);n.buffer.subData({data:new Uint8Array(s-o),offset:o})}restorePickingColors(){const{pickingColors:t,instancePickingColors:e}=this.getAttributeManager().attributes,i=t||e;i&&(this.internalState.usesPickingColorCache&&i.value.buffer!==Q.buffer&&(i.value=Q.subarray(0,i.value.length)),i.updateSubBuffer({startOffset:0}))}_initialize(){(0,P.Z)(!this.internalState),(0,P.Z)(Number.isFinite(this.props.coordinateSystem)),(0,x.Z)("layer.initialize",this);const t=this._getAttributeManager();t&&t.addInstanced({instancePickingColors:{type:5121,size:3,noAlloc:!0,update:this.calculateInstancePickingColors}}),this.internalState=new H({attributeManager:t,layer:this}),this._clearChangeFlags(),this.state={},Object.defineProperty(this.state,"attributeManager",{get:()=>(g.Z.deprecated("layer.state.attributeManager","layer.getAttributeManager()")(),t)}),this.internalState.layer=this,this.internalState.uniformTransitions=new m(this.context.timeline),this.internalState.onAsyncPropUpdated=this._onAsyncPropUpdated.bind(this),this.internalState.setAsyncProps(this.props),this.initializeState(this.context);for(const t of this.props.extensions)t.initializeState.call(this,this.context,t);this.setChangeFlags({dataChanged:"init",propsChanged:"init",viewportChanged:!0,extensionsChanged:!0}),this._update()}_transferState(t){(0,x.Z)("layer.matched",this,this===t);const{state:e,internalState:i}=t;this!==t&&(this.internalState=i,this.internalState.layer=this,this.state=e,this.internalState.setAsyncProps(this.props),this._diffProps(this.props,this.internalState.getOldProps()))}_update(){const t=this.needsUpdate();if((0,x.Z)("layer.update",this,t),!t)return;const e=this.props,i=this.context,n=this.internalState,o=i.viewport,s=this._updateUniformTransition();n.propsInTransition=s,i.viewport=n.viewport||o,this.props=s;try{const t=this._getUpdateParams(),s=this.getModels();if(i.gl)this.updateState(t);else try{this.updateState(t)}catch(t){}for(const e of this.props.extensions)e.updateState.call(this,t,e);const r=this.getModels()[0]!==s[0];this._postUpdate(t,r)}finally{i.viewport=o,this.props=e,this._clearChangeFlags(),n.needsUpdate=!1,n.resetOldProps()}}_finalize(){(0,x.Z)("layer.finalize",this),this.finalizeState(this.context);for(const t of this.props.extensions)t.finalizeState.call(this,t)}_drawLayer({moduleParameters:t=null,uniforms:e={},parameters:i={}}){this._updateAttributeTransition();const n=this.props,o=this.context;this.props=this.internalState.propsInTransition||n;const s=this.props.opacity;e.opacity=Math.pow(s,1/2.2);try{t&&this.setModuleParameters(t);const{getPolygonOffset:s}=this.props,r=s&&s(e)||[0,0];(0,w.dR)(o.gl,{polygonOffset:r}),(0,w.s8)(o.gl,i,(()=>{const n={moduleParameters:t,uniforms:e,parameters:i,context:o};for(const t of this.props.extensions)t.draw.call(this,n,t);this.draw(n)}))}finally{this.props=n}}getChangeFlags(){var t;return null===(t=this.internalState)||void 0===t?void 0:t.changeFlags}setChangeFlags(t){if(!this.internalState)return;const{changeFlags:e}=this.internalState;for(const i in t)if(t[i]){let n=!1;if("dataChanged"===i){const o=t[i],s=e[i];o&&Array.isArray(s)&&(e.dataChanged=Array.isArray(o)?s.concat(o):o,n=!0)}e[i]||(e[i]=t[i],n=!0),n&&(0,x.Z)("layer.changeFlag",this,i,t)}const i=Boolean(e.dataChanged||e.updateTriggersChanged||e.propsChanged||e.extensionsChanged);e.propsOrDataChanged=i,e.somethingChanged=i||e.viewportChanged||e.stateChanged}_clearChangeFlags(){this.internalState.changeFlags={dataChanged:!1,propsChanged:!1,updateTriggersChanged:!1,viewportChanged:!1,stateChanged:!1,extensionsChanged:!1,propsOrDataChanged:!1,somethingChanged:!1}}_diffProps(t,e){const i=(0,v.Yt)(t,e);if(i.updateTriggersChanged)for(const t in i.updateTriggersChanged)i.updateTriggersChanged[t]&&this.invalidateAttribute(t);if(i.transitionsChanged)for(const o in i.transitionsChanged){var n;this.internalState.uniformTransitions.add(o,e[o],t[o],null===(n=t.transitions)||void 0===n?void 0:n[o])}return this.setChangeFlags(i)}validateProps(){(0,v.eQ)(this.props)}updateAutoHighlight(t){this.props.autoHighlight&&!Number.isInteger(this.props.highlightedObjectIndex)&&this._updateAutoHighlight(t)}_updateAutoHighlight(t){const e={pickingSelectedColor:t.picked?t.color:null},{highlightColor:i}=this.props;t.picked&&"function"==typeof i&&(e.pickingHighlightColor=i(t)),this.setModuleParameters(e),this.setNeedsRedraw()}_getAttributeManager(){const t=this.context;return new s.Z(t.gl,{id:this.props.id,stats:t.stats,timeline:t.timeline})}_postUpdate(t,e){const{props:i,oldProps:n}=t;this.setNeedsRedraw(),this._updateAttributes();const{model:o}=this.state;null==o||o.setInstanceCount(this.getNumInstances());const{autoHighlight:s,highlightedObjectIndex:r,highlightColor:a}=i;if(e||n.autoHighlight!==s||n.highlightedObjectIndex!==r||n.highlightColor!==a){const t={};s||(t.pickingSelectedColor=null),Array.isArray(a)&&(t.pickingHighlightColor=a),(e||r!==n.highlightedObjectIndex)&&(t.pickingSelectedColor=Number.isFinite(r)&&r>=0?this.encodePickingColor(r):null),this.setModuleParameters(t)}}_getUpdateParams(){return{props:this.props,oldProps:this.internalState.getOldProps(),context:this.context,changeFlags:this.internalState.changeFlags}}_getNeedsRedraw(t){if(!this.internalState)return!1;let e=!1;e=e||this.internalState.needsRedraw&&this.id,this.internalState.needsRedraw=this.internalState.needsRedraw&&!t.clearRedrawFlags;const i=this.getAttributeManager(),n=!!i&&i.getNeedsRedraw(t);return e=e||n,e}_onAsyncPropUpdated(){this._diffProps(this.props,this.internalState.getOldProps()),this.setNeedsUpdate()}}(0,n.Z)(tt,"defaultProps",$),(0,n.Z)(tt,"layerName","Layer")},5409:(t,e,i)=>{i.d(e,{bN:()=>a,dt:()=>n,fO:()=>r,fm:()=>o,lY:()=>s});const n={NO_STATE:"Awaiting state",MATCHED:"Matched. State transferred from previous layer",INITIALIZED:"Initialized",AWAITING_GC:"Discarded. Awaiting garbage collection",AWAITING_FINALIZATION:"No longer matched. Awaiting garbage collection",FINALIZED:"Finalized! Awaiting garbage collection"},o=Symbol.for("component"),s=Symbol.for("asyncPropDefaults"),r=Symbol.for("asyncPropOriginal"),a=Symbol.for("asyncPropResolved")},1761:(t,e,i)=>{i.d(e,{Yt:()=>s,eQ:()=>o,tg:()=>a});var n=i(5409);function o(t){const e=u(t);for(const i in e){const n=e[i],{validate:o}=n;if(o&&!o(t[i],n))throw new Error("Invalid prop ".concat(i,": ").concat(t[i]))}}function s(t,e){const i=a({newProps:t,oldProps:e,propTypes:u(t),ignoreProps:{data:null,updateTriggers:null,extensions:null,transitions:null}}),n=function(t,e){if(null===e)return"oldProps is null, initial diff";let i=!1;const{dataComparator:n,_dataDiff:o}=t;n?n(t.data,e.data)||(i="Data comparator detected a change"):t.data!==e.data&&(i="A new data container was supplied");i&&o&&(i=o(t.data,e.data)||i);return i}(t,e);let o=!1;return n||(o=function(t,e){if(null===e)return{all:!0};if("all"in t.updateTriggers){if(d(t,e,"all"))return{all:!0}}const i={};let n=!1;for(const o in t.updateTriggers)if("all"!==o){d(t,e,o)&&(i[o]=!0,n=!0)}return!!n&&i}(t,e)),{dataChanged:n,propsChanged:i,updateTriggersChanged:o,extensionsChanged:c(t,e),transitionsChanged:r(t,e)}}function r(t,e){if(!t.transitions)return!1;const i={},n=u(t);let o=!1;for(const s in t.transitions){const r=n[s],a=r&&r.type;("number"===a||"color"===a||"array"===a)&&l(t[s],e[s],r)&&(i[s]=!0,o=!0)}return!!o&&i}function a({newProps:t,oldProps:e,ignoreProps:i={},propTypes:n={},triggerName:o="props"}){if(e===t)return!1;if("object"!=typeof t||null===t)return"".concat(o," changed shallowly");if("object"!=typeof e||null===e)return"".concat(o," changed shallowly");for(const s of Object.keys(t))if(!(s in i)){if(!(s in e))return"".concat(o,".").concat(s," added");const i=l(t[s],e[s],n[s]);if(i)return"".concat(o,".").concat(s," ").concat(i)}for(const s of Object.keys(e))if(!(s in i)){if(!(s in t))return"".concat(o,".").concat(s," dropped");if(!Object.hasOwnProperty.call(t,s)){const i=l(t[s],e[s],n[s]);if(i)return"".concat(o,".").concat(s," ").concat(i)}}return!1}function l(t,e,i){let n=i&&i.equal;return n&&!n(t,e,i)?"changed deeply":n||(n=t&&e&&t.equals,!n||n.call(t,e))?n||e===t?null:"changed shallowly":"changed deeply"}function c(t,e){if(null===e)return!0;const i=e.extensions,{extensions:n}=t;if(n===i)return!1;if(!i||!n)return!0;if(n.length!==i.length)return!0;for(let t=0;t<n.length;t++)if(!n[t].equals(i[t]))return!0;return!1}function d(t,e,i){let n=t.updateTriggers[i];n=null==n?{}:n;let o=e.updateTriggers[i];o=null==o?{}:o;return a({oldProps:o,newProps:n,triggerName:i})}function u(t){const e=t[n.fm],i=e&&e.constructor;return i?i._propTypes:{}}},3182:(t,e,i)=>{i.d(e,{Z:()=>a});var n=i(4572),o=i(830),s=i(9450),r=i(6047);class a extends o.Z{constructor(...t){super(...t),(0,n.Z)(this,"_lastRenderIndex",-1)}render(t){const e=this.gl;return(0,s.dR)(e,{framebuffer:t.target}),this._drawLayers(t)}_drawLayers(t){const{target:e,moduleParameters:i,viewports:n,views:o,onViewportActive:r,clearStack:a=!0,clearCanvas:l=!0}=t;t.pass=t.pass||"unknown";const c=this.gl;l&&function(t){const e=t.drawingBufferWidth,i=t.drawingBufferHeight;(0,s.dR)(t,{viewport:[0,0,e,i]}),t.clear(16640)}(c),a&&(this._lastRenderIndex=-1);const d=[];for(const s of n){const n=o&&o[s.id];r(s);const a=this._getDrawLayerParams(s,t),l=s.subViewports||[s];for(const o of l){const s=this._drawLayersInViewport(c,{target:e,moduleParameters:i,viewport:o,view:n,pass:t.pass,layers:t.layers},a);d.push(s)}}return d}_getDrawLayerParams(t,{layers:e,pass:i,layerFilter:n,cullRect:o,effects:s,moduleParameters:r}){const a=[],c=l(this._lastRenderIndex+1),d={layer:e[0],viewport:t,isPicking:i.startsWith("picking"),renderPass:i,cullRect:o},u={};for(let o=0;o<e.length;o++){const l=e[o],h=this._shouldDrawLayer(l,d,n,u),p={shouldDrawLayer:h};h&&(p.layerRenderIndex=c(l,h),p.moduleParameters=this._getModuleParameters(l,s,i,r),p.layerParameters=this.getLayerParameters(l,o,t)),a[o]=p}return a}_drawLayersInViewport(t,{layers:e,moduleParameters:i,pass:n,target:o,viewport:a,view:l},c){const d=function(t,{moduleParameters:e,target:i,viewport:n}){const o=i&&"default-framebuffer"!==i.id,r=e&&e.devicePixelRatio||(0,s.w)(t),a=o?i.height:t.drawingBufferHeight,l=n;return[l.x*r,a-(l.y+l.height)*r,l.width*r,l.height*r]}(t,{moduleParameters:i,target:o,viewport:a});if(l&&l.props.clear){const e=!0===l.props.clear?{color:!0,depth:!0}:l.props.clear;(0,s.s8)(t,{scissorTest:!0,scissor:d},(()=>(0,r.Z)(t,e)))}const u={totalCount:e.length,visibleCount:0,compositeCount:0,pickableCount:0};(0,s.dR)(t,{viewport:d});for(let t=0;t<e.length;t++){const i=e[t],{shouldDrawLayer:o,layerRenderIndex:s,moduleParameters:r,layerParameters:l}=c[t];if(o&&i.props.pickable&&u.pickableCount++,i.isComposite)u.compositeCount++;else if(o){u.visibleCount++,this._lastRenderIndex=Math.max(this._lastRenderIndex,s),r.viewport=a;try{i._drawLayer({moduleParameters:r,uniforms:{layerIndex:s},parameters:l})}catch(t){i.raiseError(t,"drawing ".concat(i," to ").concat(n))}}}return u}shouldDrawLayer(t){return!0}getModuleParameters(t,e){return null}getLayerParameters(t,e,i){return t.props.parameters}_shouldDrawLayer(t,e,i,n){if(!(t.props.visible&&this.shouldDrawLayer(t)))return!1;e.layer=t;let o=t.parent;for(;o;){if(!o.props.visible||!o.filterSubLayer(e))return!1;e.layer=o,o=o.parent}if(i){const t=e.layer.id;if(t in n||(n[t]=i(e)),!n[t])return!1}return t.activateViewport(e.viewport),!0}_getModuleParameters(t,e,i,n){var o;const r=Object.assign(Object.create((null===(o=t.internalState)||void 0===o?void 0:o.propsInTransition)||t.props),{autoWrapLongitude:t.wrapLongitude,viewport:t.context.viewport,mousePosition:t.context.mousePosition,pickingActive:0,devicePixelRatio:(0,s.w)(this.gl)});if(e)for(const i of e){var a;Object.assign(r,null===(a=i.getModuleParameters)||void 0===a?void 0:a.call(i,t))}return Object.assign(r,this.getModuleParameters(t,e),n)}}function l(t=0,e={}){const i={},n=(o,s)=>{const r=o.props._offset,a=o.id,c=o.parent&&o.parent.id;let d;if(c&&!(c in e)&&n(o.parent,!1),c in i){const t=i[c]=i[c]||l(e[c],e);d=t(o,s),i[a]=t}else Number.isFinite(r)?(d=r+(e[c]||0),i[a]=null):d=t;return s&&d>=t&&(t=d+1),e[a]=d,d};return n}},830:(t,e,i)=>{i.d(e,{Z:()=>o});var n=i(4572);class o{constructor(t,e={id:"pass"}){(0,n.Z)(this,"id",void 0),(0,n.Z)(this,"gl",void 0),(0,n.Z)(this,"props",void 0);const{id:i}=e;this.id=i,this.gl=t,this.props={...e}}setProps(t){Object.assign(this.props,t)}render(t){}cleanup(){}}},930:(t,e,i)=>{i.d(e,{Z:()=>c});var n=i(4572),o=i(3182),s=i(9450),r=i(4088),a=i(744);const l={blendFunc:[1,0,32771,0],blendEquation:32774};class c extends o.Z{constructor(...t){super(...t),(0,n.Z)(this,"pickZ",void 0),(0,n.Z)(this,"_colors",null)}render(t){return t.pickingFBO?this._drawPickingBuffer(t):super.render(t)}_drawPickingBuffer({layers:t,layerFilter:e,views:i,viewports:n,onViewportActive:o,pickingFBO:r,deviceRect:{x:a,y:c,width:u,height:h},cullRect:p,effects:g,pass:f="picking",pickZ:m}){const v=this.gl;this.pickZ=m;const y=m?null:{byLayer:new Map,byAlpha:[]};this._colors=y;const _=(0,s.s8)(v,{scissorTest:!0,scissor:[a,c,u,h],clearColor:[0,0,0,0],depthMask:!0,depthTest:!0,depthRange:[0,1],colorMask:[!0,!0,!0,!0],...l,blend:!m},(()=>super.render({target:r,layers:t,layerFilter:e,views:i,viewports:n,onViewportActive:o,cullRect:p,effects:null==g?void 0:g.filter((t=>t.useInPicking)),pass:f})));this._colors=null;return{decodePickingColor:y&&d.bind(null,y),stats:_}}shouldDrawLayer(t){return t.props.pickable&&t.props.operation===r.k8.DRAW}getModuleParameters(){return{pickingActive:1,pickingAttribute:this.pickZ,lightSources:{}}}getLayerParameters(t,e,i){const n={...t.props.parameters};return this._colors?(Object.assign(n,l),n.blend=!0,n.blendColor=function(t,e,i){const{byLayer:n,byAlpha:o}=t;let s,r=n.get(e);r?(r.viewports.push(i),s=r.a):(s=n.size+1,s<=255?(r={a:s,layer:e,viewports:[i]},n.set(e,r),o[s]=r):(a.Z.warn("Too many pickable layers, only picking the first 255")(),s=0));return[0,0,0,s/255]}(this._colors,t,i)):n.blend=!1,n}}function d(t,e){const i=t.byAlpha[e[3]];return i&&{pickedLayer:i.layer,pickedViewports:i.viewports,pickedObjectIndex:i.layer.decodePickingColor(e)}}},3117:(t,e,i)=>{i.d(e,{Z:()=>n});const n={inject:{"vs:DECKGL_FILTER_GL_POSITION":"\n    // for picking depth values\n    picking_setPickingAttribute(position.z / position.w);\n  ","vs:DECKGL_FILTER_COLOR":"\n  picking_setPickingColor(geometry.pickingColor);\n  ","fs:DECKGL_FILTER_COLOR":{order:99,injection:"\n  // use highlight color if this fragment belongs to the selected object.\n  color = picking_filterHighlightColor(color);\n\n  // use picking color if rendering to picking FBO.\n  color = picking_filterPickingColor(color);\n    "}},...i(3330).q}},8547:(t,e,i)=>{i.d(e,{D:()=>u,T:()=>d});var n=i(4088),o=i(8771),s=i(6935),r=i(8333),a=i(7160),l=i(7013);function c(t,e,i=!1){const n=e.projectPosition(t);if(i&&e instanceof s.Z){const[i,o,s=0]=t,r=e.getDistanceScales([i,o]);n[2]=s*r.unitsPerMeter[2]}return n}function d(t,{viewport:e,modelMatrix:i,coordinateSystem:o,coordinateOrigin:s,offsetMode:a}){let[d,u,h=0]=t;switch(i&&([d,u,h]=r.fF([],[d,u,h,1],i)),o){case n.Df.LNGLAT:return c([d,u,h],e,a);case n.Df.LNGLAT_OFFSETS:return c([d+s[0],u+s[1],h+(s[2]||0)],e,a);case n.Df.METER_OFFSETS:return c((0,l.eG)(s,[d,u,h]),e,a);case n.Df.CARTESIAN:default:return e.isGeospatial?[d+s[0],u+s[1],h+s[2]]:e.projectPosition([d,u,h])}}function u(t,e){const{viewport:i,coordinateSystem:s,coordinateOrigin:r,modelMatrix:l,fromCoordinateSystem:c,fromCoordinateOrigin:u}=function(t){const{viewport:e,modelMatrix:i,coordinateOrigin:o}=t;let{coordinateSystem:s,fromCoordinateSystem:r,fromCoordinateOrigin:a}=t;return s===n.Df.DEFAULT&&(s=e.isGeospatial?n.Df.LNGLAT:n.Df.CARTESIAN),void 0===r&&(r=s),void 0===a&&(a=o),{viewport:e,coordinateSystem:s,coordinateOrigin:o,modelMatrix:i,fromCoordinateSystem:r,fromCoordinateOrigin:a}}(e),{geospatialOrigin:h,shaderCoordinateOrigin:p,offsetMode:g}=(0,o.v)(i,s,r),f=d(t,{viewport:i,modelMatrix:l,coordinateSystem:c,coordinateOrigin:u,offsetMode:g});if(g){const t=i.projectPosition(h||p);a.lu(f,f,t)}return f}},3751:(t,e,i)=>{i.d(e,{Z:()=>p});var n=i(5502);const o="#define SMOOTH_EDGE_RADIUS 0.5",s={name:"geometry",vs:"\n".concat(o,"\n\nstruct VertexGeometry {\n  vec4 position;\n  vec3 worldPosition;\n  vec3 worldPositionAlt;\n  vec3 normal;\n  vec2 uv;\n  vec3 pickingColor;\n} geometry = VertexGeometry(\n  vec4(0.0, 0.0, 1.0, 0.0),\n  vec3(0.0),\n  vec3(0.0),\n  vec3(0.0),\n  vec2(0.0),\n  vec3(0.0)\n);\n"),fs:"\n".concat(o,"\n\nstruct FragmentGeometry {\n  vec2 uv;\n} geometry;\n\nfloat smoothedge(float edge, float x) {\n  return smoothstep(edge - SMOOTH_EDGE_RADIUS, edge + SMOOTH_EDGE_RADIUS, x);\n}\n")};var r=i(4088);const a=Object.keys(r.Df).map((t=>"const int COORDINATE_SYSTEM_".concat(t," = ").concat(r.Df[t],";"))).join(""),l=Object.keys(r.zG).map((t=>"const int PROJECTION_MODE_".concat(t," = ").concat(r.zG[t],";"))).join(""),c=Object.keys(r.iI).map((t=>"const int UNIT_".concat(t.toUpperCase()," = ").concat(r.iI[t],";"))).join(""),d="".concat(a,"\n").concat(l,"\n").concat(c,'\n\nuniform int project_uCoordinateSystem;\nuniform int project_uProjectionMode;\nuniform float project_uScale;\nuniform bool project_uWrapLongitude;\nuniform vec3 project_uCommonUnitsPerMeter;\nuniform vec3 project_uCommonUnitsPerWorldUnit;\nuniform vec3 project_uCommonUnitsPerWorldUnit2;\nuniform vec4 project_uCenter;\nuniform mat4 project_uModelMatrix;\nuniform mat4 project_uViewProjectionMatrix;\nuniform vec2 project_uViewportSize;\nuniform float project_uDevicePixelRatio;\nuniform float project_uFocalDistance;\nuniform vec3 project_uCameraPosition;\nuniform vec3 project_uCoordinateOrigin;\nuniform vec3 project_uCommonOrigin;\nuniform bool project_uPseudoMeters;\n\nconst float TILE_SIZE = 512.0;\nconst float PI = 3.1415926536;\nconst float WORLD_SCALE = TILE_SIZE / (PI * 2.0);\nconst vec3 ZERO_64_LOW = vec3(0.0);\nconst float EARTH_RADIUS = 6370972.0; // meters\nconst float GLOBE_RADIUS = 256.0;\n\n// returns an adjustment factor for uCommonUnitsPerMeter\nfloat project_size_at_latitude(float lat) {\n  float y = clamp(lat, -89.9, 89.9);\n  return 1.0 / cos(radians(y));\n}\n\nfloat project_size() {\n  if (project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR &&\n    project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT &&\n    project_uPseudoMeters == false) {\n\n    // uCommonUnitsPerMeter in low-zoom Web Mercator is non-linear\n    // Adjust by 1 / cos(latitude)\n    // If geometry.position (vertex in common space) is populated, use it\n    // Otherwise use geometry.worldPosition (anchor in world space)\n    \n    if (geometry.position.w == 0.0) {\n      return project_size_at_latitude(geometry.worldPosition.y);\n    }\n\n    // latitude from common y: 2.0 * (atan(exp(y / TILE_SIZE * 2.0 * PI - PI)) - PI / 4.0)\n    // Taylor series of 1 / cos(latitude)\n    // Max error < 0.003\n  \n    float y = geometry.position.y / TILE_SIZE * 2.0 - 1.0;\n    float y2 = y * y;\n    float y4 = y2 * y2;\n    float y6 = y4 * y2;\n    return 1.0 + 4.9348 * y2 + 4.0587 * y4 + 1.5642 * y6;\n  }\n  return 1.0;\n}\n\nfloat project_size_at_latitude(float meters, float lat) {\n  return meters * project_uCommonUnitsPerMeter.z * project_size_at_latitude(lat);\n}\n\n//\n// Scaling offsets - scales meters to "world distance"\n// Note the scalar version of project_size is for scaling the z component only\n//\nfloat project_size(float meters) {\n  return meters * project_uCommonUnitsPerMeter.z * project_size();\n}\n\nvec2 project_size(vec2 meters) {\n  return meters * project_uCommonUnitsPerMeter.xy * project_size();\n}\n\nvec3 project_size(vec3 meters) {\n  return meters * project_uCommonUnitsPerMeter * project_size();\n}\n\nvec4 project_size(vec4 meters) {\n  return vec4(meters.xyz * project_uCommonUnitsPerMeter, meters.w);\n}\n\n// Get rotation matrix that aligns the z axis with the given up vector\n// Find 3 unit vectors ux, uy, uz that are perpendicular to each other and uz == up\nmat3 project_get_orientation_matrix(vec3 up) {\n  vec3 uz = normalize(up);\n  // Tangent on XY plane\n  vec3 ux = abs(uz.z) == 1.0 ? vec3(1.0, 0.0, 0.0) : normalize(vec3(uz.y, -uz.x, 0));\n  vec3 uy = cross(uz, ux);\n  return mat3(ux, uy, uz);\n}\n\nbool project_needs_rotation(vec3 commonPosition, out mat3 transform) {\n  if (project_uProjectionMode == PROJECTION_MODE_GLOBE) {\n    transform = project_get_orientation_matrix(commonPosition);\n    return true;\n  }\n  return false;\n}\n\n//\n// Projecting normal - transform deltas from current coordinate system to\n// normals in the worldspace\n//\nvec3 project_normal(vec3 vector) {\n  // Apply model matrix\n  vec4 normal_modelspace = project_uModelMatrix * vec4(vector, 0.0);\n  vec3 n = normalize(normal_modelspace.xyz * project_uCommonUnitsPerMeter);\n  mat3 rotation;\n  if (project_needs_rotation(geometry.position.xyz, rotation)) {\n    n = rotation * n;\n  }\n  return n;\n}\n\nvec4 project_offset_(vec4 offset) {\n  float dy = offset.y;\n  vec3 commonUnitsPerWorldUnit = project_uCommonUnitsPerWorldUnit + project_uCommonUnitsPerWorldUnit2 * dy;\n  return vec4(offset.xyz * commonUnitsPerWorldUnit, offset.w);\n}\n\n//\n// Projecting positions - non-linear projection: lnglats => unit tile [0-1, 0-1]\n//\nvec2 project_mercator_(vec2 lnglat) {\n  float x = lnglat.x;\n  if (project_uWrapLongitude) {\n    x = mod(x + 180., 360.0) - 180.;\n  }\n  float y = clamp(lnglat.y, -89.9, 89.9);\n  return vec2(\n    radians(x) + PI,\n    PI + log(tan_fp32(PI * 0.25 + radians(y) * 0.5))\n  ) * WORLD_SCALE;\n}\n\nvec3 project_globe_(vec3 lnglatz) {\n  float lambda = radians(lnglatz.x);\n  float phi = radians(lnglatz.y);\n  float cosPhi = cos(phi);\n  float D = (lnglatz.z / EARTH_RADIUS + 1.0) * GLOBE_RADIUS;\n\n  return vec3(\n    sin(lambda) * cosPhi,\n    -cos(lambda) * cosPhi,\n    sin(phi)\n  ) * D;\n}\n\n//\n// Projects positions (defined by project_uCoordinateSystem) to common space (defined by project_uProjectionMode)\n//\nvec4 project_position(vec4 position, vec3 position64Low) {\n  vec4 position_world = project_uModelMatrix * position;\n\n  // Work around for a Mac+NVIDIA bug https://github.com/visgl/deck.gl/issues/4145\n  if (project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR) {\n    if (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n      return vec4(\n        project_mercator_(position_world.xy),\n        project_size_at_latitude(position_world.z, position_world.y),\n        position_world.w\n      );\n    }\n    if (project_uCoordinateSystem == COORDINATE_SYSTEM_CARTESIAN) {\n      position_world.xyz += project_uCoordinateOrigin;\n    }\n  }\n  if (project_uProjectionMode == PROJECTION_MODE_GLOBE) {\n    if (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n      return vec4(\n        project_globe_(position_world.xyz),\n        position_world.w\n      );\n    }\n  }\n  if (project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET) {\n    if (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n      if (abs(position_world.y - project_uCoordinateOrigin.y) > 0.25) {\n        // Too far from the projection center for offset mode to be accurate\n        // Only use high parts\n        return vec4(\n          project_mercator_(position_world.xy) - project_uCommonOrigin.xy,\n          project_size(position_world.z),\n          position_world.w\n        );\n      }\n    }\n  }\n  if (project_uProjectionMode == PROJECTION_MODE_IDENTITY ||\n    (project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET &&\n    (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT ||\n     project_uCoordinateSystem == COORDINATE_SYSTEM_CARTESIAN))) {\n    // Subtract high part of 64 bit value. Convert remainder to float32, preserving precision.\n    position_world.xyz -= project_uCoordinateOrigin;\n  }\n\n  // Translation is already added to the high parts\n  return project_offset_(position_world + project_uModelMatrix * vec4(position64Low, 0.0));\n}\n\nvec4 project_position(vec4 position) {\n  return project_position(position, ZERO_64_LOW);\n}\n\nvec3 project_position(vec3 position, vec3 position64Low) {\n  vec4 projected_position = project_position(vec4(position, 1.0), position64Low);\n  return projected_position.xyz;\n}\n\nvec3 project_position(vec3 position) {\n  vec4 projected_position = project_position(vec4(position, 1.0), ZERO_64_LOW);\n  return projected_position.xyz;\n}\n\nvec2 project_position(vec2 position) {\n  vec4 projected_position = project_position(vec4(position, 0.0, 1.0), ZERO_64_LOW);\n  return projected_position.xy;\n}\n\nvec4 project_common_position_to_clipspace(vec4 position, mat4 viewProjectionMatrix, vec4 center) {\n  return viewProjectionMatrix * position + center;\n}\n\n//\n// Projects from common space coordinates to clip space.\n// Uses project_uViewProjectionMatrix\n//\nvec4 project_common_position_to_clipspace(vec4 position) {\n  return project_common_position_to_clipspace(position, project_uViewProjectionMatrix, project_uCenter);\n}\n\n// Returns a clip space offset that corresponds to a given number of screen pixels\nvec2 project_pixel_size_to_clipspace(vec2 pixels) {\n  vec2 offset = pixels / project_uViewportSize * project_uDevicePixelRatio * 2.0;\n  return offset * project_uFocalDistance;\n}\n\nfloat project_size_to_pixel(float meters) {\n  return project_size(meters) * project_uScale;\n}\nfloat project_size_to_pixel(float size, int unit) {\n  if (unit == UNIT_METERS) return project_size_to_pixel(size);\n  if (unit == UNIT_COMMON) return size * project_uScale;\n  // UNIT_PIXELS\n  return size;\n}\nfloat project_pixel_size(float pixels) {\n  return pixels / project_uScale;\n}\nvec2 project_pixel_size(vec2 pixels) {\n  return pixels / project_uScale;\n}\n');var u=i(8771);const h={};const p={name:"project",dependencies:[n.O,s],vs:d,getUniforms:function(t=h){return"viewport"in t?(0,u.C)(t):{}}}},8771:(t,e,i)=>{i.d(e,{C:()=>g,v:()=>p});var n=i(5975),o=i(8333),s=i(4088),r=i(8177);const a=[0,0,0,0],l=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0],c=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],d=[0,0,0],u=[0,0,0],h=(0,r.Z)((function({viewport:t,devicePixelRatio:e,coordinateSystem:i,coordinateOrigin:r}){const{projectionCenter:u,viewProjectionMatrix:h,originCommon:g,cameraPosCommon:f,shaderCoordinateOrigin:m,geospatialOrigin:v}=function(t,e,i){const{viewMatrixUncentered:s,projectionMatrix:r}=t;let{viewMatrix:c,viewProjectionMatrix:d}=t,u=a,h=a,g=t.cameraPosition;const{geospatialOrigin:f,shaderCoordinateOrigin:m,offsetMode:v}=p(t,e,i);v&&(h=t.projectPosition(f||m),g=[g[0]-h[0],g[1]-h[1],g[2]-h[2]],h[3]=1,u=o.fF([],h,d),c=s||c,d=n.Jp([],r,c),d=n.Jp([],d,l));return{viewMatrix:c,viewProjectionMatrix:d,projectionCenter:u,originCommon:h,cameraPosCommon:g,shaderCoordinateOrigin:m,geospatialOrigin:f}}(t,i,r),y=t.getDistanceScales(),_=[t.width*e,t.height*e],x=o.fF([],[0,0,-t.focalDistance,1],t.projectionMatrix)[3]||1,w={project_uCoordinateSystem:i,project_uProjectionMode:t.projectionMode,project_uCoordinateOrigin:m,project_uCommonOrigin:g.slice(0,3),project_uCenter:u,project_uPseudoMeters:Boolean(t._pseudoMeters),project_uViewportSize:_,project_uDevicePixelRatio:e,project_uFocalDistance:x,project_uCommonUnitsPerMeter:y.unitsPerMeter,project_uCommonUnitsPerWorldUnit:y.unitsPerMeter,project_uCommonUnitsPerWorldUnit2:d,project_uScale:t.scale,project_uWrapLongitude:!1,project_uViewProjectionMatrix:h,project_uModelMatrix:c,project_uCameraPosition:f};if(v){const e=t.getDistanceScales(v);switch(i){case s.Df.METER_OFFSETS:w.project_uCommonUnitsPerWorldUnit=e.unitsPerMeter,w.project_uCommonUnitsPerWorldUnit2=e.unitsPerMeter2;break;case s.Df.LNGLAT:case s.Df.LNGLAT_OFFSETS:t._pseudoMeters||(w.project_uCommonUnitsPerMeter=e.unitsPerMeter),w.project_uCommonUnitsPerWorldUnit=e.unitsPerDegree,w.project_uCommonUnitsPerWorldUnit2=e.unitsPerDegree2;break;case s.Df.CARTESIAN:w.project_uCommonUnitsPerWorldUnit=[1,1,e.unitsPerMeter[2]],w.project_uCommonUnitsPerWorldUnit2=[0,0,e.unitsPerMeter2[2]]}}return w}));function p(t,e,i=u){i.length<3&&(i=[i[0],i[1],0]);let n,o=i,r=!0;switch(n=e===s.Df.LNGLAT_OFFSETS||e===s.Df.METER_OFFSETS?i:t.isGeospatial?[Math.fround(t.longitude),Math.fround(t.latitude),0]:null,t.projectionMode){case s.zG.WEB_MERCATOR:e!==s.Df.LNGLAT&&e!==s.Df.CARTESIAN||(n=[0,0,0],r=!1);break;case s.zG.WEB_MERCATOR_AUTO_OFFSET:e===s.Df.LNGLAT?o=n:e===s.Df.CARTESIAN&&(o=[Math.fround(t.center[0]),Math.fround(t.center[1]),0],n=t.unprojectPosition(o),o[0]-=i[0],o[1]-=i[1],o[2]-=i[2]);break;case s.zG.IDENTITY:o=t.position.map(Math.fround),o[2]=o[2]||0;break;case s.zG.GLOBE:r=!1,n=null;break;default:r=!1}return{geospatialOrigin:n,shaderCoordinateOrigin:o,offsetMode:r}}function g({viewport:t,devicePixelRatio:e=1,modelMatrix:i=null,coordinateSystem:n=s.Df.DEFAULT,coordinateOrigin:o=u,autoWrapLongitude:r=!1}){n===s.Df.DEFAULT&&(n=t.isGeospatial?s.Df.LNGLAT:s.Df.CARTESIAN);const a=h({viewport:t,devicePixelRatio:e,coordinateSystem:n,coordinateOrigin:o});return a.project_uWrapLongitude=r,a.project_uModelMatrix=i||c,a}},3844:(t,e,i)=>{i.d(e,{Z:()=>n});const n={name:"project32",dependencies:[i(3751).Z],vs:"\nvec4 project_position_to_clipspace(\n  vec3 position, vec3 position64Low, vec3 offset, out vec4 commonPosition\n) {\n  vec3 projectedPosition = project_position(position, position64Low);\n  mat3 rotation;\n  if (project_needs_rotation(projectedPosition, rotation)) {\n    // offset is specified as ENU\n    // when in globe projection, rotate offset so that the ground alighs with the surface of the globe\n    offset = rotation * offset;\n  }\n  commonPosition = vec4(projectedPosition + offset, 1.0);\n  return project_common_position_to_clipspace(commonPosition);\n}\n\nvec4 project_position_to_clipspace(\n  vec3 position, vec3 position64Low, vec3 offset\n) {\n  vec4 commonPosition;\n  return project_position_to_clipspace(position, position64Low, offset, commonPosition);\n}\n"}},3115:(t,e,i)=>{i.d(e,{Z:()=>p});var n=i(4088),o=i(3751),s=i(5451),r=i(3855),a=i(8177),l=i(7013);const c=(0,a.Z)((function({viewport:t,center:e}){return new s.Z(t.viewProjectionMatrix).invert().transform(e)})),d=(0,a.Z)((function({viewport:t,shadowMatrices:e}){const i=[],n=t.pixelUnprojectionMatrix,o=t.isGeospatial?void 0:1,a=[[0,0,o],[t.width,0,o],[0,t.height,o],[t.width,t.height,o],[0,0,-1],[t.width,0,-1],[0,t.height,-1],[t.width,t.height,-1]].map((t=>function(t,e){const[i,n,o]=t,s=(0,l.CT)([i,n,o],e);if(Number.isFinite(o))return s;return[s[0],s[1],0]}(t,n)));for(const n of e){const e=n.clone().translate(new r.Z(t.center).negate()),o=a.map((t=>e.transform(t))),l=(new s.Z).ortho({left:Math.min(...o.map((t=>t[0]))),right:Math.max(...o.map((t=>t[0]))),bottom:Math.min(...o.map((t=>t[1]))),top:Math.max(...o.map((t=>t[1]))),near:Math.min(...o.map((t=>-t[2]))),far:Math.max(...o.map((t=>-t[2])))});i.push(l.multiplyRight(n))}return i})),u=[0,0,0,1],h=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0];const p={name:"shadow",dependencies:[o.Z],vs:"\nconst int max_lights = 2;\nuniform mat4 shadow_uViewProjectionMatrices[max_lights];\nuniform vec4 shadow_uProjectCenters[max_lights];\nuniform bool shadow_uDrawShadowMap;\nuniform bool shadow_uUseShadowMap;\nuniform int shadow_uLightId;\nuniform float shadow_uLightCount;\n\nvarying vec3 shadow_vPosition[max_lights];\n\nvec4 shadow_setVertexPosition(vec4 position_commonspace) {\n  if (shadow_uDrawShadowMap) {\n    return project_common_position_to_clipspace(position_commonspace, shadow_uViewProjectionMatrices[shadow_uLightId], shadow_uProjectCenters[shadow_uLightId]);\n  }\n  if (shadow_uUseShadowMap) {\n    for (int i = 0; i < max_lights; i++) {\n      if(i < int(shadow_uLightCount)) {\n        vec4 shadowMap_position = project_common_position_to_clipspace(position_commonspace, shadow_uViewProjectionMatrices[i], shadow_uProjectCenters[i]);\n        shadow_vPosition[i] = (shadowMap_position.xyz / shadowMap_position.w + 1.0) / 2.0;\n      }\n    }\n  }\n  return gl_Position;\n}\n",fs:"\nconst int max_lights = 2;\nuniform bool shadow_uDrawShadowMap;\nuniform bool shadow_uUseShadowMap;\nuniform sampler2D shadow_uShadowMap0;\nuniform sampler2D shadow_uShadowMap1;\nuniform vec4 shadow_uColor;\nuniform float shadow_uLightCount;\n\nvarying vec3 shadow_vPosition[max_lights];\n\nconst vec4 bitPackShift = vec4(1.0, 255.0, 65025.0, 16581375.0);\nconst vec4 bitUnpackShift = 1.0 / bitPackShift;\nconst vec4 bitMask = vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0,  0.0);\n\nfloat shadow_getShadowWeight(vec3 position, sampler2D shadowMap) {\n  vec4 rgbaDepth = texture2D(shadowMap, position.xy);\n\n  float z = dot(rgbaDepth, bitUnpackShift);\n  return smoothstep(0.001, 0.01, position.z - z);\n}\n\nvec4 shadow_filterShadowColor(vec4 color) {\n  if (shadow_uDrawShadowMap) {\n    vec4 rgbaDepth = fract(gl_FragCoord.z * bitPackShift);\n    rgbaDepth -= rgbaDepth.gbaa * bitMask;\n    return rgbaDepth;\n  }\n  if (shadow_uUseShadowMap) {\n    float shadowAlpha = 0.0;\n    shadowAlpha += shadow_getShadowWeight(shadow_vPosition[0], shadow_uShadowMap0);\n    if(shadow_uLightCount > 1.0) {\n      shadowAlpha += shadow_getShadowWeight(shadow_vPosition[1], shadow_uShadowMap1);\n    }\n    shadowAlpha *= shadow_uColor.a / shadow_uLightCount;\n    float blendedAlpha = shadowAlpha + color.a * (1.0 - shadowAlpha);\n\n    return vec4(\n      mix(color.rgb, shadow_uColor.rgb, shadowAlpha / blendedAlpha),\n      blendedAlpha\n    );\n  }\n  return color;\n}\n",inject:{"vs:DECKGL_FILTER_GL_POSITION":"\n    position = shadow_setVertexPosition(geometry.position);\n    ","fs:DECKGL_FILTER_COLOR":"\n    color = shadow_filterShadowColor(color);\n    "},getUniforms:(t={},e={})=>"viewport"in t&&(t.drawToShadowMap||t.shadowMaps&&t.shadowMaps.length>0)?function(t,e){const{shadowEnabled:i=!0}=t;if(!i||!t.shadowMatrices||!t.shadowMatrices.length)return{shadow_uDrawShadowMap:!1,shadow_uUseShadowMap:!1};const o={shadow_uDrawShadowMap:Boolean(t.drawToShadowMap),shadow_uUseShadowMap:!!t.shadowMaps&&t.shadowMaps.length>0,shadow_uColor:t.shadowColor||u,shadow_uLightId:t.shadowLightId||0,shadow_uLightCount:t.shadowMatrices.length},s=c({viewport:t.viewport,center:e.project_uCenter}),a=[],l=d({shadowMatrices:t.shadowMatrices,viewport:t.viewport}).slice();for(let i=0;i<t.shadowMatrices.length;i++){const o=l[i],c=o.clone().translate(new r.Z(t.viewport.center).negate());e.project_uCoordinateSystem===n.Df.LNGLAT&&e.project_uProjectionMode===n.zG.WEB_MERCATOR?(l[i]=c,a[i]=s):(l[i]=o.clone().multiplyRight(h),a[i]=c.transform(s))}for(let e=0;e<l.length;e++)o["shadow_uViewProjectionMatrices[".concat(e,"]")]=l[e],o["shadow_uProjectCenters[".concat(e,"]")]=a[e],t.shadowMaps&&t.shadowMaps.length>0?o["shadow_uShadowMap".concat(e)]=t.shadowMaps[e]:o["shadow_uShadowMap".concat(e)]=t.dummyShadowMap;return o}(t,e):{}}},6497:(t,e,i)=>{i.d(e,{Z:()=>l});var n=i(4572),o=i(6507),s=i(4034);const r=["longitude","latitude","zoom","bearing","pitch"],a=["longitude","latitude","zoom"];class l extends o.Z{constructor(t={}){const e=Array.isArray(t)?t:t.transitionProps,i=Array.isArray(t)?{}:t;i.transitionProps=Array.isArray(e)?{compare:e,required:e}:e||{compare:r,required:a},super(i.transitionProps),(0,n.Z)(this,"opts",void 0),this.opts=i}initializeProps(t,e){const i=super.initializeProps(t,e),{makeViewport:n,around:o}=this.opts;if(n&&o){const s=n(t),r=n(e),a=s.unproject(o);i.start.around=o,Object.assign(i.end,{around:r.project(a),aroundPosition:a,width:e.width,height:e.height})}return i}interpolateProps(t,e,i){const n={};for(const o of this._propsToExtract)n[o]=(0,s.t7)(t[o]||0,e[o]||0,i);if(e.aroundPosition&&this.opts.makeViewport){const o=this.opts.makeViewport({...e,...n});Object.assign(n,o.panByPosition(e.aroundPosition,(0,s.t7)(t.around,e.around,i)))}return n}}},6507:(t,e,i)=>{i.d(e,{Z:()=>r});var n=i(4572),o=i(4034),s=i(5304);class r{constructor(t){(0,n.Z)(this,"_propsToCompare",void 0),(0,n.Z)(this,"_propsToExtract",void 0),(0,n.Z)(this,"_requiredProps",void 0);const{compare:e,extract:i,required:o}=t;this._propsToCompare=e,this._propsToExtract=i||e,this._requiredProps=o}arePropsEqual(t,e){for(const i of this._propsToCompare)if(!(i in t)||!(i in e)||!(0,o.fS)(t[i],e[i]))return!1;return!0}initializeProps(t,e){const i={},n={};for(const o of this._propsToExtract)(o in t||o in e)&&(i[o]=t[o],n[o]=e[o]);return this._checkRequiredProps(i),this._checkRequiredProps(n),{start:i,end:n}}getDuration(t,e){return e.transitionDuration}_checkRequiredProps(t){this._requiredProps&&this._requiredProps.forEach((e=>{const i=t[e];(0,s.Z)(Number.isFinite(i)||Array.isArray(i),"".concat(e," is required for transition"))}))}}},3630:(t,e,i)=>{i.d(e,{Z:()=>o});var n=i(4572);class o{constructor(t){(0,n.Z)(this,"_inProgress",void 0),(0,n.Z)(this,"_handle",void 0),(0,n.Z)(this,"_timeline",void 0),(0,n.Z)(this,"time",void 0),(0,n.Z)(this,"settings",void 0),this._inProgress=!1,this._handle=null,this._timeline=t,this.time=0,this.settings={duration:0}}get inProgress(){return this._inProgress}start(t){var e,i;this.cancel(),this.settings=t,this._inProgress=!0,null===(e=(i=this.settings).onStart)||void 0===e||e.call(i,this)}end(){var t,e;this._inProgress&&(this._timeline.removeChannel(this._handle),this._handle=null,this._inProgress=!1,null===(t=(e=this.settings).onEnd)||void 0===t||t.call(e,this))}cancel(){var t,e;this._inProgress&&(null===(t=(e=this.settings).onInterrupt)||void 0===t||t.call(e,this),this._timeline.removeChannel(this._handle),this._handle=null,this._inProgress=!1)}update(){var t,e;if(!this._inProgress)return!1;if(null===this._handle){const{_timeline:t,settings:e}=this;this._handle=t.addChannel({delay:t.getTime(),duration:e.duration})}return this.time=this._timeline.getTime(this._handle),this._onUpdate(),null===(t=(e=this.settings).onUpdate)||void 0===t||t.call(e,this),this._timeline.isFinished(this._handle)&&this.end(),!0}_onUpdate(){}}},5304:(t,e,i)=>{function n(t,e){if(!t)throw new Error(e||"deck.gl: assertion failed.")}i.d(e,{Z:()=>n})},5015:(t,e,i)=>{i.d(e,{Q:()=>n});function n(t){if(null===(e=t)||"object"!=typeof e)throw new Error("count(): argument not an object");var e;if("function"==typeof t.count)return t.count();if(Number.isFinite(t.size))return t.size;if(Number.isFinite(t.length))return t.length;if(function(t){return null!==t&&"object"==typeof t&&t.constructor===Object}(t))return Object.keys(t).length;throw new Error("count(): argument not a container")}},6871:(t,e,i)=>{function n(t,e){if(t===e)return!0;if(!t||!e)return!1;for(const i in t){const o=t[i],s=e[i];if(!(o===s||Array.isArray(o)&&Array.isArray(s)&&n(o,s)))return!1}return!0}i.d(e,{v:()=>n})},1855:(t,e,i)=>{function n(t,e=(()=>!0)){return Array.isArray(t)?o(t,e,[]):e(t)?[t]:[]}function o(t,e,i){let n=-1;for(;++n<t.length;){const s=t[n];Array.isArray(s)?o(s,e,i):e(s)&&i.push(s)}return i}function s({target:t,source:e,start:i=0,count:n=1}){const o=e.length,s=n*o;let r=0;for(let n=i;r<o;r++)t[n++]=e[r];for(;r<s;)r<s-r?(t.copyWithin(i+r,i,i+r),r*=2):(t.copyWithin(i+r,i,i+s-r),r=s);return t}i.d(e,{k:()=>s,x:()=>n})},8550:(t,e,i)=>{i.d(e,{D0:()=>r,jB:()=>s,jr:()=>a});const n=[],o=[];function s(t,e=0,i=1/0){let s=n;const r={index:-1,data:t,target:[]};return t?"function"==typeof t[Symbol.iterator]?s=t:t.length>0&&(o.length=t.length,s=o):s=n,(e>0||Number.isFinite(i))&&(s=(Array.isArray(s)?s:Array.from(s)).slice(e,i),r.index=e-1),{iterable:s,objectInfo:r}}function r(t){return t&&t[Symbol.asyncIterator]}function a(t,e){const{size:i,stride:n,offset:o,startIndices:s,nested:r}=e,a=t.BYTES_PER_ELEMENT,l=n?n/a:i,c=o?o/a:0,d=Math.floor((t.length-c)/l);return(e,{index:n,target:o})=>{if(!s){const e=n*l+c;for(let n=0;n<i;n++)o[n]=t[e+n];return o}const a=s[n],u=s[n+1]||d;let h;if(r){h=new Array(u-a);for(let e=a;e<u;e++){const n=e*l+c;o=new Array(i);for(let e=0;e<i;e++)o[e]=t[n+e];h[e-a]=o}}else if(l===i)h=t.subarray(a*i+c,u*i+c);else{h=new t.constructor((u-a)*i);let e=0;for(let n=a;n<u;n++){const o=n*l+c;for(let n=0;n<i;n++)h[e++]=t[o+n]}}return h}}},744:(t,e,i)=>{i.d(e,{Z:()=>n});const n=new(i(9109).Z)({id:"deck"})},5126:(t,e,i)=>{i.d(e,{Du:()=>l,Ks:()=>u,TK:()=>p,Xt:()=>a,bS:()=>s,wQ:()=>r});var n=i(6610),o=i(3855);function s(){return[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}function r(t,e){const i=t%e;return i<0?e+i:i}function a(t){return[t[12],t[13],t[14]]}function l(t){return{left:d(t[3]+t[0],t[7]+t[4],t[11]+t[8],t[15]+t[12]),right:d(t[3]-t[0],t[7]-t[4],t[11]-t[8],t[15]-t[12]),bottom:d(t[3]+t[1],t[7]+t[5],t[11]+t[9],t[15]+t[13]),top:d(t[3]-t[1],t[7]-t[5],t[11]-t[9],t[15]-t[13]),near:d(t[3]+t[2],t[7]+t[6],t[11]+t[10],t[15]+t[14]),far:d(t[3]-t[2],t[7]-t[6],t[11]-t[10],t[15]-t[14])}}const c=new o.Z;function d(t,e,i,n){c.set(t,e,i);const s=c.len();return{distance:n/s,normal:new o.Z(-t/s,-e/s,-i/s)}}function u(t){return t-Math.fround(t)}let h;function p(t,e){const{size:i=1,startIndex:o=0}=e,s=void 0!==e.endIndex?e.endIndex:t.length,r=(s-o)/i;h=n.Z.allocate(h,r,{type:Float32Array,size:2*i});let a=o,l=0;for(;a<s;){for(let e=0;e<i;e++){const n=t[a++];h[l+e]=n,h[l+e+i]=u(n)}l+=2*i}return h.subarray(0,r*i*2)}},8177:(t,e,i)=>{function n(t,e){if(t===e)return!0;if(Array.isArray(t)){const i=t.length;if(!e||e.length!==i)return!1;for(let n=0;n<i;n++)if(t[n]!==e[n])return!1;return!0}return!1}function o(t){let e,i={};return o=>{for(const s in o)if(!n(o[s],i[s])){e=t(o),i=o;break}return e}}i.d(e,{Z:()=>o})},7870:(t,e,i)=>{function n(t,e){if(!e)return t;const i={...t,...e};if("defines"in e&&(i.defines={...t.defines,...e.defines}),"modules"in e&&(i.modules=(t.modules||[]).concat(e.modules),e.modules.some((t=>"project64"===t.name)))){const t=i.modules.findIndex((t=>"project32"===t.name));t>=0&&i.modules.splice(t,1)}if("inject"in e)if(t.inject){const n={...t.inject};for(const t in e.inject)n[t]=(n[t]||"")+e.inject[t];i.inject=n}else i.inject=e.inject;return i}i.d(e,{l:()=>n})},8005:(t,e,i)=>{i.d(e,{Z:()=>l});var n=i(4572),o=i(8550),s=i(6610),r=i(5304),a=i(3478);class l{constructor(t){(0,n.Z)(this,"opts",void 0),(0,n.Z)(this,"typedArrayManager",void 0),(0,n.Z)(this,"indexStarts",[0]),(0,n.Z)(this,"vertexStarts",[0]),(0,n.Z)(this,"vertexCount",0),(0,n.Z)(this,"instanceCount",0),(0,n.Z)(this,"attributes",void 0),(0,n.Z)(this,"_attributeDefs",void 0),(0,n.Z)(this,"data",void 0),(0,n.Z)(this,"getGeometry",void 0),(0,n.Z)(this,"geometryBuffer",void 0),(0,n.Z)(this,"buffers",void 0),(0,n.Z)(this,"positionSize",void 0),(0,n.Z)(this,"normalize",void 0);const{attributes:e={}}=t;this.typedArrayManager=s.Z,this.attributes={},this._attributeDefs=e,this.opts=t,this.updateGeometry(t)}updateGeometry(t){Object.assign(this.opts,t);const{data:e,buffers:i={},getGeometry:n,geometryBuffer:o,positionFormat:s,dataChanged:a,normalize:l=!0}=this.opts;if(this.data=e,this.getGeometry=n,this.positionSize=o&&o.size||("XY"===s?2:3),this.buffers=i,this.normalize=l,o&&((0,r.Z)(e.startIndices),this.getGeometry=this.getGeometryFromBuffer(o),l||(i.positions=o)),this.geometryBuffer=i.positions,Array.isArray(a))for(const t of a)this._rebuildGeometry(t);else this._rebuildGeometry()}updatePartialGeometry({startRow:t,endRow:e}){this._rebuildGeometry({startRow:t,endRow:e})}getGeometryFromBuffer(t){const e=t.value||t;return ArrayBuffer.isView(e)?(0,o.jr)(e,{size:this.positionSize,offset:t.offset,stride:t.stride,startIndices:this.data.startIndices}):null}_allocate(t,e){const{attributes:i,buffers:n,_attributeDefs:o,typedArrayManager:s}=this;for(const r in o)if(r in n)s.release(i[r]),i[r]=null;else{const n=o[r];n.copy=e,i[r]=s.allocate(i[r],t,n)}}_forEachGeometry(t,e,i){const{data:n,getGeometry:s}=this,{iterable:r,objectInfo:a}=(0,o.jB)(n,e,i);for(const e of r){a.index++;t(s?s(e,a):null,a.index)}}_rebuildGeometry(t){if(!this.data)return;let{indexStarts:e,vertexStarts:i,instanceCount:n}=this;const{data:o,geometryBuffer:s}=this,{startRow:r=0,endRow:l=1/0}=t||{},c={};if(t||(e=[0],i=[0]),this.normalize||!s)this._forEachGeometry(((t,e)=>{const n=t&&this.normalizeGeometry(t);c[e]=n,i[e+1]=i[e]+(n?this.getGeometrySize(n):0)}),r,l),n=i[i.length-1];else if(i=o.startIndices,n=i[o.length]||0,ArrayBuffer.isView(s))n=n||s.length/this.positionSize;else if(s instanceof a.Z){const t=s.accessor.stride||4*this.positionSize;n=n||s.byteLength/t}else if(s.buffer){const t=s.stride||4*this.positionSize;n=n||s.buffer.byteLength/t}else if(s.value){const t=s.value,e=s.stride/t.BYTES_PER_ELEMENT||this.positionSize;n=n||t.length/e}this._allocate(n,Boolean(t)),this.indexStarts=e,this.vertexStarts=i,this.instanceCount=n;const d={};this._forEachGeometry(((t,o)=>{const s=c[o]||t;d.vertexStart=i[o],d.indexStart=e[o];const r=o<i.length-1?i[o+1]:n;d.geometrySize=r-i[o],d.geometryIndex=o,this.updateGeometryAttributes(s,d)}),r,l),this.vertexCount=e[e.length-1]}}},6610:(t,e,i)=>{i.d(e,{Z:()=>o});var n=i(4572);const o=new class{constructor(t={}){(0,n.Z)(this,"_pool",[]),(0,n.Z)(this,"opts",{overAlloc:2,poolSize:100}),this.setOptions(t)}setOptions(t){Object.assign(this.opts,t)}allocate(t,e,{size:i=1,type:n,padding:o=0,copy:s=!1,initialize:r=!1,maxCount:a}){const l=n||t&&t.constructor||Float32Array,c=e*i+o;if(ArrayBuffer.isView(t)){if(c<=t.length)return t;if(c*t.BYTES_PER_ELEMENT<=t.buffer.byteLength)return new l(t.buffer,0,c)}let d=1/0;a&&(d=a*i+o);const u=this._allocate(l,c,r,d);return t&&s?u.set(t):r||u.fill(0,0,4),this._release(t),u}release(t){this._release(t)}_allocate(t,e,i,n){let o=Math.max(Math.ceil(e*this.opts.overAlloc),1);o>n&&(o=n);const s=this._pool,r=t.BYTES_PER_ELEMENT*o,a=s.findIndex((t=>t.byteLength>=r));if(a>=0){const e=new t(s.splice(a,1)[0],0,o);return i&&e.fill(0),e}return new t(o)}_release(t){if(!ArrayBuffer.isView(t))return;const e=this._pool,{buffer:i}=t,{byteLength:n}=i,o=e.findIndex((t=>t.byteLength>=n));o<0?e.push(i):(o>0||e.length<this.opts.poolSize)&&e.splice(o,0,i),e.length>this.opts.poolSize&&e.shift()}}},3131:(t,e,i)=>{i.d(e,{Z:()=>g});var n=i(4572),o=i(5451),s=i(9225),r=i(4088),a=i(7160),l=i(8333);const c=Math.PI/180,d=180/Math.PI,u=6370972,h=256;function p(){const t=4018225162502676e-20,e=Math.PI/180*h;return{unitsPerMeter:[t,t,t],unitsPerMeter2:[0,0,0],metersPerUnit:[24886.609375,24886.609375,24886.609375],unitsPerDegree:[e,e,t],unitsPerDegree2:[0,0,0],degreesPerUnit:[1/e,1/e,24886.609375]}}class g extends s.Z{constructor(t={}){const{latitude:e=0,longitude:i=0,zoom:s=0,nearZMultiplier:r=.1,farZMultiplier:a=2,resolution:l=10}=t;let{height:d,altitude:u=1.5}=t;d=d||1,u=Math.max(.75,u);const h=(new o.Z).lookAt({eye:[0,-u,0],up:[0,0,1]}),g=Math.pow(2,s);h.rotateX(e*c),h.rotateZ(-i*c),h.scale(g/d);const f=Math.atan(.5/u),m=512*g/d;super({...t,height:d,viewMatrix:h,longitude:i,latitude:e,zoom:s,distanceScales:p(),fovyRadians:2*f,focalDistance:u,near:r,far:Math.min(2,1/m+1)*u*a}),(0,n.Z)(this,"longitude",void 0),(0,n.Z)(this,"latitude",void 0),(0,n.Z)(this,"resolution",void 0),this.latitude=e,this.longitude=i,this.resolution=l}get projectionMode(){return r.zG.GLOBE}getDistanceScales(){return this.distanceScales}getBounds(t={}){const e={targetZ:t.z||0},i=this.unproject([0,this.height/2],e),n=this.unproject([this.width/2,0],e),o=this.unproject([this.width,this.height/2],e),s=this.unproject([this.width/2,this.height],e);return o[0]<this.longitude&&(o[0]+=360),i[0]>this.longitude&&(i[0]-=360),[Math.min(i[0],o[0],n[0],s[0]),Math.min(i[1],o[1],n[1],s[1]),Math.max(i[0],o[0],n[0],s[0]),Math.max(i[1],o[1],n[1],s[1])]}unproject(t,{topLeft:e=!0,targetZ:i}={}){const[n,o,s]=t,r=e?o:this.height-o,{pixelUnprojectionMatrix:l}=this;let c;if(Number.isFinite(s))c=f(l,[n,r,s,1]);else{const t=f(l,[n,r,-1,1]),e=f(l,[n,r,1,1]),o=((i||0)/u+1)*h,s=a.x9(a.lu([],t,e)),d=a.x9(t),p=a.x9(e),g=4*((4*d*p-(s-d-p)**2)/16)/s,m=(Math.sqrt(d-g)-Math.sqrt(Math.max(0,o*o-g)))/Math.sqrt(s);c=a.t7([],t,e,m)}const[d,p,g]=this.unprojectPosition(c);return Number.isFinite(s)?[d,p,g]:Number.isFinite(i)?[d,p,i]:[d,p]}projectPosition(t){const[e,i,n=0]=t,o=e*c,s=i*c,r=Math.cos(s),a=(n/u+1)*h;return[Math.sin(o)*r*a,-Math.cos(o)*r*a,Math.sin(s)*a]}unprojectPosition(t){const[e,i,n]=t,o=a.Zh(t),s=Math.asin(n/o);return[Math.atan2(e,-i)*d,s*d,(o/h-1)*u]}projectFlat(t){return t}unprojectFlat(t){return t}panByPosition(t,e){const i=this.unproject(e);return{longitude:t[0]-i[0]+this.longitude,latitude:t[1]-i[1]+this.latitude}}}function f(t,e){const i=l.fF([],e,t);return l.bA(i,i,1/i[3]),i}},9573:(t,e,i)=>{i.d(e,{Z:()=>d});var n=i(9225),o=i(5451),s=i(4034),r=i(7013),a=i(1437);const l=(new o.Z).lookAt({eye:[0,0,1]});function c({width:t,height:e,near:i,far:n,padding:r}){let a=-t/2,l=t/2,c=-e/2,d=e/2;if(r){const{left:i=0,right:n=0,top:o=0,bottom:u=0}=r,h=(0,s.uZ)((i+t-n)/2,0,t)-t/2,p=(0,s.uZ)((o+e-u)/2,0,e)-e/2;a-=h,l-=h,c+=p,d+=p}return(new o.Z).ortho({left:a,right:l,bottom:c,top:d,near:i,far:n})}class d extends n.Z{constructor(t){const{width:e,height:i,near:n=.1,far:o=1e3,zoom:s=0,target:r=[0,0,0],padding:a=null,flipY:d=!0}=t,u=Array.isArray(s)?s[0]:s,h=Array.isArray(s)?s[1]:s,p=Math.min(u,h),g=Math.pow(2,p);let f;if(u!==h){const t=Math.pow(2,u),e=Math.pow(2,h);f={unitsPerMeter:[t/g,e/g,1],metersPerUnit:[g/t,g/e,1]}}super({...t,longitude:void 0,position:r,viewMatrix:l.clone().scale([g,g*(d?-1:1),g]),projectionMatrix:c({width:e||1,height:i||1,padding:a,near:n,far:o}),zoom:p,distanceScales:f})}projectFlat([t,e]){const{unitsPerMeter:i}=this.distanceScales;return[t*i[0],e*i[1]]}unprojectFlat([t,e]){const{metersPerUnit:i}=this.distanceScales;return[t*i[0],e*i[1]]}panByPosition(t,e){const i=(0,r.CT)(e,this.pixelUnprojectionMatrix),n=this.projectFlat(t),o=a.IH([],n,a.tk([],i)),s=a.IH([],this.center,o);return{target:this.unprojectFlat(s)}}}},9225:(t,e,i)=>{i.d(e,{Z:()=>m});var n=i(4572),o=i(744),s=i(5126),r=i(5451),a=i(4034),l=i(3855),c=i(5975),d=i(7013),u=i(4088);const h=Math.PI/180,p=(0,s.bS)(),g=[0,0,0],f={unitsPerMeter:[1,1,1],metersPerUnit:[1,1,1]};class m{constructor(t={}){(0,n.Z)(this,"id",void 0),(0,n.Z)(this,"x",void 0),(0,n.Z)(this,"y",void 0),(0,n.Z)(this,"width",void 0),(0,n.Z)(this,"height",void 0),(0,n.Z)(this,"padding",void 0),(0,n.Z)(this,"isGeospatial",void 0),(0,n.Z)(this,"zoom",void 0),(0,n.Z)(this,"focalDistance",void 0),(0,n.Z)(this,"position",void 0),(0,n.Z)(this,"modelMatrix",void 0),(0,n.Z)(this,"distanceScales",void 0),(0,n.Z)(this,"scale",void 0),(0,n.Z)(this,"center",void 0),(0,n.Z)(this,"cameraPosition",void 0),(0,n.Z)(this,"projectionMatrix",void 0),(0,n.Z)(this,"viewMatrix",void 0),(0,n.Z)(this,"viewMatrixUncentered",void 0),(0,n.Z)(this,"viewMatrixInverse",void 0),(0,n.Z)(this,"viewProjectionMatrix",void 0),(0,n.Z)(this,"pixelProjectionMatrix",void 0),(0,n.Z)(this,"pixelUnprojectionMatrix",void 0),(0,n.Z)(this,"resolution",void 0),(0,n.Z)(this,"_frustumPlanes",{}),this.id=t.id||this.constructor.displayName||"viewport",this.x=t.x||0,this.y=t.y||0,this.width=t.width||1,this.height=t.height||1,this.zoom=t.zoom||0,this.padding=t.padding,this.distanceScales=t.distanceScales||f,this.focalDistance=t.focalDistance||1,this.position=t.position||g,this.modelMatrix=t.modelMatrix||null;const{longitude:e,latitude:i}=t;this.isGeospatial=Number.isFinite(i)&&Number.isFinite(e),this._initProps(t),this._initMatrices(t),this.equals=this.equals.bind(this),this.project=this.project.bind(this),this.unproject=this.unproject.bind(this),this.projectPosition=this.projectPosition.bind(this),this.unprojectPosition=this.unprojectPosition.bind(this),this.projectFlat=this.projectFlat.bind(this),this.unprojectFlat=this.unprojectFlat.bind(this)}get metersPerPixel(){return this.distanceScales.metersPerUnit[2]/this.scale}get projectionMode(){return this.isGeospatial?this.zoom<12?u.zG.WEB_MERCATOR:u.zG.WEB_MERCATOR_AUTO_OFFSET:u.zG.IDENTITY}equals(t){return t instanceof m&&(this===t||t.width===this.width&&t.height===this.height&&t.scale===this.scale&&(0,a.fS)(t.projectionMatrix,this.projectionMatrix)&&(0,a.fS)(t.viewMatrix,this.viewMatrix))}project(t,{topLeft:e=!0}={}){const i=this.projectPosition(t),n=(0,d.aW)(i,this.pixelProjectionMatrix),[o,s]=n,r=e?s:this.height-s;return 2===t.length?[o,r]:[o,r,n[2]]}unproject(t,{topLeft:e=!0,targetZ:i}={}){const[n,o,s]=t,r=e?o:this.height-o,a=i&&i*this.distanceScales.unitsPerMeter[2],l=(0,d.CT)([n,r,s],this.pixelUnprojectionMatrix,a),[c,u,h]=this.unprojectPosition(l);return Number.isFinite(s)?[c,u,h]:Number.isFinite(i)?[c,u,i]:[c,u]}projectPosition(t){const[e,i]=this.projectFlat(t);return[e,i,(t[2]||0)*this.distanceScales.unitsPerMeter[2]]}unprojectPosition(t){const[e,i]=this.unprojectFlat(t);return[e,i,(t[2]||0)*this.distanceScales.metersPerUnit[2]]}projectFlat(t){if(this.isGeospatial){const e=(0,d.w5)(t);return e[1]=(0,a.uZ)(e[1],-318,830),e}return t}unprojectFlat(t){return this.isGeospatial?(0,d.es)(t):t}getBounds(t={}){const e={targetZ:t.z||0},i=this.unproject([0,0],e),n=this.unproject([this.width,0],e),o=this.unproject([0,this.height],e),s=this.unproject([this.width,this.height],e);return[Math.min(i[0],n[0],o[0],s[0]),Math.min(i[1],n[1],o[1],s[1]),Math.max(i[0],n[0],o[0],s[0]),Math.max(i[1],n[1],o[1],s[1])]}getDistanceScales(t){return t?(0,d.ro)({longitude:t[0],latitude:t[1],highPrecision:!0}):this.distanceScales}containsPixel({x:t,y:e,width:i=1,height:n=1}){return t<this.x+this.width&&this.x<t+i&&e<this.y+this.height&&this.y<e+n}getFrustumPlanes(){return this._frustumPlanes.near||Object.assign(this._frustumPlanes,(0,s.Du)(this.viewProjectionMatrix)),this._frustumPlanes}panByPosition(t,e){return null}_initProps(t){const e=t.longitude,i=t.latitude;this.isGeospatial&&(Number.isFinite(t.zoom)||(this.zoom=(0,d.Bf)({latitude:i})+Math.log2(this.focalDistance)),this.distanceScales=t.distanceScales||(0,d.ro)({latitude:i,longitude:e}));const n=Math.pow(2,this.zoom);this.scale=n;const{position:o,modelMatrix:s}=t;let a=g;if(o&&(a=s?new r.Z(s).transformAsVector(o,[]):o),this.isGeospatial){const t=this.projectPosition([e,i,0]);this.center=new l.Z(a).scale(this.distanceScales.unitsPerMeter).add(t)}else this.center=this.projectPosition(a)}_initMatrices(t){const{viewMatrix:e=p,projectionMatrix:i=null,orthographic:n=!1,fovyRadians:d,fovy:u=75,near:g=.1,far:f=1e3,padding:m=null,focalDistance:v=1}=t;this.viewMatrixUncentered=e,this.viewMatrix=(new r.Z).multiplyRight(e).translate(new l.Z(this.center).negate()),this.projectionMatrix=i||function({width:t,height:e,orthographic:i,fovyRadians:n,focalDistance:o,padding:s,near:l,far:c}){const d=t/e,u=i?(new r.Z).orthographic({fovy:n,aspect:d,focalDistance:o,near:l,far:c}):(new r.Z).perspective({fovy:n,aspect:d,near:l,far:c});if(s){const{left:i=0,right:n=0,top:o=0,bottom:r=0}=s,l=(0,a.uZ)((i+t-n)/2,0,t)-t/2,c=(0,a.uZ)((o+e-r)/2,0,e)-e/2;u[8]-=2*l/t,u[9]+=2*c/e}return u}({width:this.width,height:this.height,orthographic:n,fovyRadians:d||u*h,focalDistance:v,padding:m,near:g,far:f});const y=(0,s.bS)();c.Jp(y,y,this.projectionMatrix),c.Jp(y,y,this.viewMatrix),this.viewProjectionMatrix=y,this.viewMatrixInverse=c.U_([],this.viewMatrix)||this.viewMatrix,this.cameraPosition=(0,s.Xt)(this.viewMatrixInverse);const _=(0,s.bS)(),x=(0,s.bS)();c.bA(_,_,[this.width/2,-this.height/2,1]),c.Iu(_,_,[1,-1,0]),c.Jp(x,_,this.viewProjectionMatrix),this.pixelProjectionMatrix=x,this.pixelUnprojectionMatrix=c.U_((0,s.bS)(),this.pixelProjectionMatrix),this.pixelUnprojectionMatrix||o.Z.warn("Pixel project matrix not invertible")()}}(0,n.Z)(m,"displayName","Viewport")},6935:(t,e,i)=>{i.d(e,{Z:()=>d});var n=i(4572),o=i(9225),s=i(7013),r=i(1437),a=i(5451);const l=Math.PI/180;function c(t){return 512/4003e4/Math.cos(t*l)}class d extends o.Z{constructor(t={}){const{latitude:e=0,longitude:i=0,zoom:o=0,pitch:r=0,bearing:l=0,nearZMultiplier:c=.1,farZMultiplier:d=1.01,orthographic:u=!1,projectionMatrix:h,repeat:p=!1,worldOffset:g=0,legacyMeterSizes:f=!1}=t;let{width:m,height:v,altitude:y=1.5}=t;const _=Math.pow(2,o);let x;m=m||1,v=v||1;let w=null;h?(y=h[5]/2,x=(0,s.Lu)(y)):(t.fovy?(x=t.fovy,y=(0,s.sj)(x)):x=(0,s.Lu)(y),w=(0,s.wl)({width:m,height:v,pitch:r,fovy:x,nearZMultiplier:c,farZMultiplier:d}));let P=(0,s.lf)({height:v,pitch:r,bearing:l,scale:_,altitude:y});if(g){P=(new a.Z).translate([512*g,0,0]).multiplyLeft(P)}super({...t,width:m,height:v,viewMatrix:P,longitude:i,latitude:e,zoom:o,...w,fovy:x,focalDistance:y}),(0,n.Z)(this,"longitude",void 0),(0,n.Z)(this,"latitude",void 0),(0,n.Z)(this,"pitch",void 0),(0,n.Z)(this,"bearing",void 0),(0,n.Z)(this,"altitude",void 0),(0,n.Z)(this,"fovy",void 0),(0,n.Z)(this,"orthographic",void 0),(0,n.Z)(this,"_subViewports",void 0),(0,n.Z)(this,"_pseudoMeters",void 0),this.latitude=e,this.longitude=i,this.zoom=o,this.pitch=r,this.bearing=l,this.altitude=y,this.fovy=x,this.orthographic=u,this._subViewports=p?[]:null,this._pseudoMeters=f,Object.freeze(this)}get subViewports(){if(this._subViewports&&!this._subViewports.length){const t=this.getBounds(),e=Math.floor((t[0]+180)/360),i=Math.ceil((t[2]-180)/360);for(let t=e;t<=i;t++){const e=t?new d({...this,worldOffset:t}):this;this._subViewports.push(e)}}return this._subViewports}projectPosition(t){if(this._pseudoMeters)return super.projectPosition(t);const[e,i]=this.projectFlat(t);return[e,i,(t[2]||0)*c(t[1])]}unprojectPosition(t){if(this._pseudoMeters)return super.unprojectPosition(t);const[e,i]=this.unprojectFlat(t);return[e,i,(t[2]||0)/c(i)]}addMetersToLngLat(t,e){return(0,s.eG)(t,e)}panByPosition(t,e){const i=(0,s.CT)(e,this.pixelUnprojectionMatrix),n=this.projectFlat(t),o=r.IH([],n,r.tk([],i)),a=r.IH([],this.center,o),[l,c]=this.unprojectFlat(a);return{longitude:l,latitude:c}}getBounds(t={}){const e=(0,s.zX)(this,t.z||0);return[Math.min(e[0][0],e[1][0],e[2][0],e[3][0]),Math.min(e[0][1],e[1][1],e[2][1],e[3][1]),Math.max(e[0][0],e[1][0],e[2][0],e[3][0]),Math.max(e[0][1],e[1][1],e[2][1],e[3][1])]}fitBounds(t,e={}){const{width:i,height:n}=this,{longitude:o,latitude:r,zoom:a}=(0,s.Xg)({width:i,height:n,bounds:t,...e});return new d({width:i,height:n,longitude:o,latitude:r,zoom:a})}}(0,n.Z)(d,"displayName","WebMercatorViewport")},4009:(t,e,i)=>{i.d(e,{Z:()=>a});var n=i(4572),o=i(4897),s=i(6935),r=i(6883);class a extends o.Z{get ViewportType(){return s.Z}get ControllerType(){return r.Z}}(0,n.Z)(a,"displayName","MapView")},743:(t,e,i)=>{i.d(e,{Z:()=>a});var n=i(4572),o=i(4897),s=i(9573),r=i(2577);class a extends o.Z{get ViewportType(){return s.Z}get ControllerType(){return r.Z}}(0,n.Z)(a,"displayName","OrthographicView")},4897:(t,e,i)=>{i.d(e,{Z:()=>d});var n=i(4572),o=i(9225);const s=/([0-9]+\.?[0-9]*)(%|px)/;function r(t){switch(typeof t){case"number":return{position:t,relative:!1};case"string":const e=s.exec(t);if(e&&e.length>=3){const t="%"===e[2],i=parseFloat(e[1]);return{position:t?i/100:i,relative:t}}default:throw new Error("Could not parse position string ".concat(t))}}function a(t,e){return t.relative?Math.round(t.position*e):t.position}var l=i(6871),c=i(5304);class d{constructor(t){(0,n.Z)(this,"id",void 0),(0,n.Z)(this,"viewportInstance",void 0),(0,n.Z)(this,"_x",void 0),(0,n.Z)(this,"_y",void 0),(0,n.Z)(this,"_width",void 0),(0,n.Z)(this,"_height",void 0),(0,n.Z)(this,"_padding",void 0),(0,n.Z)(this,"props",void 0);const{id:e,x:i=0,y:s=0,width:a="100%",height:l="100%",padding:d=null,viewportInstance:u}=t||{};(0,c.Z)(!u||u instanceof o.Z),this.viewportInstance=u,this.id=e||this.constructor.displayName||"view",this.props={...t,id:this.id},this._x=r(i),this._y=r(s),this._width=r(a),this._height=r(l),this._padding=d&&{left:r(d.left||0),right:r(d.right||0),top:r(d.top||0),bottom:r(d.bottom||0)},this.equals=this.equals.bind(this),Object.seal(this)}equals(t){return this===t||(this.viewportInstance?!!t.viewportInstance&&this.viewportInstance.equals(t.viewportInstance):this.ViewportType===t.ViewportType&&(0,l.v)(this.props,t.props))}makeViewport({width:t,height:e,viewState:i}){if(this.viewportInstance)return this.viewportInstance;i=this.filterViewState(i);const n=this.getDimensions({width:t,height:e});return new this.ViewportType({...i,...this.props,...n})}getViewStateId(){const{viewState:t}=this.props;return"string"==typeof t?t:(null==t?void 0:t.id)||this.id}filterViewState(t){if(this.props.viewState&&"object"==typeof this.props.viewState){if(!this.props.viewState.id)return this.props.viewState;const e={...t};for(const t in this.props.viewState)"id"!==t&&(e[t]=this.props.viewState[t]);return e}return t}getDimensions({width:t,height:e}){const i={x:a(this._x,t),y:a(this._y,e),width:a(this._width,t),height:a(this._height,e)};return this._padding&&(i.padding={left:a(this._padding.left,t),top:a(this._padding.top,e),right:a(this._padding.right,t),bottom:a(this._padding.bottom,e)}),i}get controller(){const t=this.props.controller;return t?!0===t?{type:this.ControllerType}:"function"==typeof t?{type:t}:{type:this.ControllerType,...t}:null}}},4329:(t,e,i)=>{i.d(e,{Z:()=>c});var n=i(4572),o=i(3693),s=i(7870);const r={inject:{"vs:#decl":"\nattribute vec2 instanceDashArrays;\nattribute float instanceDashOffsets;\nvarying vec2 vDashArray;\nvarying float vDashOffset;\n","vs:#main-end":"\nvDashArray = instanceDashArrays;\nvDashOffset = instanceDashOffsets / width.x;\n","fs:#decl":"\nuniform float dashAlignMode;\nuniform float capType;\nuniform bool dashGapPickable;\nvarying vec2 vDashArray;\nvarying float vDashOffset;\n\nfloat round(float x) {\n  return floor(x + 0.5);\n}\n","fs:#main-start":"\n  float solidLength = vDashArray.x;\n  float gapLength = vDashArray.y;\n  float unitLength = solidLength + gapLength;\n\n  float offset;\n\n  if (unitLength > 0.0) {\n    if (dashAlignMode == 0.0) {\n      offset = vDashOffset;\n    } else {\n      unitLength = vPathLength / round(vPathLength / unitLength);\n      offset = solidLength / 2.0;\n    }\n\n    float unitOffset = mod(clamp(vPathPosition.y, 0.0, vPathLength) + offset, unitLength);\n\n    if (gapLength > 0.0 && unitOffset > solidLength) {\n      if (capType <= 0.5) {\n        if (!(dashGapPickable && picking_uActive)) {\n          discard;\n        }\n      } else {\n        // caps are rounded, test the distance to solid ends\n        float distToEnd = length(vec2(\n          min(unitOffset - solidLength, unitLength - unitOffset),\n          vPathPosition.x\n        ));\n        if (distToEnd > 1.0) {\n          if (!(dashGapPickable && picking_uActive)) {\n            discard;\n          }\n        }\n      }\n    }\n  }\n"}},a={inject:{"vs:#decl":"\nattribute float instanceOffsets;\n","vs:DECKGL_FILTER_SIZE":"\n  float offsetWidth = abs(instanceOffsets * 2.0) + 1.0;\n  size *= offsetWidth;\n","vCornerOffset = offsetVec;":"\n  float offsetWidth = abs(instanceOffsets * 2.0) + 1.0;\n  vec2 offsetCenter = -instanceOffsets * (isCap ? perp : miterVec * miterSize) * 2.0;\n  vCornerOffset = vCornerOffset * offsetWidth - offsetCenter;\n","fs:#main-start":"\n  float isInside;\n  isInside = step(-1.0, vPathPosition.x) * step(vPathPosition.x, 1.0);\n  if (isInside == 0.0) {\n    discard;\n  }\n"}};var l=i(7160);class c extends o.Z{constructor({dash:t=!1,offset:e=!1,highPrecisionDash:i=!1}={}){super({dash:t||i,offset:e,highPrecisionDash:i})}isEnabled(t){return"pathTesselator"in t.state}getShaders(t){if(!t.isEnabled(this))return null;let e={};return t.opts.dash&&(e=(0,s.l)(e,r)),t.opts.offset&&(e=(0,s.l)(e,a)),e}initializeState(t,e){const i=this.getAttributeManager();i&&e.isEnabled(this)&&(e.opts.dash&&i.addInstanced({instanceDashArrays:{size:2,accessor:"getDashArray"}}),e.opts.highPrecisionDash&&i.addInstanced({instanceDashOffsets:{size:1,accessor:"getPath",transform:e.getDashOffsets.bind(this)}}),e.opts.offset&&i.addInstanced({instanceOffsets:{size:1,accessor:"getOffset"}}))}updateState(t,e){if(!e.isEnabled(this))return;const i={};e.opts.dash&&(i.dashAlignMode=this.props.dashJustified?1:0,i.dashGapPickable=Boolean(this.props.dashGapPickable)),this.state.model.setUniforms(i)}getDashOffsets(t){const e=[0],i="XY"===this.props.positionFormat?2:3,n=Array.isArray(t[0]),o=n?t.length:t.length/i;let s,r;for(let a=0;a<o-1;a++)s=n?t[a]:t.slice(a*i,a*i+i),s=this.projectPosition(s),a>0&&(e[a]=e[a-1]+(0,l.TK)(r,s)),r=s;return e}}(0,n.Z)(c,"defaultProps",{getDashArray:{type:"accessor",value:[0,0]},getOffset:{type:"accessor",value:0},dashJustified:!1,dashGapPickable:!1}),(0,n.Z)(c,"extensionName","PathStyleExtension")},1362:(t,e,i)=>{i.r(e),i.d(e,{GeohashLayer:()=>he,GreatCircleLayer:()=>s,H3ClusterLayer:()=>mt,H3HexagonLayer:()=>ft,MVTLayer:()=>oe,QuadkeyLayer:()=>S,S2Layer:()=>w,TerrainLayer:()=>kt,Tile3DLayer:()=>zt,TileLayer:()=>st,TripsLayer:()=>at,_GeoCellLayer:()=>c,_Tile2DHeader:()=>L,_Tileset2D:()=>et,_getURLFromTemplate:()=>U});var n=i(4572),o=i(4717);class s extends o.Z{}(0,n.Z)(s,"layerName","GreatCircleLayer"),(0,n.Z)(s,"defaultProps",{getHeight:{type:"accessor",value:0},greatCircle:!0});var r=i(8918),a=i(3121);const l={...a.Z.defaultProps};class c extends r.Z{indexToBounds(){return null}renderLayers(){const{elevationScale:t,extruded:e,wireframe:i,filled:n,stroked:o,lineWidthUnits:s,lineWidthScale:r,lineWidthMinPixels:l,lineWidthMaxPixels:c,lineJointRounded:d,lineMiterLimit:u,lineDashJustified:h,getElevation:p,getFillColor:g,getLineColor:f,getLineWidth:m}=this.props,{updateTriggers:v,material:y,transitions:_}=this.props;return new(this.getSubLayerClass("cell",a.Z))({filled:n,wireframe:i,extruded:e,elevationScale:t,stroked:o,lineWidthUnits:s,lineWidthScale:r,lineWidthMinPixels:l,lineWidthMaxPixels:c,lineJointRounded:d,lineMiterLimit:u,lineDashJustified:h,material:y,transitions:_,getElevation:p,getFillColor:g,getLineColor:f,getLineWidth:m},this.getSubLayerProps({id:"cell",updateTriggers:v&&{getElevation:v.getElevation,getFillColor:v.getFillColor,getLineColor:v.getLineColor,getLineWidth:v.getLineWidth}}),this.indexToBounds())}}(0,n.Z)(c,"layerName","GeoCellLayer"),(0,n.Z)(c,"defaultProps",l);var d=i(514),u=i.n(d);const h=180/Math.PI;function p(t,e,i){const n=1<<e;return[(t[0]+i[0])/n,(t[1]+i[1])/n]}function g(t){return t>=.5?1/3*(4*t*t-1):1/3*(1-4*(1-t)*(1-t))}function f(t){return[g(t[0]),g(t[1])]}function m(t,[e,i]){switch(t){case 0:return[1,e,i];case 1:return[-e,1,i];case 2:return[-e,-i,1];case 3:return[-1,-i,-e];case 4:return[i,-1,-e];case 5:return[i,e,-1];default:throw new Error("Invalid face")}}function v([t,e,i]){const n=Math.atan2(i,Math.sqrt(t*t+e*e));return[Math.atan2(e,t)*h,n*h]}function y(t,e,i,n){if(0===n){1===i&&(e[0]=t-1-e[0],e[1]=t-1-e[1]);const n=e[0];e[0]=e[1],e[1]=n}}function _(t){if("string"==typeof t){if(t.indexOf("/")>0)return t;t=function(t){const e=t.padEnd(16,"0");return u().fromString(e,16)}(t)}return function(t){let e=u().fromString(t,!0,10).toString(2);for(;e.length<64;)e="0"+e;const i=e.lastIndexOf("1"),n=e.substring(0,3),o=e.substring(3,i),s=o.length/2,r=u().fromString(n,!0,2).toString(10);let a=u().fromString(o,!0,2).toString(4);for(;a.length<s;)a="0"+a;return"".concat(r,"/").concat(a)}(t.toString())}function x(t){return function({face:t,ij:e,level:i}){const n=[[0,0],[0,1],[1,1],[1,0],[0,0]],o=Math.max(1,Math.ceil(100*Math.pow(2,-i))),s=new Float64Array(4*o*2+2);let r=0,a=0;for(let l=0;l<4;l++){const c=n[l].slice(0),d=n[l+1],u=(d[0]-c[0])/o,h=(d[1]-c[1])/o;for(let n=0;n<o;n++){c[0]+=u,c[1]+=h;const n=v(m(t,f(p(e,i,c))));Math.abs(n[1])>89.999&&(n[0]=a);const o=n[0]-a;n[0]+=o>180?-360:o<-180?360:0,s[r++]=n[0],s[r++]=n[1],a=n[0]}}return s[r++]=s[0],s[r++]=s[1],s}(function(t){const e=t.split("/"),i=parseInt(e[0],10),n=e[1],o=n.length,s=[0,0];let r;for(let t=o-1;t>=0;t--){r=o-t;const e=n[t];let i=0,a=0;"1"===e?a=1:"2"===e?(i=1,a=1):"3"===e&&(i=1);const l=Math.pow(2,r-1);y(l,s,i,a),s[0]+=l*i,s[1]+=l*a}if(i%2==1){const t=s[0];s[0]=s[1],s[1]=t}return{face:i,ij:s,level:r}}(_(t)))}class w extends c{indexToBounds(){const{data:t,getS2Token:e}=this.props;return{data:t,_normalize:!1,positionFormat:"XY",getPolygon:(t,i)=>x(e(t,i))}}}(0,n.Z)(w,"layerName","S2Layer"),(0,n.Z)(w,"defaultProps",{getS2Token:{type:"accessor",value:t=>t.token}});var P=i(7013);function b(t){const[e,i]=function(t){let e=0,i=0,n=1<<t.length;const o=n/512;for(let o=0;o<t.length;o++){n>>=1;const s=parseInt(t[o]);s%2&&(e|=n),s>1&&(i|=n)}return[[e/o,512-i/o],[(e+.99)/o,512-(i+.99)/o]]}(t),[n,o]=(0,P.es)(e),[s,r]=(0,P.es)(i);return[s,o,s,r,n,r,n,o,s,o]}class S extends c{indexToBounds(){const{data:t,getQuadkey:e}=this.props;return{data:t,_normalize:!1,positionFormat:"XY",getPolygon:(t,i)=>b(e(t,i))}}}(0,n.Z)(S,"layerName","QuadkeyLayer"),(0,n.Z)(S,"defaultProps",{getQuadkey:{type:"accessor",value:t=>t.quadkey}});var C=i(1855),M=i(9026),T=i(744);class L{constructor(t){(0,n.Z)(this,"index",void 0),(0,n.Z)(this,"isVisible",void 0),(0,n.Z)(this,"isSelected",void 0),(0,n.Z)(this,"parent",void 0),(0,n.Z)(this,"children",void 0),(0,n.Z)(this,"content",void 0),(0,n.Z)(this,"state",void 0),(0,n.Z)(this,"layers",void 0),(0,n.Z)(this,"id",void 0),(0,n.Z)(this,"bbox",void 0),(0,n.Z)(this,"zoom",void 0),(0,n.Z)(this,"userData",void 0),(0,n.Z)(this,"_abortController",void 0),(0,n.Z)(this,"_loader",void 0),(0,n.Z)(this,"_loaderId",void 0),(0,n.Z)(this,"_isLoaded",void 0),(0,n.Z)(this,"_isCancelled",void 0),(0,n.Z)(this,"_needsReload",void 0),this.index=t,this.isVisible=!1,this.isSelected=!1,this.parent=null,this.children=[],this.content=null,this._loader=void 0,this._abortController=null,this._loaderId=0,this._isLoaded=!1,this._isCancelled=!1,this._needsReload=!1}get data(){return this.isLoading&&this._loader?this._loader.then((()=>this.data)):this.content}get isLoaded(){return this._isLoaded&&!this._needsReload}get isLoading(){return Boolean(this._loader)&&!this._isCancelled}get needsReload(){return this._needsReload||this._isCancelled}get byteLength(){const t=this.content?this.content.byteLength:0;return Number.isFinite(t)||T.Z.error("byteLength not defined in tile data")(),t}async _loadData({getData:t,requestScheduler:e,onLoad:i,onError:n}){const{index:o,id:s,bbox:r,userData:a,zoom:l}=this,c=this._loaderId;this._abortController=new AbortController;const{signal:d}=this._abortController,u=await e.scheduleRequest(this,(t=>t.isSelected?1:-1));if(!u)return void(this._isCancelled=!0);if(this._isCancelled)return void u.done();let h,p=null;try{p=await t({index:o,id:s,bbox:r,userData:a,zoom:l,signal:d})}catch(t){h=t||!0}finally{u.done()}c===this._loaderId&&(this._loader=void 0,this.content=p,!this._isCancelled||p?(this._isLoaded=!0,this._isCancelled=!1,h?n(h,this):i(this)):this._isLoaded=!1)}loadData(t){return this._isLoaded=!1,this._isCancelled=!1,this._needsReload=!1,this._loaderId++,this._loader=this._loadData(t),this._loader}setNeedsReload(){this.isLoading&&(this.abort(),this._loader=void 0),this._needsReload=!0}abort(){var t;this.isLoaded||(this._isCancelled=!0,null===(t=this._abortController)||void 0===t||t.abort())}}var A=i(3131),Z=i(6935),E=i(2872);const z=512,I=[[.5,.5],[0,0],[0,1],[1,0],[1,1]],O=I.concat([[0,.5],[.5,0],[1,.5],[.5,1]]),R=O.concat([[.25,.5],[.75,.5]]);class D{constructor(t,e,i){(0,n.Z)(this,"x",void 0),(0,n.Z)(this,"y",void 0),(0,n.Z)(this,"z",void 0),(0,n.Z)(this,"childVisible",void 0),(0,n.Z)(this,"selected",void 0),(0,n.Z)(this,"_children",void 0),this.x=t,this.y=e,this.z=i}get children(){if(!this._children){const t=2*this.x,e=2*this.y,i=this.z+1;this._children=[new D(t,e,i),new D(t,e+1,i),new D(t+1,e,i),new D(t+1,e+1,i)]}return this._children}update(t){const{viewport:e,cullingVolume:i,elevationBounds:n,minZ:o,maxZ:s,bounds:r,offset:a,project:l}=t,c=this.getBoundingVolume(n,a,l);if(r&&!this.insideBounds(r))return!1;if(i.computeVisibility(c)<0)return!1;if(!this.childVisible){let{z:t}=this;if(t<s&&t>=o){const i=c.distanceTo(e.cameraPosition)*e.scale/e.height;t+=Math.floor(Math.log2(i))}if(t>=s)return this.selected=!0,!0}this.selected=!1,this.childVisible=!0;for(const e of this.children)e.update(t);return!0}getSelected(t=[]){if(this.selected&&t.push(this),this._children)for(const e of this._children)e.getSelected(t);return t}insideBounds([t,e,i,n]){const o=Math.pow(2,this.z),s=z/o;return this.x*s<i&&this.y*s<n&&(this.x+1)*s>t&&(this.y+1)*s>e}getBoundingVolume(t,e,i){if(i){const e=this.z<1?R:this.z<2?O:I,n=[];for(const o of e){const e=W(this.x+o[0],this.y+o[1],this.z);e[2]=t[0],n.push(i(e)),t[0]!==t[1]&&(e[2]=t[1],n.push(i(e)))}return(0,E.du)(n)}const n=Math.pow(2,this.z),o=z/n,s=this.x*o+e*z,r=z-(this.y+1)*o;return new E.Xx([s,r,t[0]],[s+o,r+o,t[1]])}}const F=512,k=[-1/0,-1/0,1/0,1/0],j={type:"url",value:null,validate:(t,e)=>e.optional&&null===t||"string"==typeof t||Array.isArray(t)&&t.every((t=>"string"==typeof t)),equals:(t,e)=>{if(t===e)return!0;if(!Array.isArray(t)||!Array.isArray(e))return!1;const i=t.length;if(i!==e.length)return!1;for(let n=0;n<i;n++)if(t[n]!==e[n])return!1;return!0}};function N(t,e){const i=[e.transformAsPoint([t[0],t[1]]),e.transformAsPoint([t[2],t[1]]),e.transformAsPoint([t[0],t[3]]),e.transformAsPoint([t[2],t[3]])];return[Math.min(...i.map((t=>t[0]))),Math.min(...i.map((t=>t[1]))),Math.max(...i.map((t=>t[0]))),Math.max(...i.map((t=>t[1])))]}function U(t,e){if(!t||!t.length)return null;const{index:i,id:n}=e;if(Array.isArray(t)){t=t[(o=n,Math.abs(o.split("").reduce(((t,e)=>(t<<5)-t+e.charCodeAt(0)|0),0))%t.length)]}var o;let s=t;for(const t of Object.keys(i)){const e=new RegExp("{".concat(t,"}"),"g");s=s.replace(e,String(i[t]))}return Number.isInteger(i.y)&&Number.isInteger(i.z)&&(s=s.replace(/\{-y\}/g,String(Math.pow(2,i.z)-i.y-1))),s}function V({viewport:t,z:e,cullRect:i}){const n=i.x-t.x,o=i.y-t.y,{width:s,height:r}=i;if(!Array.isArray(e)){const i={targetZ:e||0},a=t.unproject([n,o],i),l=t.unproject([n+s,o],i),c=t.unproject([n,o+r],i),d=t.unproject([n+s,o+r],i);return[Math.min(a[0],l[0],c[0],d[0]),Math.min(a[1],l[1],c[1],d[1]),Math.max(a[0],l[0],c[0],d[0]),Math.max(a[1],l[1],c[1],d[1])]}const a=V({viewport:t,z:e[0],cullRect:i}),l=V({viewport:t,z:e[1],cullRect:i});return[Math.min(a[0],l[0]),Math.min(a[1],l[1]),Math.max(a[2],l[2]),Math.max(a[3],l[3])]}function B(t,e){return Math.pow(2,t)*F/e}function W(t,e,i){const n=B(i,F),o=t/n*360-180,s=Math.PI-2*Math.PI*e/n;return[o,180/Math.PI*Math.atan(.5*(Math.exp(s)-Math.exp(-s)))]}function G(t,e,i,n){const o=B(i,n);return[t/o*F,e/o*F]}function H(t,e,i,n,o=512){if(t.isGeospatial){const[t,o]=W(e,i,n),[s,r]=W(e+1,i+1,n);return{west:t,north:o,east:s,south:r}}const[s,r]=G(e,i,n,o),[a,l]=G(e+1,i+1,n,o);return{left:s,top:r,right:a,bottom:l}}function q(t,e,i,n,o){const s=function(t,e,i){let n;if(e&&2===e.length){const[i,o]=e,s=t.getBounds({z:i}),r=t.getBounds({z:o});n=[Math.min(s[0],r[0]),Math.min(s[1],r[1]),Math.max(s[2],r[2]),Math.max(s[3],r[3])]}else n=t.getBounds();return t.isGeospatial?[Math.max(n[0],i[0]),Math.max(n[1],i[1]),Math.min(n[2],i[2]),Math.min(n[3],i[3])]:[Math.max(Math.min(n[0],i[2]),i[0]),Math.max(Math.min(n[1],i[3]),i[1]),Math.min(Math.max(n[2],i[0]),i[2]),Math.min(Math.max(n[3],i[1]),i[3])]}(t,null,n),r=B(e,i),[a,l,c,d]=function(t,e,i){if(i)return N(t,i).map((t=>t*e/F));return t.map((t=>t*e/F))}(s,r,o),u=[];for(let t=Math.floor(a);t<c;t++)for(let i=Math.floor(l);i<d;i++)u.push({x:t,y:i,z:e});return u}function X({viewport:t,maxZoom:e,minZoom:i,zRange:n,extent:o,tileSize:s=512,modelMatrix:r,modelMatrixInverse:a,zoomOffset:l=0}){let c=t.isGeospatial?Math.round(t.zoom+Math.log2(F/s))+l:Math.ceil(t.zoom)+l;if("number"==typeof i&&Number.isFinite(i)&&c<i){if(!o)return[];c=i}"number"==typeof e&&Number.isFinite(e)&&c>e&&(c=e);let d=o;return r&&a&&o&&!t.isGeospatial&&(d=N(o,r)),t.isGeospatial?function(t,e,i,n){const o=t instanceof A.Z&&t.resolution?t.projectPosition:null,s=Object.values(t.getFrustumPlanes()).map((({normal:t,distance:e})=>new E.JO(t.clone().negate(),e))),r=new E.Mh(s),a=t.distanceScales.unitsPerMeter[2],l=i&&i[0]*a||0,c=i&&i[1]*a||0,d=t instanceof Z.Z&&t.pitch<=60?e:0;if(n){const[t,e,i,o]=n,s=(0,P.w5)([t,o]),r=(0,P.w5)([i,e]);n=[s[0],z-s[1],r[0],z-r[1]]}const u=new D(0,0,0),h={viewport:t,project:o,cullingVolume:r,elevationBounds:[l,c],minZ:d,maxZ:e,bounds:n,offset:0};if(u.update(h),t instanceof Z.Z&&t.subViewports&&t.subViewports.length>1){for(h.offset=-1;u.update(h)&&!(--h.offset<-3););for(h.offset=1;u.update(h)&&!(++h.offset>3););}return u.getSelected()}(t,c,n,o):q(t,c,s,d||k,a)}var K=i(8634),Y=i(5451),J=i(4034),Q=i(8177);const $="best-available",tt={[$]:function(t){for(const e of t)e.state=0;for(const e of t)e.isSelected&&!it(e)&&nt(e);for(const e of t)e.isVisible=Boolean(2&e.state)},"no-overlap":function(t){for(const e of t)e.state=0;for(const e of t)e.isSelected&&it(e);const e=Array.from(t).sort(((t,e)=>t.zoom-e.zoom));for(const t of e)if(t.isVisible=Boolean(2&t.state),t.children&&(t.isVisible||1&t.state))for(const e of t.children)e.state=1;else t.isSelected&&nt(t)},never:()=>{}};class et{constructor(t){(0,n.Z)(this,"opts",void 0),(0,n.Z)(this,"_requestScheduler",void 0),(0,n.Z)(this,"_cache",void 0),(0,n.Z)(this,"_dirty",void 0),(0,n.Z)(this,"_tiles",void 0),(0,n.Z)(this,"_cacheByteSize",void 0),(0,n.Z)(this,"_viewport",void 0),(0,n.Z)(this,"_zRange",void 0),(0,n.Z)(this,"_selectedTiles",void 0),(0,n.Z)(this,"_frameNumber",void 0),(0,n.Z)(this,"_modelMatrix",void 0),(0,n.Z)(this,"_modelMatrixInverse",void 0),(0,n.Z)(this,"_maxZoom",void 0),(0,n.Z)(this,"_minZoom",void 0),(0,n.Z)(this,"onTileLoad",void 0),(0,n.Z)(this,"_getCullBounds",(0,Q.Z)(V)),this.opts=t,this.onTileLoad=t=>{this.opts.onTileLoad(t),this.opts.maxCacheByteSize&&(this._cacheByteSize+=t.byteLength,this._resizeCache())},this._requestScheduler=new K.Z({maxRequests:t.maxRequests,throttleRequests:t.maxRequests>0}),this._cache=new Map,this._tiles=[],this._dirty=!1,this._cacheByteSize=0,this._viewport=null,this._selectedTiles=null,this._frameNumber=0,this._modelMatrix=new Y.Z,this._modelMatrixInverse=new Y.Z,this.setOptions(t)}get tiles(){return this._tiles}get selectedTiles(){return this._selectedTiles}get isLoaded(){return null!==this._selectedTiles&&this._selectedTiles.every((t=>t.isLoaded))}get needsReload(){return null!==this._selectedTiles&&this._selectedTiles.some((t=>t.needsReload))}setOptions(t){Object.assign(this.opts,t),Number.isFinite(t.maxZoom)&&(this._maxZoom=Math.floor(t.maxZoom)),Number.isFinite(t.minZoom)&&(this._minZoom=Math.ceil(t.minZoom))}finalize(){for(const t of this._cache.values())t.isLoading&&t.abort();this._cache.clear(),this._tiles=[],this._selectedTiles=null}reloadAll(){for(const t of this._cache.keys()){const e=this._cache.get(t);this._selectedTiles&&this._selectedTiles.includes(e)?e.setNeedsReload():this._cache.delete(t)}}update(t,{zRange:e,modelMatrix:i}={}){const n=new Y.Z(i),o=!n.equals(this._modelMatrix);if(this._viewport&&t.equals(this._viewport)&&(0,J.fS)(this._zRange,e)&&!o)this.needsReload&&(this._selectedTiles=this._selectedTiles.map((t=>this._getTile(t.index,!0))));else{o&&(this._modelMatrixInverse=n.clone().invert(),this._modelMatrix=n),this._viewport=t,this._zRange=e;const i=this.getTileIndices({viewport:t,maxZoom:this._maxZoom,minZoom:this._minZoom,zRange:e,modelMatrix:this._modelMatrix,modelMatrixInverse:this._modelMatrixInverse});this._selectedTiles=i.map((t=>this._getTile(t,!0))),this._dirty&&this._rebuildTree()}const s=this.updateTileStates();return this._pruneRequests(),this._dirty&&this._resizeCache(),s&&this._frameNumber++,this._frameNumber}isTileVisible(t,e){if(!t.isVisible)return!1;if(e&&this._viewport){const[i,n,o,s]=V({viewport:this._viewport,z:this._zRange,cullRect:e}),{bbox:r}=t;if("west"in r)return r.west<o&&r.east>i&&r.south<s&&r.north>n;const a=Math.min(r.top,r.bottom),l=Math.max(r.top,r.bottom);return r.left<o&&r.right>i&&a<s&&l>n}return!0}getTileIndices({viewport:t,maxZoom:e,minZoom:i,zRange:n,modelMatrix:o,modelMatrixInverse:s}){const{tileSize:r,extent:a,zoomOffset:l}=this.opts;return X({viewport:t,maxZoom:e,minZoom:i,zRange:n,tileSize:r,extent:a,modelMatrix:o,modelMatrixInverse:s,zoomOffset:l})}getTileId(t){return"".concat(t.x,"-").concat(t.y,"-").concat(t.z)}getTileZoom(t){return t.z}getTileMetadata(t){const{tileSize:e}=this.opts;return{bbox:H(this._viewport,t.x,t.y,t.z,e)}}getParentIndex(t){return{x:Math.floor(t.x/2),y:Math.floor(t.y/2),z:t.z-1}}updateTileStates(){const t=this.opts.refinementStrategy||$,e=new Array(this._cache.size);let i=0;for(const t of this._cache.values())e[i++]=t.isVisible,t.isSelected=!1,t.isVisible=!1;for(const t of this._selectedTiles)t.isSelected=!0,t.isVisible=!0;("function"==typeof t?t:tt[t])(Array.from(this._cache.values())),i=0;for(const t of this._cache.values())if(e[i++]!==t.isVisible)return!0;return!1}_pruneRequests(){const{maxRequests:t}=this.opts,e=[];let i=0;for(const t of this._cache.values())t.isLoading&&(i++,t.isSelected||t.isVisible||e.push(t));for(;t>0&&i>t&&e.length>0;){e.shift().abort(),i--}}_rebuildTree(){const{_cache:t}=this;for(const e of t.values())e.parent=null,e.children&&(e.children.length=0);for(const e of t.values()){const t=this._getNearestAncestor(e);e.parent=t,null!=t&&t.children&&t.children.push(e)}}_resizeCache(){const{_cache:t,opts:e}=this,i=e.maxCacheSize||(e.maxCacheByteSize?1/0:5*this.selectedTiles.length),n=e.maxCacheByteSize||1/0;if(t.size>i||this._cacheByteSize>n){for(const[o,s]of t)if(s.isVisible||s.isSelected||(this._cacheByteSize-=e.maxCacheByteSize?s.byteLength:0,t.delete(o),this.opts.onTileUnload(s)),t.size<=i&&this._cacheByteSize<=n)break;this._rebuildTree(),this._dirty=!0}this._dirty&&(this._tiles=Array.from(this._cache.values()).sort(((t,e)=>t.zoom-e.zoom)),this._dirty=!1)}_getTile(t,e){const i=this.getTileId(t);let n=this._cache.get(i),o=!1;return!n&&e?(n=new L(t),Object.assign(n,this.getTileMetadata(n.index)),Object.assign(n,{id:i,zoom:this.getTileZoom(n.index)}),o=!0,this._cache.set(i,n),this._dirty=!0):n&&n.needsReload&&(o=!0),n&&o&&n.loadData({getData:this.opts.getTileData,requestScheduler:this._requestScheduler,onLoad:this.onTileLoad,onError:this.opts.onTileError}),n}_getNearestAncestor(t){const{_minZoom:e=0}=this;let i=t.index;for(;this.getTileZoom(i)>e;){i=this.getParentIndex(i);const t=this._getTile(i);if(t)return t}return null}}function it(t){let e=t;for(;e;){if(e.isLoaded||e.content)return e.state|=2,!0;e=e.parent}return!1}function nt(t){for(const e of t.children)e.isLoaded||e.content?e.state|=2:nt(e)}const ot={TilesetClass:et,data:{type:"data",value:[]},dataComparator:j.equals,renderSubLayers:{type:"function",value:t=>new M.Z(t),compare:!1},getTileData:{type:"function",optional:!0,value:null,compare:!1},onViewportLoad:{type:"function",optional:!0,value:null,compare:!1},onTileLoad:{type:"function",value:t=>{},compare:!1},onTileUnload:{type:"function",value:t=>{},compare:!1},onTileError:{type:"function",value:t=>console.error(t),compare:!1},extent:{type:"array",optional:!0,value:null,compare:!0},tileSize:512,maxZoom:null,minZoom:0,maxCacheSize:null,maxCacheByteSize:null,refinementStrategy:$,zRange:null,maxRequests:6,zoomOffset:0};class st extends r.Z{initializeState(){this.state={tileset:null,isLoaded:!1}}finalizeState(){var t,e;null===(t=this.state)||void 0===t||null===(e=t.tileset)||void 0===e||e.finalize()}get isLoaded(){var t,e;return null===(t=this.state)||void 0===t||null===(e=t.tileset)||void 0===e?void 0:e.selectedTiles.every((t=>t.isLoaded&&t.layers&&t.layers.every((t=>t.isLoaded))))}shouldUpdateState({changeFlags:t}){return t.somethingChanged}updateState({changeFlags:t}){let{tileset:e}=this.state;const i=t.propsOrDataChanged||t.updateTriggersChanged,n=t.dataChanged||t.updateTriggersChanged&&(t.updateTriggersChanged.all||t.updateTriggersChanged.getTileData);e?i&&(e.setOptions(this._getTilesetOptions()),n?e.reloadAll():this.state.tileset.tiles.forEach((t=>{t.layers=null}))):(e=new this.props.TilesetClass(this._getTilesetOptions()),this.setState({tileset:e})),this._updateTileset()}_getTilesetOptions(){const{tileSize:t,maxCacheSize:e,maxCacheByteSize:i,refinementStrategy:n,extent:o,maxZoom:s,minZoom:r,maxRequests:a,zoomOffset:l}=this.props;return{maxCacheSize:e,maxCacheByteSize:i,maxZoom:s,minZoom:r,tileSize:t,refinementStrategy:n,extent:o,maxRequests:a,zoomOffset:l,getTileData:this.getTileData.bind(this),onTileLoad:this._onTileLoad.bind(this),onTileError:this._onTileError.bind(this),onTileUnload:this._onTileUnload.bind(this)}}_updateTileset(){const{tileset:t}=this.state,{zRange:e,modelMatrix:i}=this.props,n=t.update(this.context.viewport,{zRange:e,modelMatrix:i}),{isLoaded:o}=t,s=this.state.isLoaded!==o,r=this.state.frameNumber!==n;o&&(s||r)&&this._onViewportLoad(),r&&this.setState({frameNumber:n}),this.state.isLoaded=o}_onViewportLoad(){const{tileset:t}=this.state,{onViewportLoad:e}=this.props;e&&e(t.selectedTiles)}_onTileLoad(t){this.props.onTileLoad(t),t.layers=null,this.setNeedsUpdate()}_onTileError(t,e){this.props.onTileError(t),e.layers=null,this.setNeedsUpdate()}_onTileUnload(t){this.props.onTileUnload(t)}getTileData(t){const{data:e,getTileData:i,fetch:n}=this.props,{signal:o}=t;return t.url="string"==typeof e||Array.isArray(e)?U(e,t):null,i?i(t):n&&t.url?n(t.url,{propName:"data",layer:this,signal:o}):null}renderSubLayers(t){return this.props.renderSubLayers(t)}getSubLayerPropsByTile(t){return null}getPickingInfo({info:t,sourceLayer:e}){return t.picked&&(t.tile=e.props.tile),t}_updateAutoHighlight(t){t.sourceLayer&&t.sourceLayer.updateAutoHighlight(t)}renderLayers(){return this.state.tileset.tiles.map((t=>{const e=this.getSubLayerPropsByTile(t);if(t.isLoaded||t.content)if(t.layers)e&&t.layers[0]&&Object.keys(e).some((i=>t.layers[0].props[i]!==e[i]))&&(t.layers=t.layers.map((t=>t.clone(e))));else{const i=this.renderSubLayers({...this.props,id:"".concat(this.id,"-").concat(t.id),data:t.content,_offset:0,tile:t});t.layers=(0,C.x)(i,Boolean).map((i=>i.clone({tile:t,...e})))}else;return t.layers}))}filterSubLayer({layer:t,cullRect:e}){const{tile:i}=t.props;return this.state.tileset.isTileVisible(i,e)}}(0,n.Z)(st,"defaultProps",ot),(0,n.Z)(st,"layerName","TileLayer");var rt=i(2112);class at extends rt.Z{getShaders(){const t=super.getShaders();return t.inject={"vs:#decl":"uniform float trailLength;\nattribute float instanceTimestamps;\nattribute float instanceNextTimestamps;\nvarying float vTime;\n","vs:#main-end":"vTime = instanceTimestamps + (instanceNextTimestamps - instanceTimestamps) * vPathPosition.y / vPathLength;\n","fs:#decl":"uniform bool fadeTrail;\nuniform float trailLength;\nuniform float currentTime;\nvarying float vTime;\n","fs:#main-start":"if(vTime > currentTime || (fadeTrail && (vTime < currentTime - trailLength))) {\n  discard;\n}\n","fs:DECKGL_FILTER_COLOR":"if(fadeTrail) {\n  color.a *= 1.0 - (currentTime - vTime) / trailLength;\n}\n"},t}initializeState(){super.initializeState();this.getAttributeManager().addInstanced({timestamps:{size:1,accessor:"getTimestamps",shaderAttributes:{instanceTimestamps:{vertexOffset:0},instanceNextTimestamps:{vertexOffset:1}}}})}draw(t){const{fadeTrail:e,trailLength:i,currentTime:n}=this.props;t.uniforms={...t.uniforms,fadeTrail:e,trailLength:i,currentTime:n},super.draw(t)}}(0,n.Z)(at,"layerName","TripsLayer"),(0,n.Z)(at,"defaultProps",{fadeTrail:!0,trailLength:{type:"number",value:120,min:0},currentTime:{type:"number",value:0,min:0},getTimestamps:{type:"accessor",value:t=>t.timestamps}});var lt=i(9947),ct=i(8550),dt=i(5103);function ut(t,e){e=void 0===e?t[0][0]:e;for(const i of t){const t=i[0]-e;t>180?i[0]-=360:t<-180&&(i[0]+=360)}}function ht(t,e,i){const n=t(e,i),[o,s]=(0,lt.h3ToGeo)(n);return[s,o]}function pt(t,e=1){const i=(0,lt.h3ToGeoBoundary)(t,!0);return 1!==e?function(t,e,i){const[n,o]=(0,lt.h3ToGeo)(t),s=e.length;ut(e,o);const r=e[0]===e[s-1]?s-1:s;for(let t=0;t<r;t++)e[t][0]=(0,J.t7)(o,e[t][0],i),e[t][1]=(0,J.t7)(n,e[t][1],i)}(t,i,e):ut(i),i}const gt={...a.Z.defaultProps,highPrecision:"auto",coverage:{type:"number",min:0,max:1,value:1},centerHexagon:null,getHexagon:{type:"accessor",value:t=>t.hexagon},extruded:!0};class ft extends r.Z{constructor(...t){super(...t),(0,n.Z)(this,"state",void 0)}initializeState(){ft._checkH3Lib(),this.state={edgeLengthKM:0,resolution:-1}}shouldUpdateState({changeFlags:t}){return this._shouldUseHighPrecision()?t.propsOrDataChanged:t.somethingChanged}updateState({props:t,changeFlags:e}){if(!0!==t.highPrecision&&(e.dataChanged||e.updateTriggersChanged&&e.updateTriggersChanged.getHexagon)){const t=this._calculateH3DataProps();this.setState(t)}this._updateVertices(this.context.viewport)}_calculateH3DataProps(){let t=-1,e=!1,i=!1;const{iterable:n,objectInfo:o}=(0,ct.jB)(this.props.data);for(const s of n){o.index++;const n=this.props.getHexagon(s,o),r=(0,lt.h3GetResolution)(n);if(t<0){if(t=r,!this.props.highPrecision)break}else if(t!==r){i=!0;break}if((0,lt.h3IsPentagon)(n)){e=!0;break}}return{resolution:t,edgeLengthKM:t>=0?(0,lt.edgeLength)(t,"km"):0,hasMultipleRes:i,hasPentagon:e}}_shouldUseHighPrecision(){if("auto"===this.props.highPrecision){const{resolution:t,hasPentagon:e,hasMultipleRes:i}=this.state,{viewport:n}=this.context;return Boolean(null==n?void 0:n.resolution)||i||e||t>=0&&t<=5}return this.props.highPrecision}_updateVertices(t){if(this._shouldUseHighPrecision())return;const{resolution:e,edgeLengthKM:i,centerHex:n}=this.state;if(e<0)return;const o=this.props.centerHexagon||(0,lt.geoToH3)(t.latitude,t.longitude,e);if(n===o)return;if(n){const t=(0,lt.h3Distance)(n,o);if(t>=0&&t*i<10)return}const{unitsPerMeter:s}=t.distanceScales;let r=pt(o);const[a,l]=(0,lt.h3ToGeo)(o),[c,d]=t.projectFlat([l,a]);r=r.map((e=>{const i=t.projectFlat(e);return[(i[0]-c)/s[0],(i[1]-d)/s[1]]})),this.setState({centerHex:o,vertices:r})}renderLayers(){return this._shouldUseHighPrecision()?this._renderPolygonLayer():this._renderColumnLayer()}_getForwardProps(){const{elevationScale:t,material:e,coverage:i,extruded:n,wireframe:o,stroked:s,filled:r,lineWidthUnits:a,lineWidthScale:l,lineWidthMinPixels:c,lineWidthMaxPixels:d,getFillColor:u,getElevation:h,getLineColor:p,getLineWidth:g,transitions:f,updateTriggers:m}=this.props;return{elevationScale:t,extruded:n,coverage:i,wireframe:o,stroked:s,filled:r,lineWidthUnits:a,lineWidthScale:l,lineWidthMinPixels:c,lineWidthMaxPixels:d,material:e,getElevation:h,getFillColor:u,getLineColor:p,getLineWidth:g,transitions:f,updateTriggers:{getFillColor:m.getFillColor,getElevation:m.getElevation,getLineColor:m.getLineColor,getLineWidth:m.getLineWidth}}}_renderPolygonLayer(){const{data:t,getHexagon:e,updateTriggers:i,coverage:n}=this.props,o=this.getSubLayerClass("hexagon-cell-hifi",a.Z),s=this._getForwardProps();return s.updateTriggers.getPolygon=function(t,e){let i;return i=null==t?e:"object"==typeof t?{...t,coverage:e}:{getHexagon:t,coverage:e},i}(i.getHexagon,n),new o(s,this.getSubLayerProps({id:"hexagon-cell-hifi",updateTriggers:s.updateTriggers}),{data:t,_normalize:!1,_windingOrder:"CCW",positionFormat:"XY",getPolygon:(t,i)=>function(t){const e=new Float64Array(2*t.length);let i=0;for(const n of t)e[i++]=n[0],e[i++]=n[1];return e}(pt(e(t,i),n))})}_renderColumnLayer(){const{data:t,getHexagon:e,updateTriggers:i}=this.props,n=this.getSubLayerClass("hexagon-cell",dt.Z),o=this._getForwardProps();return o.updateTriggers.getPosition=i.getHexagon,new n(o,this.getSubLayerProps({id:"hexagon-cell",flatShading:!0,updateTriggers:o.updateTriggers}),{data:t,diskResolution:6,radius:1,vertices:this.state.vertices,getPosition:ht.bind(null,e)})}}(0,n.Z)(ft,"defaultProps",gt),(0,n.Z)(ft,"layerName","H3HexagonLayer"),(0,n.Z)(ft,"_checkH3Lib",(()=>{}));class mt extends c{initializeState(){ft._checkH3Lib()}updateState({props:t,changeFlags:e}){if(e.dataChanged||e.updateTriggersChanged&&e.updateTriggersChanged.getHexagons){const{data:e,getHexagons:i}=t,n=[],{iterable:o,objectInfo:s}=(0,ct.jB)(e);for(const t of o){s.index++;const e=i(t,s),o=(0,lt.h3SetToMultiPolygon)(e,!0);for(const e of o)n.push(this.getSubLayerRow({polygon:e},t,s.index))}this.setState({polygons:n})}}indexToBounds(){return{data:this.state.polygons,getPolygon:t=>t.polygon}}}(0,n.Z)(mt,"layerName","H3ClusterLayer"),(0,n.Z)(mt,"defaultProps",{getHexagons:{type:"accessor",value:t=>t.hexagons}});var vt=i(3982),yt=i(4088),_t=i(7693),xt=i(5547),wt=i(1307),Pt=i(4080),bt=i(9769),St=i(3989);class Ct extends St.Z{getShaders(){const t=super.getShaders();return t.modules.push(Pt.b),{...t,vs:"#version 300 es\n#define SHADER_NAME simple-mesh-layer-vs\n\n// Scale the model\nuniform float sizeScale;\nuniform bool composeModelMatrix;\nuniform bool pickFeatureIds;\n\n// Primitive attributes\nin vec3 positions;\nin vec3 normals;\nin vec3 colors;\nin vec2 texCoords;\nin vec4 uvRegions;\nin vec3 featureIdsPickingColors;\n\n// Instance attributes\nin vec4 instanceColors;\nin vec3 instancePickingColors;\nin mat3 instanceModelMatrix;\n\n// Outputs to fragment shader\nout vec2 vTexCoord;\nout vec3 cameraPosition;\nout vec3 normals_commonspace;\nout vec4 position_commonspace;\nout vec4 vColor;\n\nvec2 applyUVRegion(vec2 uv) {\n  #ifdef HAS_UV_REGIONS\n    // https://github.com/Esri/i3s-spec/blob/master/docs/1.7/geometryUVRegion.cmn.md\n    return fract(uv) * (uvRegions.zw - uvRegions.xy) + uvRegions.xy;\n  #else\n    return uv;\n  #endif\n}\n\nvoid main(void) {\n  vec2 uv = applyUVRegion(texCoords);\n  geometry.uv = uv;\n\n  if (pickFeatureIds) {\n    geometry.pickingColor = featureIdsPickingColors;\n  } else {\n    geometry.pickingColor = instancePickingColors;\n  }\n\n  vTexCoord = uv;\n  cameraPosition = project_uCameraPosition;\n  vColor = vec4(colors * instanceColors.rgb, instanceColors.a);\n\n  vec3 pos = (instanceModelMatrix * positions) * sizeScale;\n  vec3 projectedPosition = project_position(positions);\n  position_commonspace = vec4(projectedPosition, 1.0);\n  gl_Position = project_common_position_to_clipspace(position_commonspace);\n\n  geometry.position = position_commonspace;\n  normals_commonspace = project_normal(instanceModelMatrix * normals);\n  geometry.normal = normals_commonspace;\n\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  #ifdef MODULE_PBR\n    // set PBR data\n    pbr_vPosition = geometry.position.xyz;\n    #ifdef HAS_NORMALS\n      pbr_vNormal = geometry.normal;\n    #endif\n\n    #ifdef HAS_UV\n      pbr_vUV = uv;\n    #else\n      pbr_vUV = vec2(0., 0.);\n    #endif\n    geometry.uv = pbr_vUV;\n  #endif\n\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#version 300 es\n#define SHADER_NAME simple-mesh-layer-fs\n\nprecision highp float;\n\nuniform bool hasTexture;\nuniform sampler2D sampler;\nuniform bool flatShading;\nuniform float opacity;\n\nin vec2 vTexCoord;\nin vec3 cameraPosition;\nin vec3 normals_commonspace;\nin vec4 position_commonspace;\nin vec4 vColor;\n\nout vec4 fragColor;\n\nvoid main(void) {\n  \n#ifdef MODULE_PBR\n\n  fragColor = vColor * pbr_filterColor(vec4(0));\n  geometry.uv = pbr_vUV;\n  fragColor.a *= opacity;\n\n#else\n\n  geometry.uv = vTexCoord;\n\n  vec3 normal;\n  if (flatShading) {\n\n// NOTE(Tarek): This is necessary because\n// headless.gl reports the extension as\n// available but does not support it in\n// the shader.\n#ifdef DERIVATIVES_AVAILABLE\n    normal = normalize(cross(dFdx(position_commonspace.xyz), dFdy(position_commonspace.xyz)));\n#else\n    normal = vec3(0.0, 0.0, 1.0);\n#endif\n  } else {\n    normal = normals_commonspace;\n  }\n\n  vec4 color = hasTexture ? texture(sampler, vTexCoord) : vColor;\n  vec3 lightColor = lighting_getLightColor(color.rgb, cameraPosition, position_commonspace.xyz, normal);\n  fragColor = vec4(lightColor, color.a * opacity);\n\n#endif\n\n  DECKGL_FILTER_COLOR(fragColor, geometry);\n}\n"}}initializeState(){const{featureIds:t}=this.props;super.initializeState();const e=this.getAttributeManager();t&&e.add({featureIdsPickingColors:{type:5121,size:3,noAlloc:!0,update:this.calculateFeatureIdsPickingColors}})}updateState(t){super.updateState(t);const{props:e,oldProps:i}=t;e.pbrMaterial!==i.pbrMaterial&&this.updatePbrMaterialUniforms(e.pbrMaterial)}draw(t){const{featureIds:e}=this.props;this.state.model&&(this.state.model.setUniforms({u_Camera:this.state.model.getUniforms().project_uCameraPosition,pickFeatureIds:Boolean(e)}),super.draw(t))}getModel(t){const{id:e,pbrMaterial:i}=this.props,n=this.parseMaterial(i,t);this.setState({materialParser:n});const o=this.getShaders();var s;(s=t.attributes).COLOR_0||s.colors||(s.colors={constant:!0,value:new Float32Array([1,1,1])});return new bt.Z(this.context.gl,{...this.getShaders(),id:e,geometry:t,defines:{...o.defines,...null==n?void 0:n.defines,HAS_UV_REGIONS:t.attributes.uvRegions},parameters:null==n?void 0:n.parameters,isInstanced:!0})}updatePbrMaterialUniforms(t){const{model:e}=this.state;if(e){const{mesh:i}=this.props,n=this.parseMaterial(t,i);this.setState({materialParser:n}),e.setUniforms(n.uniforms)}}parseMaterial(t,e){var i;const n=Boolean(t.pbrMetallicRoughness&&t.pbrMetallicRoughness.baseColorTexture);return null===(i=this.state.materialParser)||void 0===i||i.delete(),new wt.Z(this.context.gl,{attributes:{NORMAL:e.attributes.normals,TEXCOORD_0:e.attributes.texCoords},material:{unlit:n,...t},pbrDebug:!1,imageBasedLightingEnvironment:null,lights:!0,useTangents:!1})}calculateFeatureIdsPickingColors(t){const e=this.props.featureIds,i=new Uint8ClampedArray(e.length*t.size),n=[];for(let t=0;t<e.length;t++)this.encodePickingColor(e[t],n),i[3*t]=n[0],i[3*t+1]=n[1],i[3*t+2]=n[2];t.value=i}finalizeState(t){var e;super.finalizeState(t),null===(e=this.state.materialParser)||void 0===e||e.delete(),this.setState({materialParser:null})}}(0,n.Z)(Ct,"layerName","MeshLayer"),(0,n.Z)(Ct,"defaultProps",{pbrMaterial:{type:"object",value:null},featureIds:{type:"array",value:null,optional:!0}});var Mt=i(8162),Tt=i(1033),Lt=i(3983),At=i(3371);const Zt=[0],Et={getPointColor:{type:"accessor",value:[0,0,0,255]},pointSize:1,data:null,loader:At.u,onTilesetLoad:{type:"function",value:t=>{},compare:!1},onTileLoad:{type:"function",value:t=>{},compare:!1},onTileUnload:{type:"function",value:t=>{},compare:!1},onTileError:{type:"function",value:(t,e,i)=>{},compare:!1},_getMeshColor:{type:"function",value:t=>[255,255,255],compare:!1}};class zt extends r.Z{constructor(...t){super(...t),(0,n.Z)(this,"state",void 0)}initializeState(){"onTileLoadFail"in this.props&&T.Z.removed("onTileLoadFail","onTileError")(),this.state={layerMap:{},tileset3d:null,activeViewports:{},lastUpdatedViewports:null}}get isLoaded(){const{tileset3d:t}=this.state;return null!==t&&t.isLoaded()}shouldUpdateState({changeFlags:t}){return t.somethingChanged}updateState({props:t,oldProps:e,changeFlags:i}){if(t.data&&t.data!==e.data&&this._loadTileset(t.data),i.viewportChanged){const{activeViewports:t}=this.state;Object.keys(t).length&&(this._updateTileset(t),this.state.lastUpdatedViewports=t,this.state.activeViewports={})}if(i.propsChanged){const{layerMap:t}=this.state;for(const e in t)t[e].needsUpdate=!0}}activateViewport(t){const{activeViewports:e,lastUpdatedViewports:i}=this.state;this.internalState.viewport=t,e[t.id]=t;const n=null==i?void 0:i[t.id];n&&t.equals(n)||(this.setChangeFlags({viewportChanged:!0}),this.setNeedsUpdate())}getPickingInfo({info:t,sourceLayer:e}){const{layerMap:i}=this.state,n=e&&e.id;if(n){const e=n.substring(this.id.length+1),o=e.substring(e.indexOf("-")+1);t.object=i[o]&&i[o].tile}return t}filterSubLayer({layer:t,viewport:e}){const{tile:i}=t.props,{id:n}=e;return i.selected&&i.viewportIds.includes(n)}_updateAutoHighlight(t){t.sourceLayer&&t.sourceLayer.updateAutoHighlight(t)}async _loadTileset(t){const{loadOptions:e={}}=this.props;let i=this.props.loader||this.props.loaders;Array.isArray(i)&&(i=i[0]);const n={loadOptions:{...e}};if(i.preload){const o=await i.preload(t,e);o.headers&&(n.loadOptions.fetch={...n.loadOptions.fetch,headers:o.headers}),Object.assign(n,o)}const o=await(0,Mt.z)(t,i,n.loadOptions),s=new Tt.Z(o,{onTileLoad:this._onTileLoad.bind(this),onTileUnload:this._onTileUnload.bind(this),onTileError:this.props.onTileError,...n});this.setState({tileset3d:s,layerMap:{}}),this._updateTileset(this.state.activeViewports),this.props.onTilesetLoad(s)}_onTileLoad(t){const{lastUpdatedViewports:e}=this.state;this.props.onTileLoad(t),this._updateTileset(e),this.setNeedsUpdate()}_onTileUnload(t){delete this.state.layerMap[t.id],this.props.onTileUnload(t)}_updateTileset(t){if(!t)return;const{tileset3d:e}=this.state,{timeline:i}=this.context,n=Object.keys(t).length;i&&n&&e&&e.selectTiles(Object.values(t)).then((t=>{this.state.frameNumber!==t&&this.setState({frameNumber:t})}))}_getSubLayer(t,e){if(!t.content)return null;switch(t.type){case Lt.R7.POINTCLOUD:return this._makePointCloudLayer(t,e);case Lt.R7.SCENEGRAPH:return this._make3DModelLayer(t);case Lt.R7.MESH:return this._makeSimpleMeshLayer(t,e);default:throw new Error("Tile3DLayer: Failed to render layer of type ".concat(t.content.type))}}_makePointCloudLayer(t,e){const{attributes:i,pointCount:n,constantRGBA:o,cartographicOrigin:s,modelMatrix:r}=t.content,{positions:a,normals:l,colors:c}=i;if(!a)return null;const d=e&&e.props.data||{header:{vertexCount:n},attributes:{POSITION:a,NORMAL:l,COLOR_0:c}},{pointSize:u,getPointColor:h}=this.props;return new(this.getSubLayerClass("pointcloud",_t.Z))({pointSize:u},this.getSubLayerProps({id:"pointcloud"}),{id:"".concat(this.id,"-pointcloud-").concat(t.id),tile:t,data:d,coordinateSystem:yt.Df.METER_OFFSETS,coordinateOrigin:s,modelMatrix:r,getColor:o||h,_offset:0})}_make3DModelLayer(t){const{gltf:e,instances:i,cartographicOrigin:n,modelMatrix:o}=t.content;return new(this.getSubLayerClass("scenegraph",xt.Z))({_lighting:"pbr"},this.getSubLayerProps({id:"scenegraph"}),{id:"".concat(this.id,"-scenegraph-").concat(t.id),tile:t,data:i||Zt,scenegraph:e,coordinateSystem:yt.Df.METER_OFFSETS,coordinateOrigin:n,modelMatrix:o,getTransformMatrix:t=>t.modelMatrix,getPosition:[0,0,0],_offset:0})}_makeSimpleMeshLayer(t,e){const i=t.content,{attributes:n,indices:o,modelMatrix:s,cartographicOrigin:r,coordinateSystem:a=yt.Df.METER_OFFSETS,material:l,featureIds:c}=i,{_getMeshColor:d}=this.props,u=e&&e.props.mesh||new vt.Z({drawMode:4,attributes:It(n),indices:o});return new(this.getSubLayerClass("mesh",Ct))(this.getSubLayerProps({id:"mesh"}),{id:"".concat(this.id,"-mesh-").concat(t.id),tile:t,mesh:u,data:Zt,getColor:d(t),pbrMaterial:l,modelMatrix:s,coordinateOrigin:r,coordinateSystem:a,featureIds:c,_offset:0})}renderLayers(){const{tileset3d:t,layerMap:e}=this.state;return t?t.tiles.map((t=>{const i=e[t.id]=e[t.id]||{tile:t};let{layer:n}=i;return t.selected&&(n?i.needsUpdate&&(n=this._getSubLayer(t,n),i.needsUpdate=!1):n=this._getSubLayer(t)),i.layer=n,n})).filter(Boolean):null}}function It(t){const e={};return e.positions={...t.positions,value:new Float32Array(t.positions.value)},t.normals&&(e.normals=t.normals),t.texCoords&&(e.texCoords=t.texCoords),t.colors&&(e.colors=t.colors),t.uvRegions&&(e.uvRegions=t.uvRegions),e}(0,n.Z)(zt,"defaultProps",Et),(0,n.Z)(zt,"layerName","Tile3DLayer");var Ot=i(5890);const Rt=[1],Dt={...st.defaultProps,elevationData:j,texture:{...j,optional:!0},meshMaxError:{type:"number",value:4},bounds:{type:"array",value:null,optional:!0,compare:!0},color:{type:"color",value:[255,255,255]},elevationDecoder:{type:"object",value:{rScaler:1,gScaler:0,bScaler:0,offset:0}},workerUrl:{type:"string",value:null},wireframe:!1,material:!0,loaders:[Ot.x]};function Ft(t){return Array.isArray(t)?t.join(";"):t||""}class kt extends r.Z{constructor(...t){super(...t),(0,n.Z)(this,"state",void 0)}updateState({props:t,oldProps:e}){const i=t.elevationData!==e.elevationData;if(i){const{elevationData:e}=t,i=e&&(Array.isArray(e)||e.includes("{x}")&&e.includes("{y}"));this.setState({isTiled:i})}const n=i||t.meshMaxError!==e.meshMaxError||t.elevationDecoder!==e.elevationDecoder||t.bounds!==e.bounds;if(!this.state.isTiled&&n){const e=this.loadTerrain(t);this.setState({terrain:e})}t.workerUrl&&T.Z.removed("workerUrl","loadOptions.terrain.workerUrl")()}loadTerrain({elevationData:t,bounds:e,elevationDecoder:i,meshMaxError:n,signal:o}){var s;if(!t)return null;let r=this.getLoadOptions();r={...r,terrain:{skirtHeight:this.state.isTiled?2*n:0,...null===(s=r)||void 0===s?void 0:s.terrain,bounds:e,meshMaxError:n,elevationDecoder:i}};const{fetch:a}=this.props;return a(t,{propName:"elevationData",layer:this,loadOptions:r,signal:o})}getTiledTerrainData(t){const{elevationData:e,fetch:i,texture:n,elevationDecoder:o,meshMaxError:s}=this.props,{viewport:r}=this.context,a=U(e,t),l=n&&U(n,t),{signal:c}=t;let d=[0,0],u=[0,0];if(r.isGeospatial){const e=t.bbox;d=r.projectFlat([e.west,e.south]),u=r.projectFlat([e.east,e.north])}else{const e=t.bbox;d=[e.left,e.bottom],u=[e.right,e.top]}const h=[d[0],d[1],u[0],u[1]],p=this.loadTerrain({elevationData:a,bounds:h,elevationDecoder:o,meshMaxError:s,signal:c}),g=l?i(l,{propName:"texture",layer:this,loaders:[],signal:c}).catch((t=>null)):Promise.resolve(null);return Promise.all([p,g])}renderSubLayers(t){const e=this.getSubLayerClass("mesh",St.Z),{color:i,wireframe:n,material:o}=this.props,{data:s}=t;if(!s)return null;const[r,a]=s;return new e(t,{data:Rt,mesh:r,texture:a,_instanced:!1,coordinateSystem:yt.Df.CARTESIAN,getPosition:t=>[0,0,0],getColor:i,wireframe:n,material:o})}onViewportLoad(t){if(!t)return;const{zRange:e}=this.state,i=t.map((t=>t.content)).filter(Boolean).map((t=>t[0].header.boundingBox.map((t=>t[2]))));if(0===i.length)return;const n=Math.min(...i.map((t=>t[0]))),o=Math.max(...i.map((t=>t[1])));(!e||n<e[0]||o>e[1])&&this.setState({zRange:[n,o]})}renderLayers(){const{color:t,material:e,elevationData:i,texture:n,wireframe:o,meshMaxError:s,elevationDecoder:r,tileSize:a,maxZoom:l,minZoom:c,extent:d,maxRequests:u,onTileLoad:h,onTileUnload:p,onTileError:g,maxCacheSize:f,maxCacheByteSize:m,refinementStrategy:v}=this.props;if(this.state.isTiled)return new st(this.getSubLayerProps({id:"tiles"}),{getTileData:this.getTiledTerrainData.bind(this),renderSubLayers:this.renderSubLayers.bind(this),updateTriggers:{getTileData:{elevationData:Ft(i),texture:Ft(n),meshMaxError:s,elevationDecoder:r}},onViewportLoad:this.onViewportLoad.bind(this),zRange:this.state.zRange||null,tileSize:a,maxZoom:l,minZoom:c,extent:d,maxRequests:u,onTileLoad:h,onTileUnload:p,onTileError:g,maxCacheSize:f,maxCacheByteSize:m,refinementStrategy:v});return new(this.getSubLayerClass("mesh",St.Z))(this.getSubLayerProps({id:"mesh"}),{data:Rt,mesh:this.state.terrain,texture:n,_instanced:!1,getPosition:t=>[0,0,0],getColor:t,material:e,wireframe:o})}}(0,n.Z)(kt,"defaultProps",Dt),(0,n.Z)(kt,"layerName","TerrainLayer");var jt=i(1567),Nt=i(2827),Ut=i(3693);const Vt={clipBounds:[0,0,1,1]},Bt="\nuniform vec4 clip_bounds;\n\nbool clip_isInBounds(vec2 position) {\n  return position.x >= clip_bounds[0] && position.y >= clip_bounds[1] && position.x < clip_bounds[2] && position.y < clip_bounds[3];\n}\n",Wt={name:"clip-vs",vs:Bt},Gt={"vs:#decl":"\nvarying float clip_isVisible;\n","vs:DECKGL_FILTER_GL_POSITION":"\n  clip_isVisible = float(clip_isInBounds(geometry.worldPosition.xy));\n","fs:#decl":"\nvarying float clip_isVisible;\n","fs:DECKGL_FILTER_COLOR":"\n  if (clip_isVisible < 0.5) discard;\n"},Ht={name:"clip-fs",fs:Bt},qt={"vs:#decl":"\nvarying vec2 clip_commonPosition;\n","vs:DECKGL_FILTER_GL_POSITION":"\n  clip_commonPosition = geometry.position.xy;\n","fs:#decl":"\nvarying vec2 clip_commonPosition;\n","fs:DECKGL_FILTER_COLOR":"\n  if (!clip_isInBounds(clip_commonPosition)) discard;\n"};class Xt extends Ut.Z{getShaders(){let t="instancePositions"in this.getAttributeManager().attributes;return"clipByInstance"in this.props&&(t=this.props.clipByInstance),this.state.clipByInstance=t,t?{modules:[Wt],inject:Gt}:{modules:[Ht],inject:qt}}draw({uniforms:t}){const{clipBounds:e=Vt.clipBounds}=this.props;if(this.state.clipByInstance)t.clip_bounds=e;else{const i=this.projectPosition([e[0],e[1],0]),n=this.projectPosition([e[2],e[3],0]);t.clip_bounds=[Math.min(i[0],n[0]),Math.min(i[1],n[1]),Math.max(i[0],n[0]),Math.max(i[1],n[1])]}}}(0,n.Z)(Xt,"defaultProps",Vt),(0,n.Z)(Xt,"extensionName","ClipExtension");const Kt={Point:Yt,MultiPoint:function(t,e,i){return Jt(t,e,i)},LineString:Qt,MultiLineString:function(t,e,i){return t.map((t=>Qt(t,e,i)))},Polygon:$t,MultiPolygon:function(t,e,i){return t.map((t=>$t(t,e,i)))}};function Yt([t,e],[i,n],o){const s=(0,J.t7)(i[0],n[0],t),r=(0,J.t7)(i[1],n[1],e);return o.unprojectFlat([s,r])}function Jt(t,e,i){return t.map((t=>Yt(t,e,i)))}function Qt(t,e,i){return Jt(t,e,i)}function $t(t,e,i){return t.map((t=>Jt(t,e,i)))}const te=["points","lines","polygons"];function ee(t,e,i,n){const o=t.featureIds.value;if(!o.length)return-1;let s=0,r=o[o.length-1]+1;if(n){const e=function(t,e){if(!t.__layers){const e={},{properties:i}=t;for(let t=0;t<i.length;t++){const{layerName:n}=i[t];n&&(e[n]?e[n][1]=t:e[n]=[t,t])}t.__layers=e}return t.__layers[e]}(t,n);if(!e)return-1;s=e[0],r=e[1]+1}let a=-1;if(e in t.numericProps){const n=t.numericProps[e].value.findIndex(((t,e)=>t===i&&o[e]>=s&&o[e]<r));return n>=0?t.globalFeatureIds.value[n]:-1}return e?a=ie(t.properties,(t=>t[e]===i),s,r):t.fields&&(a=ie(t.fields,(t=>t.id===i),s,r)),a>=0?function(t,e){if(!t.__ids){const e=[],i=t.featureIds.value,n=t.globalFeatureIds.value;for(let t=0;t<i.length;t++)e[i[t]]=n[t];t.__ids=e}return t.__ids[e]}(t,a):-1}function ie(t,e,i,n){for(let o=i;o<n;o++)if(e(t[o],o))return o;return-1}const ne={...M.Z.defaultProps,onDataLoad:{type:"function",value:null,optional:!0,compare:!1},uniqueIdProperty:"",highlightedFeatureId:null,loaders:[jt.D],binary:!0};class oe extends st{initializeState(){super.initializeState();const t=void 0===this.context.viewport.resolution&&this.props.binary;this.setState({binary:t,data:null,tileJSON:null})}get isLoaded(){return this.state&&this.state.data&&this.state.tileset&&super.isLoaded}updateState({props:t,oldProps:e,context:i,changeFlags:n}){var o;n.dataChanged&&this._updateTileData(),null!==(o=this.state)&&void 0!==o&&o.data&&(super.updateState({props:t,oldProps:e,context:i,changeFlags:n}),this._setWGS84PropertyForTiles());const{highlightColor:s}=t;s!==e.highlightColor&&Array.isArray(s)&&this.setState({highlightColor:s})}async _updateTileData(){let t=this.props.data,e=null;if("string"!=typeof t||/(?=.*{z})(?=.*{x})(?=.*({y}|{-y}))/.test(t))t.tilejson&&(e=t);else{const{onDataLoad:i,fetch:n}=this.props;this.setState({data:null,tileJSON:null});try{e=await n(t,{propName:"data",layer:this,loaders:[]})}catch(e){this.raiseError(e,"loading TileJSON"),t=null}i&&i(e,{propName:"data",layer:this})}e&&(t=e.tiles),this.setState({data:t,tileJSON:e})}_getTilesetOptions(){const t=super._getTilesetOptions(),e=this.state.tileJSON,{minZoom:i,maxZoom:n}=this.props;return e&&(Number.isFinite(e.minzoom)&&e.minzoom>i&&(t.minZoom=e.minzoom),Number.isFinite(e.maxzoom)&&(!Number.isFinite(n)||e.maxzoom<n)&&(t.maxZoom=e.maxzoom)),t}renderLayers(){var t;return null!==(t=this.state)&&void 0!==t&&t.data?super.renderLayers():null}getTileData(t){var e;const{data:i,binary:n}=this.state,{index:o,signal:s}=t,r=U(i,t);if(!r)return Promise.reject("Invalid URL");let a=this.getLoadOptions();const{fetch:l}=this.props;return a={...a,mimeType:"application/x-protobuf",mvt:{...null===(e=a)||void 0===e?void 0:e.mvt,coordinates:this.context.viewport.resolution?"wgs84":"local",tileIndex:o},gis:n?{format:"binary"}:{}},l(r,{propName:"data",layer:this,loadOptions:a,signal:s})}renderSubLayers(t){const{x:e,y:i,z:n}=t.tile.index,o=Math.pow(2,n),s=512/o,r=-s,a=512*e/o,l=512*(1-i/o),c=(new Y.Z).scale([s,r,1]);t.autoHighlight=!1,this.context.viewport.resolution||(t.modelMatrix=c,t.coordinateOrigin=[a,l,0],t.coordinateSystem=yt.Df.CARTESIAN,t.extensions=[...t.extensions||[],new Xt]);const d=super.renderSubLayers(t);return!this.state.binary||d instanceof M.Z||T.Z.warn("renderSubLayers() must return GeoJsonLayer when using binary:true")(),d}_updateAutoHighlight(t){const{uniqueIdProperty:e}=this.props,{hoveredFeatureId:i,hoveredFeatureLayerName:n}=this.state,o=t.object;let s,r;o&&(s=se(o,e),r=re(o));let{highlightColor:a}=this.props;"function"==typeof a&&(a=a(t)),i===s&&n===r||this.setState({highlightColor:a,hoveredFeatureId:s,hoveredFeatureLayerName:r})}getPickingInfo(t){const e=super.getPickingInfo(t),i=Boolean(this.context.viewport.resolution);if(this.state.binary&&-1!==e.index){const{data:i}=t.sourceLayer.props;e.object=(0,Nt.F_)(i,{globalFeatureId:e.index})}return e.object&&!i&&(e.object=le(e.object,e.tile.bbox,this.context.viewport)),e}getSubLayerPropsByTile(t){return{highlightedObjectIndex:this.getHighlightedObjectIndex(t),highlightColor:this.state.highlightColor}}getHighlightedObjectIndex(t){const{hoveredFeatureId:e,hoveredFeatureLayerName:i,binary:n}=this.state,{uniqueIdProperty:o,highlightedFeatureId:s}=this.props,r=t.content,a=ae(s);if(!(ae(e)||a))return-1;const l=a?s:e;return Array.isArray(r)?r.findIndex((t=>{const e=se(t,o)===l,n=a||re(t)===i;return e&&n})):r&&n?function(t,e,i,n){for(const o of te){const s=t[o]&&ee(t[o],e,i,n);if(s>=0)return s}return-1}(r,o,l,a?"":i):-1}_pickObjects(t){const{deck:e,viewport:i}=this.context,n=i.width,o=i.height,s=i.x,r=i.y,a=[this.id];return e.pickObjects({x:s,y:r,width:n,height:o,layerIds:a,maxObjects:t})}getRenderedFeatures(t=null){const e=this._pickObjects(t),i=new Set,n=[];for(const t of e){const e=se(t.object,this.props.uniqueIdProperty);void 0===e?n.push(t.object):i.has(e)||(i.add(e),n.push(t.object))}return n}_setWGS84PropertyForTiles(){const t="dataInWGS84";this.state.tileset.selectedTiles.forEach((e=>{e.hasOwnProperty(t)||Object.defineProperty(e,t,{get:()=>{if(!e.content)return null;if(this.state.binary&&Array.isArray(e.content)&&!e.content.length)return[];const{bbox:t}=e;if(void 0===e._contentWGS84&&(i=t,Number.isFinite(i.west)&&Number.isFinite(i.north)&&Number.isFinite(i.east)&&Number.isFinite(i.south))){const i=this.state.binary?(0,Nt.F_)(e.content):e.content;e._contentWGS84=i.map((e=>le(e,t,this.context.viewport)))}var i;return e._contentWGS84}})}))}}function se(t,e){return t.properties&&e?t.properties[e]:"id"in t?t.id:void 0}function re(t){var e;return(null===(e=t.properties)||void 0===e?void 0:e.layerName)||null}function ae(t){return null!=t&&""!==t}function le(t,e,i){const n={...t,geometry:{type:t.geometry.type}};return Object.defineProperty(n.geometry,"coordinates",{get:()=>{const n=function(t,e,i){const n=[i.projectFlat([e.west,e.north]),i.projectFlat([e.east,e.south])];return{...t,coordinates:Kt[t.type](t.coordinates,n,i)}}(t.geometry,e,i);return n.coordinates}}),n}(0,n.Z)(oe,"layerName","MVTLayer"),(0,n.Z)(oe,"defaultProps",ne);const ce="0123456789bcdefghjkmnpqrstuvwxyz",de={};for(let t=0;t<ce.length;t++)de[ce.charAt(t)]=t;function ue(t){const[e,i,n,o]=function(t){let e,i=!0,n=90,o=-90,s=180,r=-180,a=0;for(let l=0,c=t.length;l<c;l++){const c=t[l].toLowerCase();a=de[c];for(let t=4;t>=0;t--){const l=a>>t&1;i?(e=(s+r)/2,1===l?r=e:s=e):(e=(n+o)/2,1===l?o=e:n=e),i=!i}}return[o,r,n,s]}(t);return[o,n,o,e,i,e,i,n,o,n]}class he extends c{indexToBounds(){const{data:t,getGeohash:e}=this.props;return{data:t,_normalize:!1,positionFormat:"XY",getPolygon:(t,i)=>ue(e(t,i))}}}(0,n.Z)(he,"layerName","GeohashLayer"),(0,n.Z)(he,"defaultProps",{getGeohash:{type:"accessor",value:t=>t.geohash}})},4717:(t,e,i)=>{i.d(e,{Z:()=>h});var n=i(4572),o=i(4185),s=i(3844),r=i(3117),a=i(4088),l=i(9769),c=i(3982);const d=[0,0,0,255],u={getSourcePosition:{type:"accessor",value:t=>t.sourcePosition},getTargetPosition:{type:"accessor",value:t=>t.targetPosition},getSourceColor:{type:"accessor",value:d},getTargetColor:{type:"accessor",value:d},getWidth:{type:"accessor",value:1},getHeight:{type:"accessor",value:1},getTilt:{type:"accessor",value:0},greatCircle:!1,widthUnits:"pixels",widthScale:{type:"number",value:1,min:0},widthMinPixels:{type:"number",value:0,min:0},widthMaxPixels:{type:"number",value:Number.MAX_SAFE_INTEGER,min:0}};class h extends o.Z{constructor(...t){super(...t),(0,n.Z)(this,"state",void 0)}getShaders(){return super.getShaders({vs:"#define SHADER_NAME arc-layer-vertex-shader\n\nattribute vec3 positions;\nattribute vec4 instanceSourceColors;\nattribute vec4 instanceTargetColors;\nattribute vec3 instanceSourcePositions;\nattribute vec3 instanceSourcePositions64Low;\nattribute vec3 instanceTargetPositions;\nattribute vec3 instanceTargetPositions64Low;\nattribute vec3 instancePickingColors;\nattribute float instanceWidths;\nattribute float instanceHeights;\nattribute float instanceTilts;\n\nuniform bool greatCircle;\nuniform bool useShortestPath;\nuniform float numSegments;\nuniform float opacity;\nuniform float widthScale;\nuniform float widthMinPixels;\nuniform float widthMaxPixels;\nuniform int widthUnits;\n\nvarying vec4 vColor;\nvarying vec2 uv;\nvarying float isValid;\n\nfloat paraboloid(float distance, float sourceZ, float targetZ, float ratio) {\n  // d: distance on the xy plane\n  // r: ratio of the current point\n  // p: ratio of the peak of the arc\n  // h: height multiplier\n  // z = f(r) = sqrt(r * (p * 2 - r)) * d * h\n  // f(0) = 0\n  // f(1) = dz\n\n  float deltaZ = targetZ - sourceZ;\n  float dh = distance * instanceHeights;\n  if (dh == 0.0) {\n    return sourceZ + deltaZ * ratio;\n  }\n  float unitZ = deltaZ / dh;\n  float p2 = unitZ * unitZ + 1.0;\n\n  // sqrt does not deal with negative values, manually flip source and target if delta.z < 0\n  float dir = step(deltaZ, 0.0);\n  float z0 = mix(sourceZ, targetZ, dir);\n  float r = mix(ratio, 1.0 - ratio, dir);\n  return sqrt(r * (p2 - r)) * dh + z0;\n}\n\n// offset vector by strokeWidth pixels\n// offset_direction is -1 (left) or 1 (right)\nvec2 getExtrusionOffset(vec2 line_clipspace, float offset_direction, float width) {\n  // normalized direction of the line\n  vec2 dir_screenspace = normalize(line_clipspace * project_uViewportSize);\n  // rotate by 90 degrees\n  dir_screenspace = vec2(-dir_screenspace.y, dir_screenspace.x);\n\n  return dir_screenspace * offset_direction * width / 2.0;\n}\n\nfloat getSegmentRatio(float index) {\n  return smoothstep(0.0, 1.0, index / (numSegments - 1.0));\n}\n\nvec3 interpolateFlat(vec3 source, vec3 target, float segmentRatio) {\n  float distance = length(source.xy - target.xy);\n  float z = paraboloid(distance, source.z, target.z, segmentRatio);\n\n  float tiltAngle = radians(instanceTilts);\n  vec2 tiltDirection = normalize(target.xy - source.xy);\n  vec2 tilt = vec2(-tiltDirection.y, tiltDirection.x) * z * sin(tiltAngle);\n\n  return vec3(\n    mix(source.xy, target.xy, segmentRatio) + tilt,\n    z * cos(tiltAngle)\n  );\n}\n\n/* Great circle interpolation\n * http://www.movable-type.co.uk/scripts/latlong.html\n */\nfloat getAngularDist (vec2 source, vec2 target) {\n  vec2 sourceRadians = radians(source);\n  vec2 targetRadians = radians(target);\n  vec2 sin_half_delta = sin((sourceRadians - targetRadians) / 2.0);\n  vec2 shd_sq = sin_half_delta * sin_half_delta;\n\n  float a = shd_sq.y + cos(sourceRadians.y) * cos(targetRadians.y) * shd_sq.x;\n  return 2.0 * asin(sqrt(a));\n}\n\nvec3 interpolateGreatCircle(vec3 source, vec3 target, vec3 source3D, vec3 target3D, float angularDist, float t) {\n  vec2 lngLat;\n\n  // if the angularDist is PI, linear interpolation is applied. otherwise, use spherical interpolation\n  if(abs(angularDist - PI) < 0.001) {\n    lngLat = (1.0 - t) * source.xy + t * target.xy;\n  } else {\n    float a = sin((1.0 - t) * angularDist);\n    float b = sin(t * angularDist);\n    vec3 p = source3D.yxz * a + target3D.yxz * b;\n    lngLat = degrees(vec2(atan(p.y, -p.x), atan(p.z, length(p.xy))));\n  }\n\n  float z = paraboloid(angularDist * EARTH_RADIUS, source.z, target.z, t);\n\n  return vec3(lngLat, z);\n}\n\n/* END GREAT CIRCLE */\n\nvoid main(void) {\n  geometry.worldPosition = instanceSourcePositions;\n  geometry.worldPositionAlt = instanceTargetPositions;\n\n  float segmentIndex = positions.x;\n  float segmentRatio = getSegmentRatio(segmentIndex);\n  float prevSegmentRatio = getSegmentRatio(max(0.0, segmentIndex - 1.0));\n  float nextSegmentRatio = getSegmentRatio(min(numSegments - 1.0, segmentIndex + 1.0));\n\n  // if it's the first point, use next - current as direction\n  // otherwise use current - prev\n  float indexDir = mix(-1.0, 1.0, step(segmentIndex, 0.0));\n  isValid = 1.0;\n\n  uv = vec2(segmentRatio, positions.y);\n  geometry.uv = uv;\n  geometry.pickingColor = instancePickingColors;\n\n  vec4 curr;\n  vec4 next;\n  vec3 source;\n  vec3 target;\n\n  if ((greatCircle || project_uProjectionMode == PROJECTION_MODE_GLOBE) && project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n    source = project_globe_(vec3(instanceSourcePositions.xy, 0.0));\n    target = project_globe_(vec3(instanceTargetPositions.xy, 0.0));\n    float angularDist = getAngularDist(instanceSourcePositions.xy, instanceTargetPositions.xy);\n\n    vec3 prevPos = interpolateGreatCircle(instanceSourcePositions, instanceTargetPositions, source, target, angularDist, prevSegmentRatio);\n    vec3 currPos = interpolateGreatCircle(instanceSourcePositions, instanceTargetPositions, source, target, angularDist, segmentRatio);\n    vec3 nextPos = interpolateGreatCircle(instanceSourcePositions, instanceTargetPositions, source, target, angularDist, nextSegmentRatio);\n\n    if (abs(currPos.x - prevPos.x) > 180.0) {\n      indexDir = -1.0;\n      isValid = 0.0;\n    } else if (abs(currPos.x - nextPos.x) > 180.0) {\n      indexDir = 1.0;\n      isValid = 0.0;\n    }\n    nextPos = indexDir < 0.0 ? prevPos : nextPos;\n    nextSegmentRatio = indexDir < 0.0 ? prevSegmentRatio : nextSegmentRatio;\n\n    if (isValid == 0.0) {\n      // split at the 180th meridian\n      nextPos.x += nextPos.x > 0.0 ? -360.0 : 360.0;\n      float t = ((currPos.x > 0.0 ? 180.0 : -180.0) - currPos.x) / (nextPos.x - currPos.x);\n      currPos = mix(currPos, nextPos, t);\n      segmentRatio = mix(segmentRatio, nextSegmentRatio, t);\n    }\n\n    vec3 currPos64Low = mix(instanceSourcePositions64Low, instanceTargetPositions64Low, segmentRatio);\n    vec3 nextPos64Low = mix(instanceSourcePositions64Low, instanceTargetPositions64Low, nextSegmentRatio);\n  \n    curr = project_position_to_clipspace(currPos, currPos64Low, vec3(0.0), geometry.position);\n    next = project_position_to_clipspace(nextPos, nextPos64Low, vec3(0.0));\n  \n  } else {\n    vec3 source_world = instanceSourcePositions;\n    vec3 target_world = instanceTargetPositions;\n    if (useShortestPath) {\n      source_world.x = mod(source_world.x + 180., 360.0) - 180.;\n      target_world.x = mod(target_world.x + 180., 360.0) - 180.;\n\n      float deltaLng = target_world.x - source_world.x;\n      if (deltaLng > 180.) target_world.x -= 360.;\n      if (deltaLng < -180.) source_world.x -= 360.;\n    }\n    source = project_position(source_world, instanceSourcePositions64Low);\n    target = project_position(target_world, instanceTargetPositions64Low);\n\n    // common x at longitude=-180\n    float antiMeridianX = 0.0;\n\n    if (useShortestPath) {\n      if (project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET) {\n        antiMeridianX = -(project_uCoordinateOrigin.x + 180.) / 360. * TILE_SIZE;\n      }\n      float thresholdRatio = (antiMeridianX - source.x) / (target.x - source.x);\n\n      if (prevSegmentRatio <= thresholdRatio && nextSegmentRatio > thresholdRatio) {\n        isValid = 0.0;\n        indexDir = sign(segmentRatio - thresholdRatio);\n        segmentRatio = thresholdRatio;\n      }\n    }\n\n    nextSegmentRatio = indexDir < 0.0 ? prevSegmentRatio : nextSegmentRatio;\n    vec3 currPos = interpolateFlat(source, target, segmentRatio);\n    vec3 nextPos = interpolateFlat(source, target, nextSegmentRatio);\n\n    if (useShortestPath) {\n      if (nextPos.x < antiMeridianX) {\n        currPos.x += TILE_SIZE;\n        nextPos.x += TILE_SIZE;\n      }\n    }\n\n    curr = project_common_position_to_clipspace(vec4(currPos, 1.0));\n    next = project_common_position_to_clipspace(vec4(nextPos, 1.0));\n    geometry.position = vec4(currPos, 1.0);\n  }\n\n  // Multiply out width and clamp to limits\n  // mercator pixels are interpreted as screen pixels\n  float widthPixels = clamp(\n    project_size_to_pixel(instanceWidths * widthScale, widthUnits),\n    widthMinPixels, widthMaxPixels\n  );\n\n  // extrude\n  vec3 offset = vec3(\n    getExtrusionOffset((next.xy - curr.xy) * indexDir, positions.y, widthPixels),\n    0.0);\n  DECKGL_FILTER_SIZE(offset, geometry);\n  gl_Position = curr + vec4(project_pixel_size_to_clipspace(offset.xy), 0.0, 0.0);\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  vec4 color = mix(instanceSourceColors, instanceTargetColors, segmentRatio);\n  vColor = vec4(color.rgb, color.a * opacity);\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#define SHADER_NAME arc-layer-fragment-shader\n\nprecision highp float;\n\nvarying vec4 vColor;\nvarying vec2 uv;\nvarying float isValid;\n\nvoid main(void) {\n  if (isValid == 0.0) {\n    discard;\n  }\n\n  gl_FragColor = vColor;\n  geometry.uv = uv;\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",modules:[s.Z,r.Z]})}get wrapLongitude(){return!1}initializeState(){this.getAttributeManager().addInstanced({instanceSourcePositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getSourcePosition"},instanceTargetPositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getTargetPosition"},instanceSourceColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,transition:!0,accessor:"getSourceColor",defaultValue:d},instanceTargetColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,transition:!0,accessor:"getTargetColor",defaultValue:d},instanceWidths:{size:1,transition:!0,accessor:"getWidth",defaultValue:1},instanceHeights:{size:1,transition:!0,accessor:"getHeight",defaultValue:1},instanceTilts:{size:1,transition:!0,accessor:"getTilt",defaultValue:0}})}updateState(t){if(super.updateState(t),t.changeFlags.extensionsChanged){var e;const{gl:t}=this.context;null===(e=this.state.model)||void 0===e||e.delete(),this.state.model=this._getModel(t),this.getAttributeManager().invalidateAll()}}draw({uniforms:t}){const{widthUnits:e,widthScale:i,widthMinPixels:n,widthMaxPixels:o,greatCircle:s,wrapLongitude:r}=this.props;this.state.model.setUniforms(t).setUniforms({greatCircle:s,widthUnits:a.iI[e],widthScale:i,widthMinPixels:n,widthMaxPixels:o,useShortestPath:r}).draw()}_getModel(t){let e=[];for(let t=0;t<50;t++)e=e.concat([t,1,0,t,-1,0]);const i=new l.Z(t,{...this.getShaders(),id:this.props.id,geometry:new c.Z({drawMode:5,attributes:{positions:new Float32Array(e)}}),isInstanced:!0});return i.setUniforms({numSegments:50}),i}}(0,n.Z)(h,"layerName","ArcLayer"),(0,n.Z)(h,"defaultProps",u)},5395:(t,e,i)=>{i.d(e,{Z:()=>y});var n=i(4572),o=i(4088),s=i(4185),r=i(3844),a=i(3117),l=i(9769),c=i(3982),d=i(7013),u=i(4034);const h=new Uint16Array([0,2,1,0,3,2]),p=new Float32Array([0,1,0,0,1,0,1,1]);function g(t,e){if(!e)return function(t){const e=new Float64Array(12);for(let i=0;i<t.length;i++)e[3*i+0]=t[i][0],e[3*i+1]=t[i][1],e[3*i+2]=t[i][2]||0;return{vertexCount:6,positions:e,indices:h,texCoords:p}}(t);const i=Math.max(Math.abs(t[0][0]-t[3][0]),Math.abs(t[1][0]-t[2][0])),n=Math.max(Math.abs(t[1][1]-t[0][1]),Math.abs(t[2][1]-t[3][1])),o=Math.ceil(i/e)+1,s=Math.ceil(n/e)+1,r=(o-1)*(s-1)*6,a=new Uint32Array(r),l=new Float32Array(o*s*2),c=new Float64Array(o*s*3);let d=0,u=0;for(let e=0;e<o;e++){const i=e/(o-1);for(let n=0;n<s;n++){const o=n/(s-1),r=f(t,i,o);c[3*d+0]=r[0],c[3*d+1]=r[1],c[3*d+2]=r[2]||0,l[2*d+0]=i,l[2*d+1]=1-o,e>0&&n>0&&(a[u++]=d-s,a[u++]=d-s-1,a[u++]=d-1,a[u++]=d-s,a[u++]=d-1,a[u++]=d),d++}}return{vertexCount:r,positions:c,indices:a,texCoords:l}}function f(t,e,i){return(0,u.t7)((0,u.t7)(t[0],t[1],i),(0,u.t7)(t[3],t[2],i),e)}const m="\n#define SHADER_NAME bitmap-layer-fragment-shader\n\n#ifdef GL_ES\nprecision highp float;\n#endif\n\nuniform sampler2D bitmapTexture;\n\nvarying vec2 vTexCoord;\nvarying vec2 vTexPos;\n\nuniform float desaturate;\nuniform vec4 transparentColor;\nuniform vec3 tintColor;\nuniform float opacity;\n\nuniform float coordinateConversion;\nuniform vec4 bounds;\n\n/* projection utils */\nconst float TILE_SIZE = 512.0;\nconst float PI = 3.1415926536;\nconst float WORLD_SCALE = TILE_SIZE / PI / 2.0;\n\n// from degrees to Web Mercator\nvec2 lnglat_to_mercator(vec2 lnglat) {\n  float x = lnglat.x;\n  float y = clamp(lnglat.y, -89.9, 89.9);\n  return vec2(\n    radians(x) + PI,\n    PI + log(tan(PI * 0.25 + radians(y) * 0.5))\n  ) * WORLD_SCALE;\n}\n\n// from Web Mercator to degrees\nvec2 mercator_to_lnglat(vec2 xy) {\n  xy /= WORLD_SCALE;\n  return degrees(vec2(\n    xy.x - PI,\n    atan(exp(xy.y - PI)) * 2.0 - PI * 0.5\n  ));\n}\n/* End projection utils */\n\n// apply desaturation\nvec3 color_desaturate(vec3 color) {\n  float luminance = (color.r + color.g + color.b) * 0.333333333;\n  return mix(color, vec3(luminance), desaturate);\n}\n\n// apply tint\nvec3 color_tint(vec3 color) {\n  return color * tintColor;\n}\n\n// blend with background color\nvec4 apply_opacity(vec3 color, float alpha) {\n  return mix(transparentColor, vec4(color, 1.0), alpha);\n}\n\nvec2 getUV(vec2 pos) {\n  return vec2(\n    (pos.x - bounds[0]) / (bounds[2] - bounds[0]),\n    (pos.y - bounds[3]) / (bounds[1] - bounds[3])\n  );\n}\n\n".concat("\nvec3 packUVsIntoRGB(vec2 uv) {\n  // Extract the top 8 bits. We want values to be truncated down so we can add a fraction\n  vec2 uv8bit = floor(uv * 256.);\n\n  // Calculate the normalized remainders of u and v parts that do not fit into 8 bits\n  // Scale and clamp to 0-1 range\n  vec2 uvFraction = fract(uv * 256.);\n  vec2 uvFraction4bit = floor(uvFraction * 16.);\n\n  // Remainder can be encoded in blue channel, encode as 4 bits for pixel coordinates\n  float fractions = uvFraction4bit.x + uvFraction4bit.y * 16.;\n\n  return vec3(uv8bit, fractions) / 255.;\n}\n","\n\nvoid main(void) {\n  vec2 uv = vTexCoord;\n  if (coordinateConversion < -0.5) {\n    vec2 lnglat = mercator_to_lnglat(vTexPos);\n    uv = getUV(lnglat);\n  } else if (coordinateConversion > 0.5) {\n    vec2 commonPos = lnglat_to_mercator(vTexPos);\n    uv = getUV(commonPos);\n  }\n  vec4 bitmapColor = texture2D(bitmapTexture, uv);\n\n  gl_FragColor = apply_opacity(color_tint(color_desaturate(bitmapColor.rgb)), bitmapColor.a * opacity);\n\n  geometry.uv = uv;\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n\n  if (picking_uActive) {\n    // Since instance information is not used, we can use picking color for pixel index\n    gl_FragColor.rgb = packUVsIntoRGB(uv);\n  }\n}\n"),v={image:{type:"image",value:null,async:!0},bounds:{type:"array",value:[1,0,0,1],compare:!0},_imageCoordinateSystem:o.Df.DEFAULT,desaturate:{type:"number",min:0,max:1,value:0},transparentColor:{type:"color",value:[0,0,0,0]},tintColor:{type:"color",value:[255,255,255]}};class y extends s.Z{constructor(...t){super(...t),(0,n.Z)(this,"state",void 0)}getShaders(){return super.getShaders({vs:"\n#define SHADER_NAME bitmap-layer-vertex-shader\n\nattribute vec2 texCoords;\nattribute vec3 positions;\nattribute vec3 positions64Low;\n\nvarying vec2 vTexCoord;\nvarying vec2 vTexPos;\n\nuniform float coordinateConversion;\n\nconst vec3 pickingColor = vec3(1.0, 0.0, 0.0);\n\nvoid main(void) {\n  geometry.worldPosition = positions;\n  geometry.uv = texCoords;\n  geometry.pickingColor = pickingColor;\n\n  gl_Position = project_position_to_clipspace(positions, positions64Low, vec3(0.0), geometry.position);\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  vTexCoord = texCoords;\n\n  if (coordinateConversion < -0.5) {\n    vTexPos = geometry.position.xy + project_uCommonOrigin.xy;\n  } else if (coordinateConversion > 0.5) {\n    vTexPos = geometry.worldPosition.xy;\n  }\n\n  vec4 color = vec4(0.0);\n  DECKGL_FILTER_COLOR(color, geometry);\n}\n",fs:m,modules:[r.Z,a.Z]})}initializeState(){const t=this.getAttributeManager();t.remove(["instancePickingColors"]);const e=!0;t.add({indices:{size:1,isIndexed:!0,update:t=>t.value=this.state.mesh.indices,noAlloc:e},positions:{size:3,type:5130,fp64:this.use64bitPositions(),update:t=>t.value=this.state.mesh.positions,noAlloc:e},texCoords:{size:2,update:t=>t.value=this.state.mesh.texCoords,noAlloc:e}})}updateState({props:t,oldProps:e,changeFlags:i}){const n=this.getAttributeManager();if(i.extensionsChanged){var o;const{gl:t}=this.context;null===(o=this.state.model)||void 0===o||o.delete(),this.state.model=this._getModel(t),n.invalidateAll()}if(t.bounds!==e.bounds){const t=this.state.mesh,e=this._createMesh();this.state.model.setVertexCount(e.vertexCount);for(const i in e)t&&t[i]!==e[i]&&n.invalidate(i);this.setState({mesh:e,...this._getCoordinateUniforms()})}else t._imageCoordinateSystem!==e._imageCoordinateSystem&&this.setState(this._getCoordinateUniforms())}getPickingInfo(t){const{image:e}=this.props,i=t.info;if(!i.color||!e)return i.bitmap=null,i;const{width:n,height:o}=e;i.index=0;const s=function(t){const[e,i,n]=t;return[(e+(15&n)/16)/256,(i+(240&n)/256)/256]}(i.color),r=[Math.floor(s[0]*n),Math.floor(s[1]*o)];return i.bitmap={size:{width:n,height:o},uv:s,pixel:r},i}disablePickingIndex(){this.setState({disablePicking:!0})}restorePickingColors(){this.setState({disablePicking:!1})}_updateAutoHighlight(t){super._updateAutoHighlight({...t,color:this.encodePickingColor(0)})}_createMesh(){const{bounds:t}=this.props;let e=t;return _(t)&&(e=[[t[0],t[1]],[t[0],t[3]],[t[2],t[3]],[t[2],t[1]]]),g(e,this.context.viewport.resolution)}_getModel(t){return t?new l.Z(t,{...this.getShaders(),id:this.props.id,geometry:new c.Z({drawMode:4,vertexCount:6}),isInstanced:!1}):null}draw(t){const{uniforms:e,moduleParameters:i}=t,{model:n,coordinateConversion:o,bounds:s,disablePicking:r}=this.state,{image:a,desaturate:l,transparentColor:c,tintColor:d}=this.props;i.pickingActive&&r||a&&n&&n.setUniforms(e).setUniforms({bitmapTexture:a,desaturate:l,transparentColor:c.map((t=>t/255)),tintColor:d.slice(0,3).map((t=>t/255)),coordinateConversion:o,bounds:s}).draw()}_getCoordinateUniforms(){const{LNGLAT:t,CARTESIAN:e,DEFAULT:i}=o.Df;let{_imageCoordinateSystem:n}=this.props;if(n!==i){const{bounds:i}=this.props;if(!_(i))throw new Error("_imageCoordinateSystem only supports rectangular bounds");const o=this.context.viewport.resolution?t:e;if(n=n===t?t:e,n===t&&o===e)return{coordinateConversion:-1,bounds:i};if(n===e&&o===t){const t=(0,d.w5)([i[0],i[1]]),e=(0,d.w5)([i[2],i[3]]);return{coordinateConversion:1,bounds:[t[0],t[1],e[0],e[1]]}}}return{coordinateConversion:0,bounds:[0,0,0,0]}}}function _(t){return Number.isFinite(t[0])}(0,n.Z)(y,"layerName","BitmapLayer"),(0,n.Z)(y,"defaultProps",v)},5103:(t,e,i)=>{i.d(e,{Z:()=>x});var n=i(4572),o=i(4185),s=i(3844),r=i(7287),a=i(3117),l=i(4088),c=i(9450),d=i(4211),u=i(6948),h=i(9769),p=i(744),g=i(3982),f=i(4538),m=i(5215);class v extends g.Z{constructor(t){const{id:e=(0,f.hQ)("column-geometry")}=t,{indices:i,attributes:n}=function(t){const{radius:e,height:i=1,nradial:n=10}=t;let{vertices:o}=t;o&&(p.Z.assert(o.length>=n),o=o.flatMap((t=>[t[0],t[1]])),(0,m.Ny)(o,m.wG.COUNTER_CLOCKWISE));const s=i>0,r=n+1,a=s?3*r+1:n,l=2*Math.PI/n,c=new Uint16Array(s?3*n*2:0),d=new Float32Array(3*a),u=new Float32Array(3*a);let h=0;if(s){for(let t=0;t<r;t++){const s=t*l,r=t%n,a=Math.sin(s),c=Math.cos(s);for(let t=0;t<2;t++)d[h+0]=o?o[2*r]:c*e,d[h+1]=o?o[2*r+1]:a*e,d[h+2]=(.5-t)*i,u[h+0]=o?o[2*r]:c,u[h+1]=o?o[2*r+1]:a,h+=3}d[h+0]=d[h-3],d[h+1]=d[h-2],d[h+2]=d[h-1],h+=3}for(let t=s?0:1;t<r;t++){const s=Math.floor(t/2)*Math.sign(.5-t%2),r=s*l,a=(s+n)%n,c=Math.sin(r),p=Math.cos(r);d[h+0]=o?o[2*a]:p*e,d[h+1]=o?o[2*a+1]:c*e,d[h+2]=i/2,u[h+2]=1,h+=3}if(s){let t=0;for(let e=0;e<n;e++)c[t++]=2*e+0,c[t++]=2*e+2,c[t++]=2*e+0,c[t++]=2*e+1,c[t++]=2*e+1,c[t++]=2*e+3}return{indices:c,attributes:{POSITION:{size:3,value:d},NORMAL:{size:3,value:u}}}}(t);super({...t,id:e,indices:i,attributes:n})}}const y=[0,0,0,255],_={diskResolution:{type:"number",min:4,value:20},vertices:null,radius:{type:"number",min:0,value:1e3},angle:{type:"number",value:0},offset:{type:"array",value:[0,0]},coverage:{type:"number",min:0,max:1,value:1},elevationScale:{type:"number",min:0,value:1},radiusUnits:"meters",lineWidthUnits:"meters",lineWidthScale:1,lineWidthMinPixels:0,lineWidthMaxPixels:Number.MAX_SAFE_INTEGER,extruded:!0,wireframe:!1,filled:!0,stroked:!1,getPosition:{type:"accessor",value:t=>t.position},getFillColor:{type:"accessor",value:y},getLineColor:{type:"accessor",value:y},getLineWidth:{type:"accessor",value:1},getElevation:{type:"accessor",value:1e3},material:!0,getColor:{deprecatedFor:["getFillColor","getLineColor"]}};class x extends o.Z{getShaders(){const{gl:t}=this.context,e=!(0,c.D0)(t),i={},n=this.props.flatShading&&(0,d.U6)(t,u.h.GLSL_DERIVATIVES);return n&&(i.FLAT_SHADING=1),super.getShaders({vs:"#version 300 es\n\n#define SHADER_NAME column-layer-vertex-shader\n\nin vec3 positions;\nin vec3 normals;\n\nin vec3 instancePositions;\nin float instanceElevations;\nin vec3 instancePositions64Low;\nin vec4 instanceFillColors;\nin vec4 instanceLineColors;\nin float instanceStrokeWidths;\n\nin vec3 instancePickingColors;\n\n// Custom uniforms\nuniform float opacity;\nuniform float radius;\nuniform float angle;\nuniform vec2 offset;\nuniform bool extruded;\nuniform bool stroked;\nuniform bool isStroke;\nuniform float coverage;\nuniform float elevationScale;\nuniform float edgeDistance;\nuniform float widthScale;\nuniform float widthMinPixels;\nuniform float widthMaxPixels;\nuniform int radiusUnits;\nuniform int widthUnits;\n\n// Result\nout vec4 vColor;\n#ifdef FLAT_SHADING\nout vec4 position_commonspace;\n#endif\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n\n  vec4 color = isStroke ? instanceLineColors : instanceFillColors;\n  // rotate primitive position and normal\n  mat2 rotationMatrix = mat2(cos(angle), sin(angle), -sin(angle), cos(angle));\n\n  // calculate elevation, if 3d not enabled set to 0\n  // cylindar gemoetry height are between -1.0 to 1.0, transform it to between 0, 1\n  float elevation = 0.0;\n  // calculate stroke offset\n  float strokeOffsetRatio = 1.0;\n\n  if (extruded) {\n    elevation = instanceElevations * (positions.z + 1.0) / 2.0 * elevationScale;\n  } else if (stroked) {\n    float widthPixels = clamp(\n      project_size_to_pixel(instanceStrokeWidths * widthScale, widthUnits),\n      widthMinPixels, widthMaxPixels) / 2.0;\n    float halfOffset = project_pixel_size(widthPixels) / project_size(edgeDistance * coverage * radius);\n    if (isStroke) {\n      strokeOffsetRatio -= sign(positions.z) * halfOffset;\n    } else {\n      strokeOffsetRatio -= halfOffset;\n    }\n  }\n\n  // if alpha == 0.0 or z < 0.0, do not render element\n  float shouldRender = float(color.a > 0.0 && instanceElevations >= 0.0);\n  float dotRadius = radius * coverage * shouldRender;\n\n  geometry.pickingColor = instancePickingColors;\n\n  // project center of column\n  vec3 centroidPosition = vec3(instancePositions.xy, instancePositions.z + elevation);\n  vec3 centroidPosition64Low = instancePositions64Low;\n  vec2 offset = (rotationMatrix * positions.xy * strokeOffsetRatio + offset) * dotRadius;\n  if (radiusUnits == UNIT_METERS) {\n    offset = project_size(offset);\n  }\n  vec3 pos = vec3(offset, 0.);\n  DECKGL_FILTER_SIZE(pos, geometry);\n\n  gl_Position = project_position_to_clipspace(centroidPosition, centroidPosition64Low, pos, geometry.position);\n  geometry.normal = project_normal(vec3(rotationMatrix * normals.xy, normals.z));\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  // Light calculations\n  if (extruded && !isStroke) {\n#ifdef FLAT_SHADING\n    position_commonspace = geometry.position;\n    vColor = vec4(color.rgb, color.a * opacity);\n#else\n    vec3 lightColor = lighting_getLightColor(color.rgb, project_uCameraPosition, geometry.position.xyz, geometry.normal);\n    vColor = vec4(lightColor, color.a * opacity);\n#endif\n  } else {\n    vColor = vec4(color.rgb, color.a * opacity);\n  }\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#version 300 es\n#define SHADER_NAME column-layer-fragment-shader\n\nprecision highp float;\n\nuniform vec3 project_uCameraPosition;\nuniform bool extruded;\nuniform bool isStroke;\n\nout vec4 fragColor;\n\nin vec4 vColor;\n#ifdef FLAT_SHADING\nin vec4 position_commonspace;\n#endif\n\nvoid main(void) {\n  fragColor = vColor;\n#ifdef FLAT_SHADING\n  if (extruded && !isStroke && !picking_uActive) {\n    vec3 normal = normalize(cross(dFdx(position_commonspace.xyz), dFdy(position_commonspace.xyz)));\n    fragColor.rgb = lighting_getLightColor(vColor.rgb, project_uCameraPosition, position_commonspace.xyz, normal);\n  }\n#endif\n  DECKGL_FILTER_COLOR(fragColor, geometry);\n}\n",defines:i,transpileToGLSL100:e,modules:[s.Z,n?r.s:r.N,a.Z]})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceElevations:{size:1,transition:!0,accessor:"getElevation"},instanceFillColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,transition:!0,accessor:"getFillColor",defaultValue:y},instanceLineColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,transition:!0,accessor:"getLineColor",defaultValue:y},instanceStrokeWidths:{size:1,accessor:"getLineWidth",transition:!0}})}updateState(t){super.updateState(t);const{props:e,oldProps:i,changeFlags:n}=t,o=n.extensionsChanged||e.flatShading!==i.flatShading;if(o){var s;const{gl:t}=this.context;null===(s=this.state.model)||void 0===s||s.delete(),this.state.model=this._getModel(t),this.getAttributeManager().invalidateAll()}(o||e.diskResolution!==i.diskResolution||e.vertices!==i.vertices||(e.extruded||e.stroked)!==(i.extruded||i.stroked))&&this._updateGeometry(e)}getGeometry(t,e,i){const n=new v({radius:1,height:i?2:0,vertices:e,nradial:t});let o=0;if(e)for(let i=0;i<t;i++){const n=e[i];o+=Math.sqrt(n[0]*n[0]+n[1]*n[1])/t}else o=1;return this.setState({edgeDistance:Math.cos(Math.PI/t)*o}),n}_getModel(t){return new h.Z(t,{...this.getShaders(),id:this.props.id,isInstanced:!0})}_updateGeometry({diskResolution:t,vertices:e,extruded:i,stroked:n}){const o=this.getGeometry(t,e,i||n);this.setState({fillVertexCount:o.attributes.POSITION.value.length/3,wireframeVertexCount:o.indices.value.length}),this.state.model.setProps({geometry:o})}draw({uniforms:t}){const{lineWidthUnits:e,lineWidthScale:i,lineWidthMinPixels:n,lineWidthMaxPixels:o,radiusUnits:s,elevationScale:r,extruded:a,filled:c,stroked:d,wireframe:u,offset:h,coverage:p,radius:g,angle:f}=this.props,{model:m,fillVertexCount:v,wireframeVertexCount:y,edgeDistance:_}=this.state;m.setUniforms(t).setUniforms({radius:g,angle:f/180*Math.PI,offset:h,extruded:a,stroked:d,coverage:p,elevationScale:r,edgeDistance:_,radiusUnits:l.iI[s],widthUnits:l.iI[e],widthScale:i,widthMinPixels:n,widthMaxPixels:o}),a&&u&&(m.setProps({isIndexed:!0}),m.setVertexCount(y).setDrawMode(1).setUniforms({isStroke:!0}).draw()),c&&(m.setProps({isIndexed:!1}),m.setVertexCount(v).setDrawMode(5).setUniforms({isStroke:!1}).draw()),!a&&d&&(m.setProps({isIndexed:!1}),m.setVertexCount(2*v/3).setDrawMode(5).setUniforms({isStroke:!0}).draw())}}(0,n.Z)(x,"layerName","ColumnLayer"),(0,n.Z)(x,"defaultProps",_)},3274:(t,e,i)=>{i.d(e,{Z:()=>a});var n=i(4572),o=i(1167),s=i(4088),r=i(5103);class a extends r.Z{getGeometry(t){return new o.Z}draw({uniforms:t}){const{elevationScale:e,extruded:i,offset:n,coverage:o,cellSize:r,angle:a,radiusUnits:l}=this.props;this.state.model.setUniforms(t).setUniforms({radius:r/2,radiusUnits:s.iI[l],angle:a,offset:n,extruded:i,coverage:o,elevationScale:e,edgeDistance:1,isWireframe:!1}).draw()}}(0,n.Z)(a,"layerName","GridCellLayer"),(0,n.Z)(a,"defaultProps",{cellSize:{type:"number",min:0,value:1e3},offset:{type:"array",value:[1,1]}})},9026:(t,e,i)=>{i.d(e,{Z:()=>S});var n=i(4572),o=i(8918),s=i(8452);var r=i(6867),a=i(8569),l=i(5555),c=i(2112),d=i(1435);const u={circle:{type:a.Z,props:{filled:"filled",stroked:"stroked",lineWidthMaxPixels:"lineWidthMaxPixels",lineWidthMinPixels:"lineWidthMinPixels",lineWidthScale:"lineWidthScale",lineWidthUnits:"lineWidthUnits",pointRadiusMaxPixels:"radiusMaxPixels",pointRadiusMinPixels:"radiusMinPixels",pointRadiusScale:"radiusScale",pointRadiusUnits:"radiusUnits",pointAntialiasing:"antialiasing",pointBillboard:"billboard",getFillColor:"getFillColor",getLineColor:"getLineColor",getLineWidth:"getLineWidth",getPointRadius:"getRadius"}},icon:{type:r.Z,props:{iconAtlas:"iconAtlas",iconMapping:"iconMapping",iconSizeMaxPixels:"sizeMaxPixels",iconSizeMinPixels:"sizeMinPixels",iconSizeScale:"sizeScale",iconSizeUnits:"sizeUnits",iconAlphaCutoff:"alphaCutoff",iconBillboard:"billboard",getIcon:"getIcon",getIconAngle:"getAngle",getIconColor:"getColor",getIconPixelOffset:"getPixelOffset",getIconSize:"getSize"}},text:{type:l.Z,props:{textSizeMaxPixels:"sizeMaxPixels",textSizeMinPixels:"sizeMinPixels",textSizeScale:"sizeScale",textSizeUnits:"sizeUnits",textBackground:"background",textBackgroundPadding:"backgroundPadding",textFontFamily:"fontFamily",textFontWeight:"fontWeight",textLineHeight:"lineHeight",textMaxWidth:"maxWidth",textOutlineColor:"outlineColor",textOutlineWidth:"outlineWidth",textWordBreak:"wordBreak",textCharacterSet:"characterSet",textBillboard:"billboard",textFontSettings:"fontSettings",getText:"getText",getTextAngle:"getAngle",getTextColor:"getColor",getTextPixelOffset:"getPixelOffset",getTextSize:"getSize",getTextAnchor:"getTextAnchor",getTextAlignmentBaseline:"getAlignmentBaseline",getTextBackgroundColor:"getBackgroundColor",getTextBorderColor:"getBorderColor",getTextBorderWidth:"getBorderWidth"}}},h={type:c.Z,props:{lineWidthUnits:"widthUnits",lineWidthScale:"widthScale",lineWidthMinPixels:"widthMinPixels",lineWidthMaxPixels:"widthMaxPixels",lineJointRounded:"jointRounded",lineCapRounded:"capRounded",lineMiterLimit:"miterLimit",lineBillboard:"billboard",getLineColor:"getColor",getLineWidth:"getWidth"}},p={type:d.Z,props:{extruded:"extruded",filled:"filled",wireframe:"wireframe",elevationScale:"elevationScale",material:"material",getElevation:"getElevation",getFillColor:"getFillColor",getLineColor:"getLineColor"}};function g({type:t,props:e}){const i={};for(const n in e)i[n]=t.defaultProps[e[n]];return i}function f(t,e){const{transitions:i,updateTriggers:n}=t.props,o={updateTriggers:{},transitions:i&&{getPosition:i.geometry}};for(const s in e){const r=e[s];let a=t.props[s];s.startsWith("get")&&(a=t.getSubLayerAccessor(a),o.updateTriggers[r]=n[s],i&&(o.transitions[r]=i[s])),o[r]=a}return o}var m=i(744);function v(t,e,i={}){const n={pointFeatures:[],lineFeatures:[],polygonFeatures:[],polygonOutlineFeatures:[]},{startRow:o=0,endRow:s=t.length}=i;for(let i=o;i<s;i++){const o=t[i],{geometry:s}=o;if(s)if("GeometryCollection"===s.type){m.Z.assert(Array.isArray(s.geometries),"GeoJSON does not have geometries array");const{geometries:t}=s;for(let s=0;s<t.length;s++){y(t[s],n,e,o,i)}}else y(s,n,e,o,i)}return n}function y(t,e,i,n,o){const{type:s,coordinates:r}=t,{pointFeatures:a,lineFeatures:l,polygonFeatures:c,polygonOutlineFeatures:d}=e;if(function(t,e){let i=_[t];m.Z.assert(i,"Unknown GeoJSON type ".concat(t));for(;e&&--i>0;)e=e[0];return e&&Number.isFinite(e[0])}(s,r))switch(s){case"Point":a.push(i({geometry:t},n,o));break;case"MultiPoint":r.forEach((t=>{a.push(i({geometry:{type:"Point",coordinates:t}},n,o))}));break;case"LineString":l.push(i({geometry:t},n,o));break;case"MultiLineString":r.forEach((t=>{l.push(i({geometry:{type:"LineString",coordinates:t}},n,o))}));break;case"Polygon":c.push(i({geometry:t},n,o)),r.forEach((t=>{d.push(i({geometry:{type:"LineString",coordinates:t}},n,o))}));break;case"MultiPolygon":r.forEach((t=>{c.push(i({geometry:{type:"Polygon",coordinates:t}},n,o)),t.forEach((t=>{d.push(i({geometry:{type:"LineString",coordinates:t}},n,o))}))}))}else m.Z.warn("".concat(s," coordinates are malformed"))()}const _={Point:1,MultiPoint:2,LineString:2,MultiLineString:3,Polygon:3,MultiPolygon:4};function x(t){return t.geometry.coordinates}function w(t,e){const i={points:{},lines:{},polygons:{},polygonsOutline:{}},{points:n,lines:o,polygons:s}=t,r=function(t,e){const i={points:null,lines:null,polygons:null};for(const n in i){const o=t[n].globalFeatureIds.value;i[n]=new Uint8ClampedArray(3*o.length);const s=[];for(let t=0;t<o.length;t++)e(o[t],s),i[n][3*t+0]=s[0],i[n][3*t+1]=s[1],i[n][3*t+2]=s[2]}return i}(t,e);return i.points.data={length:n.positions.value.length/n.positions.size,attributes:{...n.attributes,getPosition:n.positions,instancePickingColors:{size:3,value:r.points}},properties:n.properties,numericProps:n.numericProps,featureIds:n.featureIds},i.lines.data={length:o.pathIndices.value.length-1,startIndices:o.pathIndices.value,attributes:{...o.attributes,getPath:o.positions,instancePickingColors:{size:3,value:r.lines}},properties:o.properties,numericProps:o.numericProps,featureIds:o.featureIds},i.lines._pathType="open",i.polygons.data={length:s.polygonIndices.value.length-1,startIndices:s.polygonIndices.value,attributes:{...s.attributes,getPolygon:s.positions,pickingColors:{size:3,value:r.polygons}},properties:s.properties,numericProps:s.numericProps,featureIds:s.featureIds},i.polygons._normalize=!1,s.triangles&&(i.polygons.data.attributes.indices=s.triangles.value),i.polygonsOutline.data={length:s.primitivePolygonIndices.value.length-1,startIndices:s.primitivePolygonIndices.value,attributes:{...s.attributes,getPath:s.positions,instancePickingColors:{size:3,value:r.polygons}},properties:s.properties,numericProps:s.numericProps,featureIds:s.featureIds},i.polygonsOutline._pathType="open",i}const P=["points","linestrings","polygons"],b={...g(u.circle),...g(u.icon),...g(u.text),...g(h),...g(p),stroked:!0,filled:!0,extruded:!1,wireframe:!1,iconAtlas:{type:"object",value:null},iconMapping:{type:"object",value:{}},getIcon:{type:"accessor",value:t=>t.properties.icon},getText:{type:"accessor",value:t=>t.properties.text},pointType:"circle",getRadius:{deprecatedFor:"getPointRadius"}};class S extends o.Z{initializeState(){this.state={layerProps:{},features:{}}}updateState({props:t,changeFlags:e}){if(!e.dataChanged)return;const{data:i}=this.props,n=i&&"points"in i&&"polygons"in i&&"lines"in i;this.setState({binary:n}),n?this._updateStateBinary({props:t,changeFlags:e}):this._updateStateJSON({props:t,changeFlags:e})}_updateStateBinary({props:t,changeFlags:e}){const i=w(t.data,this.encodePickingColor);this.setState({layerProps:i})}_updateStateJSON({props:t,changeFlags:e}){const i=function(t){if(Array.isArray(t))return t;switch(m.Z.assert(t.type,"GeoJSON does not have type"),t.type){case"Feature":return[t];case"FeatureCollection":return m.Z.assert(Array.isArray(t.features),"GeoJSON does not have features array"),t.features;default:return[{geometry:t}]}}(t.data),n=this.getSubLayerRow.bind(this);let o={};const r={};if(Array.isArray(e.dataChanged)){const t=this.state.features;for(const e in t)o[e]=t[e].slice(),r[e]=[];for(const a of e.dataChanged){const e=v(i,n,a);for(const i in t)r[i].push((0,s.b)({data:o[i],getIndex:t=>t.__source.index,dataRange:a,replace:e[i]}))}}else o=v(i,n);const a=function(t,e){const i={points:{},lines:{},polygons:{},polygonsOutline:{}},{pointFeatures:n,lineFeatures:o,polygonFeatures:s,polygonOutlineFeatures:r}=t;return i.points.data=n,i.points._dataDiff=e.pointFeatures&&(()=>e.pointFeatures),i.points.getPosition=x,i.lines.data=o,i.lines._dataDiff=e.lineFeatures&&(()=>e.lineFeatures),i.lines.getPath=x,i.polygons.data=s,i.polygons._dataDiff=e.polygonFeatures&&(()=>e.polygonFeatures),i.polygons.getPolygon=x,i.polygonsOutline.data=r,i.polygonsOutline._dataDiff=e.polygonOutlineFeatures&&(()=>e.polygonOutlineFeatures),i.polygonsOutline.getPath=x,i}(o,r);this.setState({features:o,featuresDiff:r,layerProps:a})}getPickingInfo(t){const e=super.getPickingInfo(t),{index:i,sourceLayer:n}=e;return e.featureType=P.find((t=>n.id.startsWith("".concat(this.id,"-").concat(t,"-")))),i>=0&&n.id.startsWith("".concat(this.id,"-points-text"))&&this.state.binary&&(e.index=this.props.data.points.globalFeatureIds.value[i]),e}_updateAutoHighlight(t){const e="".concat(this.id,"-points-"),i="points"===t.featureType;for(const n of this.getSubLayers())n.id.startsWith(e)===i&&n.updateAutoHighlight(t)}_renderPolygonLayer(){const{extruded:t,wireframe:e}=this.props,{layerProps:i}=this.state,n="polygons-fill",o=this.shouldRenderSubLayer(n,i.polygons.data)&&this.getSubLayerClass(n,p.type);if(o){const s=f(this,p.props),r=t&&e;return r||delete s.getLineColor,s.updateTriggers.lineColors=r,new o(s,this.getSubLayerProps({id:n,updateTriggers:s.updateTriggers}),i.polygons)}return null}_renderLineLayers(){const{extruded:t,stroked:e}=this.props,{layerProps:i}=this.state,n="polygons-stroke",o="linestrings",s=!t&&e&&this.shouldRenderSubLayer(n,i.polygonsOutline.data)&&this.getSubLayerClass(n,h.type),r=this.shouldRenderSubLayer(o,i.lines.data)&&this.getSubLayerClass(o,h.type);if(s||r){const t=f(this,h.props);return[s&&new s(t,this.getSubLayerProps({id:n,updateTriggers:t.updateTriggers}),i.polygonsOutline),r&&new r(t,this.getSubLayerProps({id:o,updateTriggers:t.updateTriggers}),i.lines)]}return null}_renderPointLayers(){const{pointType:t}=this.props,{layerProps:e,binary:i}=this.state;let{highlightedObjectIndex:n}=this.props;!i&&Number.isFinite(n)&&(n=e.points.data.findIndex((t=>t.__source.index===n)));const o=new Set(t.split("+")),s=[];for(const t of o){const o="points-".concat(t),r=u[t],a=r&&this.shouldRenderSubLayer(o,e.points.data)&&this.getSubLayerClass(o,r.type);if(a){const l=f(this,r.props);let c=e.points;if("text"===t&&i){const{instancePickingColors:t,...e}=c.data.attributes;c={...c,data:{...c.data,attributes:e}}}s.push(new a(l,this.getSubLayerProps({id:o,updateTriggers:l.updateTriggers,highlightedObjectIndex:n}),c))}}return s}renderLayers(){const{extruded:t}=this.props,e=this._renderPolygonLayer();return[!t&&e,this._renderLineLayers(),this._renderPointLayers(),t&&e]}getSubLayerAccessor(t){const{binary:e}=this.state;return e&&"function"==typeof t?(e,i)=>{const{data:n,index:o}=i,s=function(t,e){if(!t)return null;const i="startIndices"in t?t.startIndices[e]:e,n=t.featureIds.value[i];return-1!==i?function(t,e,i){const n={properties:{...t.properties[e]}};for(const e in t.numericProps)n.properties[e]=t.numericProps[e].value[i];return n}(t,n,i):null}(n,o);return t(s,i)}:super.getSubLayerAccessor(t)}}(0,n.Z)(S,"layerName","GeoJsonLayer"),(0,n.Z)(S,"defaultProps",b)},6867:(t,e,i)=>{i.d(e,{Z:()=>S});var n=i(4572),o=i(4185),s=i(3844),r=i(3117),a=i(4088),l=i(744),c=i(9769),d=i(3982);var u=i(4912),h=i(1953),p=i(6487),g=i(8162),f=i(8550);const m=()=>{},v={10241:9987,10240:9729,10242:33071,10243:33071};function y(t,e,i,n){return i===e.width&&n===e.height?e:(t.canvas.height=n,t.canvas.width=i,t.clearRect(0,0,t.canvas.width,t.canvas.height),t.drawImage(e,0,0,e.width,e.height,0,0,i,n),t.canvas)}function _(t){return t&&(t.id||t.url)}function x(t,e,i){for(let n=0;n<e.length;n++){const{icon:o,xOffset:s}=e[n];t[_(o)]={...o,x:s,y:i}}}class w{constructor(t,{onUpdate:e=m,onError:i=m}){(0,n.Z)(this,"gl",void 0),(0,n.Z)(this,"onUpdate",void 0),(0,n.Z)(this,"onError",void 0),(0,n.Z)(this,"_loadOptions",null),(0,n.Z)(this,"_texture",null),(0,n.Z)(this,"_externalTexture",null),(0,n.Z)(this,"_mapping",{}),(0,n.Z)(this,"_textureParameters",null),(0,n.Z)(this,"_pendingCount",0),(0,n.Z)(this,"_autoPacking",!1),(0,n.Z)(this,"_xOffset",0),(0,n.Z)(this,"_yOffset",0),(0,n.Z)(this,"_rowHeight",0),(0,n.Z)(this,"_buffer",4),(0,n.Z)(this,"_canvasWidth",1024),(0,n.Z)(this,"_canvasHeight",0),(0,n.Z)(this,"_canvas",null),this.gl=t,this.onUpdate=e,this.onError=i}finalize(){var t;null===(t=this._texture)||void 0===t||t.delete()}getTexture(){return this._texture||this._externalTexture}getIconMapping(t){const e=this._autoPacking?_(t):t;return this._mapping[e]||{}}setProps({loadOptions:t,autoPacking:e,iconAtlas:i,iconMapping:n,textureParameters:o}){var s;(t&&(this._loadOptions=t),void 0!==e&&(this._autoPacking=e),n&&(this._mapping=n),i)&&(null===(s=this._texture)||void 0===s||s.delete(),this._texture=null,this._externalTexture=i);o&&(this._textureParameters=o)}get isLoaded(){return 0===this._pendingCount}packIcons(t,e){if(!this._autoPacking||"undefined"==typeof document)return;const i=Object.values(function(t,e,i){if(!t||!e)return null;i=i||{};const n={},{iterable:o,objectInfo:s}=(0,f.jB)(t);for(const t of o){s.index++;const o=e(t,s),r=_(o);if(!o)throw new Error("Icon is missing.");if(!o.url)throw new Error("Icon url is missing.");n[r]||i[r]&&o.url===i[r].url||(n[r]={...o,source:t,sourceIndex:s.index})}return n}(t,e,this._mapping)||{});if(i.length>0){const{mapping:t,xOffset:e,yOffset:n,rowHeight:o,canvasHeight:s}=function({icons:t,buffer:e,mapping:i={},xOffset:n=0,yOffset:o=0,rowHeight:s=0,canvasWidth:r}){let a=[];for(let l=0;l<t.length;l++){const c=t[l];if(!i[_(c)]){const{height:t,width:l}=c;n+l+e>r&&(x(i,a,o),n=0,o=s+o+e,s=0,a=[]),a.push({icon:c,xOffset:n}),n=n+l+e,s=Math.max(s,t)}}return a.length>0&&x(i,a,o),{mapping:i,rowHeight:s,xOffset:n,yOffset:o,canvasWidth:r,canvasHeight:(l=s+o+e,Math.pow(2,Math.ceil(Math.log2(l))))};var l}({icons:i,buffer:this._buffer,canvasWidth:this._canvasWidth,mapping:this._mapping,rowHeight:this._rowHeight,xOffset:this._xOffset,yOffset:this._yOffset});this._rowHeight=o,this._mapping=t,this._xOffset=e,this._yOffset=n,this._canvasHeight=s,this._texture||(this._texture=new u.Z(this.gl,{width:this._canvasWidth,height:this._canvasHeight,parameters:this._textureParameters||v})),this._texture.height!==this._canvasHeight&&(this._texture=function(t,e,i,n){const o=t.width,s=t.height,r=new u.Z(t.gl,{width:e,height:i,parameters:n});return(0,h.Lv)(t,r,{targetY:0,width:o,height:s}),t.delete(),r}(this._texture,this._canvasWidth,this._canvasHeight,this._textureParameters||v)),this.onUpdate(),this._canvas=this._canvas||document.createElement("canvas"),this._loadIcons(i)}}_loadIcons(t){const e=this._canvas.getContext("2d");for(const i of t)this._pendingCount++,(0,g.z)(i.url,p.S,this._loadOptions).then((t=>{const n=_(i),{x:o,y:s,width:r,height:a}=this._mapping[n],l=y(e,t,r,a);this._texture.setSubImageData({data:l,x:o,y:s,width:r,height:a}),this._texture.generateMipmap(),this.onUpdate()})).catch((t=>{this.onError({url:i.url,source:i.source,sourceIndex:i.sourceIndex,loadOptions:this._loadOptions,error:t})})).finally((()=>{this._pendingCount--}))}}const P=[0,0,0,255],b={iconAtlas:{type:"image",value:null,async:!0},iconMapping:{type:"object",value:{},async:!0},sizeScale:{type:"number",value:1,min:0},billboard:!0,sizeUnits:"pixels",sizeMinPixels:{type:"number",min:0,value:0},sizeMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},alphaCutoff:{type:"number",value:.05,min:0,max:1},getPosition:{type:"accessor",value:t=>t.position},getIcon:{type:"accessor",value:t=>t.icon},getColor:{type:"accessor",value:P},getSize:{type:"accessor",value:1},getAngle:{type:"accessor",value:0},getPixelOffset:{type:"accessor",value:[0,0]},onIconError:{type:"function",value:null,compare:!1,optional:!0}};class S extends o.Z{constructor(...t){super(...t),(0,n.Z)(this,"state",void 0)}getShaders(){return super.getShaders({vs:'#define SHADER_NAME icon-layer-vertex-shader\n\nattribute vec2 positions;\n\nattribute vec3 instancePositions;\nattribute vec3 instancePositions64Low;\nattribute float instanceSizes;\nattribute float instanceAngles;\nattribute vec4 instanceColors;\nattribute vec3 instancePickingColors;\nattribute vec4 instanceIconFrames;\nattribute float instanceColorModes;\nattribute vec2 instanceOffsets;\nattribute vec2 instancePixelOffset;\n\nuniform float sizeScale;\nuniform vec2 iconsTextureDim;\nuniform float sizeMinPixels;\nuniform float sizeMaxPixels;\nuniform bool billboard;\nuniform int sizeUnits;\n\nvarying float vColorMode;\nvarying vec4 vColor;\nvarying vec2 vTextureCoords;\nvarying vec2 uv;\n\nvec2 rotate_by_angle(vec2 vertex, float angle) {\n  float angle_radian = angle * PI / 180.0;\n  float cos_angle = cos(angle_radian);\n  float sin_angle = sin(angle_radian);\n  mat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);\n  return rotationMatrix * vertex;\n}\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n  geometry.uv = positions;\n  geometry.pickingColor = instancePickingColors;\n  uv = positions;\n\n  vec2 iconSize = instanceIconFrames.zw;\n  // convert size in meters to pixels, then scaled and clamp\n \n  // project meters to pixels and clamp to limits \n  float sizePixels = clamp(\n    project_size_to_pixel(instanceSizes * sizeScale, sizeUnits), \n    sizeMinPixels, sizeMaxPixels\n  );\n\n  // scale icon height to match instanceSize\n  float instanceScale = iconSize.y == 0.0 ? 0.0 : sizePixels / iconSize.y;\n\n  // scale and rotate vertex in "pixel" value and convert back to fraction in clipspace\n  vec2 pixelOffset = positions / 2.0 * iconSize + instanceOffsets;\n  pixelOffset = rotate_by_angle(pixelOffset, instanceAngles) * instanceScale;\n  pixelOffset += instancePixelOffset;\n  pixelOffset.y *= -1.0;\n\n  if (billboard)  {\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\n    vec3 offset = vec3(pixelOffset, 0.0);\n    DECKGL_FILTER_SIZE(offset, geometry);\n    gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\n\n  } else {\n    vec3 offset_common = vec3(project_pixel_size(pixelOffset), 0.0);\n    DECKGL_FILTER_SIZE(offset_common, geometry);\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset_common, geometry.position); \n  }\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  vTextureCoords = mix(\n    instanceIconFrames.xy,\n    instanceIconFrames.xy + iconSize,\n    (positions.xy + 1.0) / 2.0\n  ) / iconsTextureDim;\n\n  vColor = instanceColors;\n  DECKGL_FILTER_COLOR(vColor, geometry);\n\n  vColorMode = instanceColorModes;\n}\n',fs:"#define SHADER_NAME icon-layer-fragment-shader\n\nprecision highp float;\n\nuniform float opacity;\nuniform sampler2D iconsTexture;\nuniform float alphaCutoff;\n\nvarying float vColorMode;\nvarying vec4 vColor;\nvarying vec2 vTextureCoords;\nvarying vec2 uv;\n\nvoid main(void) {\n  geometry.uv = uv;\n\n  vec4 texColor = texture2D(iconsTexture, vTextureCoords);\n\n  // if colorMode == 0, use pixel color from the texture\n  // if colorMode == 1 or rendering picking buffer, use texture as transparency mask\n  vec3 color = mix(texColor.rgb, vColor.rgb, vColorMode);\n  // Take the global opacity and the alpha from vColor into account for the alpha component\n  float a = texColor.a * opacity * vColor.a;\n\n  if (a < alphaCutoff) {\n    discard;\n  }\n\n  gl_FragColor = vec4(color, a);\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",modules:[s.Z,r.Z]})}initializeState(){this.state={iconManager:new w(this.context.gl,{onUpdate:this._onUpdate.bind(this),onError:this._onError.bind(this)})};this.getAttributeManager().addInstanced({instancePositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceSizes:{size:1,transition:!0,accessor:"getSize",defaultValue:1},instanceOffsets:{size:2,accessor:"getIcon",transform:this.getInstanceOffset},instanceIconFrames:{size:4,accessor:"getIcon",transform:this.getInstanceIconFrame},instanceColorModes:{size:1,type:5121,accessor:"getIcon",transform:this.getInstanceColorMode},instanceColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,transition:!0,accessor:"getColor",defaultValue:P},instanceAngles:{size:1,transition:!0,accessor:"getAngle"},instancePixelOffset:{size:2,transition:!0,accessor:"getPixelOffset"}})}updateState(t){super.updateState(t);const{props:e,oldProps:i,changeFlags:n}=t,o=this.getAttributeManager(),{iconAtlas:s,iconMapping:r,data:a,getIcon:l,textureParameters:c}=e,{iconManager:d}=this.state,u=s||this.internalState.isAsyncPropLoading("iconAtlas");if(d.setProps({loadOptions:e.loadOptions,autoPacking:!u,iconAtlas:s,iconMapping:u?r:null,textureParameters:c}),u?i.iconMapping!==e.iconMapping&&o.invalidate("getIcon"):(n.dataChanged||n.updateTriggersChanged&&(n.updateTriggersChanged.all||n.updateTriggersChanged.getIcon))&&d.packIcons(a,l),n.extensionsChanged){var h;const{gl:t}=this.context;null===(h=this.state.model)||void 0===h||h.delete(),this.state.model=this._getModel(t),o.invalidateAll()}}get isLoaded(){return super.isLoaded&&this.state.iconManager.isLoaded}finalizeState(t){super.finalizeState(t),this.state.iconManager.finalize()}draw({uniforms:t}){const{sizeScale:e,sizeMinPixels:i,sizeMaxPixels:n,sizeUnits:o,billboard:s,alphaCutoff:r}=this.props,{iconManager:l}=this.state,c=l.getTexture();c&&this.state.model.setUniforms(t).setUniforms({iconsTexture:c,iconsTextureDim:[c.width,c.height],sizeUnits:a.iI[o],sizeScale:e,sizeMinPixels:i,sizeMaxPixels:n,billboard:s,alphaCutoff:r}).draw()}_getModel(t){return new c.Z(t,{...this.getShaders(),id:this.props.id,geometry:new d.Z({drawMode:6,attributes:{positions:{size:2,value:new Float32Array([-1,-1,-1,1,1,1,1,-1])}}}),isInstanced:!0})}_onUpdate(){this.setNeedsRedraw()}_onError(t){var e;const i=null===(e=this.getCurrentLayer())||void 0===e?void 0:e.props.onIconError;i?i(t):l.Z.error(t.error.message)()}getInstanceOffset(t){const{width:e,height:i,anchorX:n=e/2,anchorY:o=i/2}=this.state.iconManager.getIconMapping(t);return[e/2-n,i/2-o]}getInstanceColorMode(t){return this.state.iconManager.getIconMapping(t).mask?1:0}getInstanceIconFrame(t){const{x:e,y:i,width:n,height:o}=this.state.iconManager.getIconMapping(t);return[e,i,n,o]}}(0,n.Z)(S,"defaultProps",b),(0,n.Z)(S,"layerName","IconLayer")},7786:(t,e,i)=>{i.r(e),i.d(e,{ArcLayer:()=>n.Z,BitmapLayer:()=>o.Z,ColumnLayer:()=>c.Z,GeoJsonLayer:()=>p.Z,GridCellLayer:()=>d.Z,IconLayer:()=>s.Z,LineLayer:()=>r.Z,PathLayer:()=>u.Z,PointCloudLayer:()=>a.Z,PolygonLayer:()=>h.Z,ScatterplotLayer:()=>l.Z,SolidPolygonLayer:()=>f.Z,TextLayer:()=>g.Z,_MultiIconLayer:()=>m.Z,_TextBackgroundLayer:()=>v.Z});var n=i(4717),o=i(5395),s=i(6867),r=i(3326),a=i(7693),l=i(8569),c=i(5103),d=i(3274),u=i(2112),h=i(3121),p=i(9026),g=i(5555),f=i(1435),m=i(1290),v=i(1130)},3326:(t,e,i)=>{i.d(e,{Z:()=>u});var n=i(4572),o=i(4185),s=i(3844),r=i(3117),a=i(4088),l=i(9769),c=i(3982);const d={getSourcePosition:{type:"accessor",value:t=>t.sourcePosition},getTargetPosition:{type:"accessor",value:t=>t.targetPosition},getColor:{type:"accessor",value:[0,0,0,255]},getWidth:{type:"accessor",value:1},widthUnits:"pixels",widthScale:{type:"number",value:1,min:0},widthMinPixels:{type:"number",value:0,min:0},widthMaxPixels:{type:"number",value:Number.MAX_SAFE_INTEGER,min:0}};class u extends o.Z{getShaders(){return super.getShaders({vs:"#define SHADER_NAME line-layer-vertex-shader\n\nattribute vec3 positions;\nattribute vec3 instanceSourcePositions;\nattribute vec3 instanceTargetPositions;\nattribute vec3 instanceSourcePositions64Low;\nattribute vec3 instanceTargetPositions64Low;\nattribute vec4 instanceColors;\nattribute vec3 instancePickingColors;\nattribute float instanceWidths;\n\nuniform float opacity;\nuniform float widthScale;\nuniform float widthMinPixels;\nuniform float widthMaxPixels;\nuniform float useShortestPath;\nuniform int widthUnits;\n\nvarying vec4 vColor;\nvarying vec2 uv;\n\n// offset vector by strokeWidth pixels\n// offset_direction is -1 (left) or 1 (right)\nvec2 getExtrusionOffset(vec2 line_clipspace, float offset_direction, float width) {\n  // normalized direction of the line\n  vec2 dir_screenspace = normalize(line_clipspace * project_uViewportSize);\n  // rotate by 90 degrees\n  dir_screenspace = vec2(-dir_screenspace.y, dir_screenspace.x);\n\n  return dir_screenspace * offset_direction * width / 2.0;\n}\n\nvec3 splitLine(vec3 a, vec3 b, float x) {\n  float t = (x - a.x) / (b.x - a.x);\n  return vec3(x, mix(a.yz, b.yz, t));\n}\n\nvoid main(void) {\n  geometry.worldPosition = instanceSourcePositions;\n  geometry.worldPositionAlt = instanceTargetPositions;\n\n  vec3 source_world = instanceSourcePositions;\n  vec3 target_world = instanceTargetPositions;\n  vec3 source_world_64low = instanceSourcePositions64Low;\n  vec3 target_world_64low = instanceTargetPositions64Low;\n\n  if (useShortestPath > 0.5 || useShortestPath < -0.5) {\n    source_world.x = mod(source_world.x + 180., 360.0) - 180.;\n    target_world.x = mod(target_world.x + 180., 360.0) - 180.;\n    float deltaLng = target_world.x - source_world.x;\n\n    if (deltaLng * useShortestPath > 180.) {\n      source_world.x += 360. * useShortestPath;\n      source_world = splitLine(source_world, target_world, 180. * useShortestPath);\n      source_world_64low = vec3(0.0);\n    } else if (deltaLng * useShortestPath < -180.) {\n      target_world.x += 360. * useShortestPath;\n      target_world = splitLine(source_world, target_world, 180. * useShortestPath);\n      target_world_64low = vec3(0.0);\n    } else if (useShortestPath < 0.) {\n      // Line is not split, abort\n      gl_Position = vec4(0.);\n      return;\n    }\n  }\n\n  // Position\n  vec4 source_commonspace;\n  vec4 target_commonspace;\n  vec4 source = project_position_to_clipspace(source_world, source_world_64low, vec3(0.), source_commonspace);\n  vec4 target = project_position_to_clipspace(target_world, target_world_64low, vec3(0.), target_commonspace);\n  \n  // linear interpolation of source & target to pick right coord\n  float segmentIndex = positions.x;\n  vec4 p = mix(source, target, segmentIndex);\n  geometry.position = mix(source_commonspace, target_commonspace, segmentIndex);\n  uv = positions.xy;\n  geometry.uv = uv;\n  geometry.pickingColor = instancePickingColors;\n\n  // Multiply out width and clamp to limits\n  float widthPixels = clamp(\n    project_size_to_pixel(instanceWidths * widthScale, widthUnits),\n    widthMinPixels, widthMaxPixels\n  );\n\n  // extrude\n  vec3 offset = vec3(\n    getExtrusionOffset(target.xy - source.xy, positions.y, widthPixels),\n    0.0);\n  DECKGL_FILTER_SIZE(offset, geometry);\n  gl_Position = p + vec4(project_pixel_size_to_clipspace(offset.xy), 0.0, 0.0);\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  // Color\n  vColor = vec4(instanceColors.rgb, instanceColors.a * opacity);\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#define SHADER_NAME line-layer-fragment-shader\n\nprecision highp float;\n\nvarying vec4 vColor;\nvarying vec2 uv;\n\nvoid main(void) {\n  geometry.uv = uv;\n\n  gl_FragColor = vColor;\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",modules:[s.Z,r.Z]})}get wrapLongitude(){return!1}initializeState(){this.getAttributeManager().addInstanced({instanceSourcePositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getSourcePosition"},instanceTargetPositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getTargetPosition"},instanceColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,transition:!0,accessor:"getColor",defaultValue:[0,0,0,255]},instanceWidths:{size:1,transition:!0,accessor:"getWidth",defaultValue:1}})}updateState(t){if(super.updateState(t),t.changeFlags.extensionsChanged){var e;const{gl:t}=this.context;null===(e=this.state.model)||void 0===e||e.delete(),this.state.model=this._getModel(t),this.getAttributeManager().invalidateAll()}}draw({uniforms:t}){const{widthUnits:e,widthScale:i,widthMinPixels:n,widthMaxPixels:o,wrapLongitude:s}=this.props;this.state.model.setUniforms(t).setUniforms({widthUnits:a.iI[e],widthScale:i,widthMinPixels:n,widthMaxPixels:o,useShortestPath:s?1:0}).draw(),s&&this.state.model.setUniforms({useShortestPath:-1}).draw()}_getModel(t){return new l.Z(t,{...this.getShaders(),id:this.props.id,geometry:new c.Z({drawMode:5,attributes:{positions:new Float32Array([0,-1,0,0,1,0,1,-1,0,1,1,0])}}),isInstanced:!0})}}(0,n.Z)(u,"layerName","LineLayer"),(0,n.Z)(u,"defaultProps",d)},2112:(t,e,i)=>{i.d(e,{Z:()=>v});var n=i(4572),o=i(4185),s=i(3844),r=i(3117),a=i(4088),l=i(9769),c=i(3982),d=i(8005),u=i(5215);class h extends d.Z{constructor(t){super({...t,attributes:{positions:{size:3,padding:18,initialize:!0,type:t.fp64?Float64Array:Float32Array},segmentTypes:{size:1,type:Uint8ClampedArray}}})}get(t){return this.attributes[t]}getGeometryFromBuffer(t){return this.normalize?super.getGeometryFromBuffer(t):null}normalizeGeometry(t){return this.normalize?function(t,e,i,n){let o;if(Array.isArray(t[0])){const i=t.length*e;o=new Array(i);for(let i=0;i<t.length;i++)for(let n=0;n<e;n++)o[i*e+n]=t[i][n]||0}else o=t;return i?(0,u.dj)(o,{size:e,gridResolution:i}):n?(0,u.ct)(o,{size:e}):o}(t,this.positionSize,this.opts.resolution,this.opts.wrapLongitude):t}getGeometrySize(t){if(p(t)){let e=0;for(const i of t)e+=this.getGeometrySize(i);return e}const e=this.getPathLength(t);return e<2?0:this.isClosed(t)?e<3?0:e+2:e}updateGeometryAttributes(t,e){if(0!==e.geometrySize)if(t&&p(t))for(const i of t){const t=this.getGeometrySize(i);e.geometrySize=t,this.updateGeometryAttributes(i,e),e.vertexStart+=t}else this._updateSegmentTypes(t,e),this._updatePositions(t,e)}_updateSegmentTypes(t,e){const i=this.attributes.segmentTypes,n=!!t&&this.isClosed(t),{vertexStart:o,geometrySize:s}=e;i.fill(0,o,o+s),n?(i[o]=4,i[o+s-2]=4):(i[o]+=1,i[o+s-2]+=2),i[o+s-1]=4}_updatePositions(t,e){const{positions:i}=this.attributes;if(!i||!t)return;const{vertexStart:n,geometrySize:o}=e,s=new Array(3);for(let e=n,r=0;r<o;e++,r++)this.getPointOnPath(t,r,s),i[3*e]=s[0],i[3*e+1]=s[1],i[3*e+2]=s[2]}getPathLength(t){return t.length/this.positionSize}getPointOnPath(t,e,i=[]){const{positionSize:n}=this;e*n>=t.length&&(e+=1-t.length/n);const o=e*n;return i[0]=t[o],i[1]=t[o+1],i[2]=3===n&&t[o+2]||0,i}isClosed(t){if(!this.normalize)return Boolean(this.opts.loop);const{positionSize:e}=this,i=t.length-e;return t[0]===t[i]&&t[1]===t[i+1]&&(2===e||t[2]===t[i+2])}}function p(t){return Array.isArray(t[0])}const g=[0,0,0,255],f={widthUnits:"meters",widthScale:{type:"number",min:0,value:1},widthMinPixels:{type:"number",min:0,value:0},widthMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},jointRounded:!1,capRounded:!1,miterLimit:{type:"number",min:0,value:4},billboard:!1,_pathType:null,getPath:{type:"accessor",value:t=>t.path},getColor:{type:"accessor",value:g},getWidth:{type:"accessor",value:1},rounded:{deprecatedFor:["jointRounded","capRounded"]}},m={enter:(t,e)=>e.length?e.subarray(e.length-t.length):t};class v extends o.Z{constructor(...t){super(...t),(0,n.Z)(this,"state",void 0)}getShaders(){return super.getShaders({vs:"#define SHADER_NAME path-layer-vertex-shader\n\nattribute vec2 positions;\n\nattribute float instanceTypes;\nattribute vec3 instanceStartPositions;\nattribute vec3 instanceEndPositions;\nattribute vec3 instanceLeftPositions;\nattribute vec3 instanceRightPositions;\nattribute vec3 instanceLeftPositions64Low;\nattribute vec3 instanceStartPositions64Low;\nattribute vec3 instanceEndPositions64Low;\nattribute vec3 instanceRightPositions64Low;\nattribute float instanceStrokeWidths;\nattribute vec4 instanceColors;\nattribute vec3 instancePickingColors;\n\nuniform float widthScale;\nuniform float widthMinPixels;\nuniform float widthMaxPixels;\nuniform float jointType;\nuniform float capType;\nuniform float miterLimit;\nuniform bool billboard;\nuniform int widthUnits;\n\nuniform float opacity;\n\nvarying vec4 vColor;\nvarying vec2 vCornerOffset;\nvarying float vMiterLength;\nvarying vec2 vPathPosition;\nvarying float vPathLength;\nvarying float vJointType;\n\nconst float EPSILON = 0.001;\nconst vec3 ZERO_OFFSET = vec3(0.0);\n\nfloat flipIfTrue(bool flag) {\n  return -(float(flag) * 2. - 1.);\n}\n\n// calculate line join positions\nvec3 lineJoin(\n  vec3 prevPoint, vec3 currPoint, vec3 nextPoint,\n  vec2 width\n) {\n  bool isEnd = positions.x > 0.0;\n  // side of the segment - -1: left, 0: center, 1: right\n  float sideOfPath = positions.y;\n  float isJoint = float(sideOfPath == 0.0);\n\n  vec3 deltaA3 = (currPoint - prevPoint);\n  vec3 deltaB3 = (nextPoint - currPoint);\n\n  mat3 rotationMatrix;\n  bool needsRotation = !billboard && project_needs_rotation(currPoint, rotationMatrix);\n  if (needsRotation) {\n    deltaA3 = deltaA3 * rotationMatrix;\n    deltaB3 = deltaB3 * rotationMatrix;\n  }\n  vec2 deltaA = deltaA3.xy / width;\n  vec2 deltaB = deltaB3.xy / width;\n\n  float lenA = length(deltaA);\n  float lenB = length(deltaB);\n\n  vec2 dirA = lenA > 0. ? normalize(deltaA) : vec2(0.0, 0.0);\n  vec2 dirB = lenB > 0. ? normalize(deltaB) : vec2(0.0, 0.0);\n\n  vec2 perpA = vec2(-dirA.y, dirA.x);\n  vec2 perpB = vec2(-dirB.y, dirB.x);\n\n  // tangent of the corner\n  vec2 tangent = dirA + dirB;\n  tangent = length(tangent) > 0. ? normalize(tangent) : perpA;\n  // direction of the corner\n  vec2 miterVec = vec2(-tangent.y, tangent.x);\n  // direction of the segment\n  vec2 dir = isEnd ? dirA : dirB;\n  // direction of the extrusion\n  vec2 perp = isEnd ? perpA : perpB;\n  // length of the segment\n  float L = isEnd ? lenA : lenB;\n\n  // A = angle of the corner\n  float sinHalfA = abs(dot(miterVec, perp));\n  float cosHalfA = abs(dot(dirA, miterVec));\n\n  // -1: right, 1: left\n  float turnDirection = flipIfTrue(dirA.x * dirB.y >= dirA.y * dirB.x);\n\n  // relative position to the corner:\n  // -1: inside (smaller side of the angle)\n  // 0: center\n  // 1: outside (bigger side of the angle)\n  float cornerPosition = sideOfPath * turnDirection;\n\n  float miterSize = 1.0 / max(sinHalfA, EPSILON);\n  // trim if inside corner extends further than the line segment\n  miterSize = mix(\n    min(miterSize, max(lenA, lenB) / max(cosHalfA, EPSILON)),\n    miterSize,\n    step(0.0, cornerPosition)\n  );\n\n  vec2 offsetVec = mix(miterVec * miterSize, perp, step(0.5, cornerPosition))\n    * (sideOfPath + isJoint * turnDirection);\n\n  // special treatment for start cap and end cap\n  bool isStartCap = lenA == 0.0 || (!isEnd && (instanceTypes == 1.0 || instanceTypes == 3.0));\n  bool isEndCap = lenB == 0.0 || (isEnd && (instanceTypes == 2.0 || instanceTypes == 3.0));\n  bool isCap = isStartCap || isEndCap;\n\n  // extend out a triangle to envelope the round cap\n  if (isCap) {\n    offsetVec = mix(perp * sideOfPath, dir * capType * 4.0 * flipIfTrue(isStartCap), isJoint);\n    vJointType = capType;\n  } else {\n    vJointType = jointType;\n  }\n\n  // Generate variables for fragment shader\n  vPathLength = L;\n  vCornerOffset = offsetVec;\n  vMiterLength = dot(vCornerOffset, miterVec * turnDirection);\n  vMiterLength = isCap ? isJoint : vMiterLength;\n\n  vec2 offsetFromStartOfPath = vCornerOffset + deltaA * float(isEnd);\n  vPathPosition = vec2(\n    dot(offsetFromStartOfPath, perp),\n    dot(offsetFromStartOfPath, dir)\n  );\n  geometry.uv = vPathPosition;\n\n  float isValid = step(instanceTypes, 3.5);\n  vec3 offset = vec3(offsetVec * width * isValid, 0.0);\n\n  if (needsRotation) {\n    offset = rotationMatrix * offset;\n  }\n  return currPoint + offset;\n}\n\n// In clipspace extrusion, if a line extends behind the camera, clip it to avoid visual artifacts\nvoid clipLine(inout vec4 position, vec4 refPosition) {\n  if (position.w < EPSILON) {\n    float r = (EPSILON - refPosition.w) / (position.w - refPosition.w);\n    position = refPosition + (position - refPosition) * r;\n  }\n}\n\nvoid main() {\n  geometry.pickingColor = instancePickingColors;\n\n  vColor = vec4(instanceColors.rgb, instanceColors.a * opacity);\n\n  float isEnd = positions.x;\n\n  vec3 prevPosition = mix(instanceLeftPositions, instanceStartPositions, isEnd);\n  vec3 prevPosition64Low = mix(instanceLeftPositions64Low, instanceStartPositions64Low, isEnd);\n\n  vec3 currPosition = mix(instanceStartPositions, instanceEndPositions, isEnd);\n  vec3 currPosition64Low = mix(instanceStartPositions64Low, instanceEndPositions64Low, isEnd);\n\n  vec3 nextPosition = mix(instanceEndPositions, instanceRightPositions, isEnd);\n  vec3 nextPosition64Low = mix(instanceEndPositions64Low, instanceRightPositions64Low, isEnd);\n\n  geometry.worldPosition = currPosition;\n  vec2 widthPixels = vec2(clamp(\n    project_size_to_pixel(instanceStrokeWidths * widthScale, widthUnits),\n    widthMinPixels, widthMaxPixels) / 2.0);\n  vec3 width;\n\n  if (billboard) {\n    // Extrude in clipspace\n    vec4 prevPositionScreen = project_position_to_clipspace(prevPosition, prevPosition64Low, ZERO_OFFSET);\n    vec4 currPositionScreen = project_position_to_clipspace(currPosition, currPosition64Low, ZERO_OFFSET, geometry.position);\n    vec4 nextPositionScreen = project_position_to_clipspace(nextPosition, nextPosition64Low, ZERO_OFFSET);\n\n    clipLine(prevPositionScreen, currPositionScreen);\n    clipLine(nextPositionScreen, currPositionScreen);\n    clipLine(currPositionScreen, mix(nextPositionScreen, prevPositionScreen, isEnd));\n\n    width = vec3(widthPixels, 0.0);\n    DECKGL_FILTER_SIZE(width, geometry);\n\n    vec3 pos = lineJoin(\n      prevPositionScreen.xyz / prevPositionScreen.w,\n      currPositionScreen.xyz / currPositionScreen.w,\n      nextPositionScreen.xyz / nextPositionScreen.w,\n      project_pixel_size_to_clipspace(width.xy)\n    );\n\n    gl_Position = vec4(pos * currPositionScreen.w, currPositionScreen.w);\n  } else {\n    // Extrude in commonspace\n    prevPosition = project_position(prevPosition, prevPosition64Low);\n    currPosition = project_position(currPosition, currPosition64Low);\n    nextPosition = project_position(nextPosition, nextPosition64Low);\n\n    width = vec3(project_pixel_size(widthPixels), 0.0);\n    DECKGL_FILTER_SIZE(width, geometry);\n\n    vec4 pos = vec4(\n      lineJoin(prevPosition, currPosition, nextPosition, width.xy),\n      1.0);\n    geometry.position = pos;\n    gl_Position = project_common_position_to_clipspace(pos);\n  }\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#define SHADER_NAME path-layer-fragment-shader\n\nprecision highp float;\n\nuniform float miterLimit;\n\nvarying vec4 vColor;\nvarying vec2 vCornerOffset;\nvarying float vMiterLength;\n/*\n * vPathPosition represents the relative coordinates of the current fragment on the path segment.\n * vPathPosition.x - position along the width of the path, between [-1, 1]. 0 is the center line.\n * vPathPosition.y - position along the length of the path, between [0, L / width].\n */\nvarying vec2 vPathPosition;\nvarying float vPathLength;\nvarying float vJointType;\n\nvoid main(void) {\n  geometry.uv = vPathPosition;\n\n  if (vPathPosition.y < 0.0 || vPathPosition.y > vPathLength) {\n    // if joint is rounded, test distance from the corner\n    if (vJointType > 0.5 && length(vCornerOffset) > 1.0) {\n      discard;\n    }\n    // trim miter\n    if (vJointType < 0.5 && vMiterLength > miterLimit + 1.0) {\n      discard;\n    }\n  }\n  gl_FragColor = vColor;\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",modules:[s.Z,r.Z]})}get wrapLongitude(){return!1}initializeState(){this.getAttributeManager().addInstanced({positions:{size:3,vertexOffset:1,type:5130,fp64:this.use64bitPositions(),transition:m,accessor:"getPath",update:this.calculatePositions,noAlloc:true,shaderAttributes:{instanceLeftPositions:{vertexOffset:0},instanceStartPositions:{vertexOffset:1},instanceEndPositions:{vertexOffset:2},instanceRightPositions:{vertexOffset:3}}},instanceTypes:{size:1,type:5121,update:this.calculateSegmentTypes,noAlloc:true},instanceStrokeWidths:{size:1,accessor:"getWidth",transition:m,defaultValue:1},instanceColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,accessor:"getColor",transition:m,defaultValue:g},instancePickingColors:{size:3,type:5121,accessor:(t,{index:e,target:i})=>this.encodePickingColor(t&&t.__source?t.__source.index:e,i)}}),this.setState({pathTesselator:new h({fp64:this.use64bitPositions()})})}updateState(t){super.updateState(t);const{props:e,changeFlags:i}=t,n=this.getAttributeManager();if(i.dataChanged||i.updateTriggersChanged&&(i.updateTriggersChanged.all||i.updateTriggersChanged.getPath)){const{pathTesselator:t}=this.state,o=e.data.attributes||{};t.updateGeometry({data:e.data,geometryBuffer:o.getPath,buffers:o,normalize:!e._pathType,loop:"loop"===e._pathType,getGeometry:e.getPath,positionFormat:e.positionFormat,wrapLongitude:e.wrapLongitude,resolution:this.context.viewport.resolution,dataChanged:i.dataChanged}),this.setState({numInstances:t.instanceCount,startIndices:t.vertexStarts}),i.dataChanged||n.invalidateAll()}if(i.extensionsChanged){var o;const{gl:t}=this.context;null===(o=this.state.model)||void 0===o||o.delete(),this.state.model=this._getModel(t),n.invalidateAll()}}getPickingInfo(t){const e=super.getPickingInfo(t),{index:i}=e,{data:n}=this.props;return n[0]&&n[0].__source&&(e.object=n.find((t=>t.__source.index===i))),e}disablePickingIndex(t){const{data:e}=this.props;if(e[0]&&e[0].__source)for(let i=0;i<e.length;i++)e[i].__source.index===t&&this._disablePickingIndex(i);else this._disablePickingIndex(t)}draw({uniforms:t}){const{jointRounded:e,capRounded:i,billboard:n,miterLimit:o,widthUnits:s,widthScale:r,widthMinPixels:l,widthMaxPixels:c}=this.props;this.state.model.setUniforms(t).setUniforms({jointType:Number(e),capType:Number(i),billboard:n,widthUnits:a.iI[s],widthScale:r,miterLimit:o,widthMinPixels:l,widthMaxPixels:c}).draw()}_getModel(t){return new l.Z(t,{...this.getShaders(),id:this.props.id,geometry:new c.Z({drawMode:4,attributes:{indices:new Uint16Array([0,1,2,1,4,2,1,3,4,3,5,4]),positions:{value:new Float32Array([0,0,0,-1,0,1,1,-1,1,1,1,0]),size:2}}}),isInstanced:!0})}calculatePositions(t){const{pathTesselator:e}=this.state;t.startIndices=e.vertexStarts,t.value=e.get("positions")}calculateSegmentTypes(t){const{pathTesselator:e}=this.state;t.startIndices=e.vertexStarts,t.value=e.get("segmentTypes")}}(0,n.Z)(v,"defaultProps",f),(0,n.Z)(v,"layerName","PathLayer")},7693:(t,e,i)=>{i.d(e,{Z:()=>g});var n=i(4572),o=i(4185),s=i(3844),r=i(7287),a=i(3117),l=i(4088),c=i(9769),d=i(3982);const u=[0,0,0,255],h=[0,0,1],p={sizeUnits:"pixels",pointSize:{type:"number",min:0,value:10},getPosition:{type:"accessor",value:t=>t.position},getNormal:{type:"accessor",value:h},getColor:{type:"accessor",value:u},material:!0,radiusPixels:{deprecatedFor:"pointSize"}};class g extends o.Z{getShaders(){return super.getShaders({vs:"#define SHADER_NAME point-cloud-layer-vertex-shader\n\nattribute vec3 positions;\nattribute vec3 instanceNormals;\nattribute vec4 instanceColors;\nattribute vec3 instancePositions;\nattribute vec3 instancePositions64Low;\nattribute vec3 instancePickingColors;\n\nuniform float opacity;\nuniform float radiusPixels;\nuniform int sizeUnits;\n\nvarying vec4 vColor;\nvarying vec2 unitPosition;\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n  geometry.normal = project_normal(instanceNormals);\n\n  // position on the containing square in [-1, 1] space\n  unitPosition = positions.xy;\n  geometry.uv = unitPosition;\n  geometry.pickingColor = instancePickingColors;\n\n  // Find the center of the point and add the current vertex\n  vec3 offset = vec3(positions.xy * project_size_to_pixel(radiusPixels, sizeUnits), 0.0);\n  DECKGL_FILTER_SIZE(offset, geometry);\n\n  gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.), geometry.position);\n  gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  // Apply lighting\n  vec3 lightColor = lighting_getLightColor(instanceColors.rgb, project_uCameraPosition, geometry.position.xyz, geometry.normal);\n\n  // Apply opacity to instance color, or return instance picking color\n  vColor = vec4(lightColor, instanceColors.a * opacity);\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#define SHADER_NAME point-cloud-layer-fragment-shader\n\nprecision highp float;\n\nvarying vec4 vColor;\nvarying vec2 unitPosition;\n\nvoid main(void) {\n  geometry.uv = unitPosition;\n\n  float distToCenter = length(unitPosition);\n\n  if (distToCenter > 1.0) {\n    discard;\n  }\n\n  gl_FragColor = vColor;\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",modules:[s.Z,r.N,a.Z]})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceNormals:{size:3,transition:!0,accessor:"getNormal",defaultValue:h},instanceColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,transition:!0,accessor:"getColor",defaultValue:u}})}updateState(t){const{changeFlags:e,props:i}=t;if(super.updateState(t),e.extensionsChanged){var n;const{gl:t}=this.context;null===(n=this.state.model)||void 0===n||n.delete(),this.state.model=this._getModel(t),this.getAttributeManager().invalidateAll()}e.dataChanged&&function(t){const{header:e,attributes:i}=t;e&&i&&(t.length=e.vertexCount,i.POSITION&&(i.instancePositions=i.POSITION),i.NORMAL&&(i.instanceNormals=i.NORMAL),i.COLOR_0&&(i.instanceColors=i.COLOR_0))}(i.data)}draw({uniforms:t}){const{pointSize:e,sizeUnits:i}=this.props;this.state.model.setUniforms(t).setUniforms({sizeUnits:l.iI[i],radiusPixels:e}).draw()}_getModel(t){const e=[];for(let t=0;t<3;t++){const i=t/3*Math.PI*2;e.push(2*Math.cos(i),2*Math.sin(i),0)}return new c.Z(t,{...this.getShaders(),id:this.props.id,geometry:new d.Z({drawMode:4,attributes:{positions:new Float32Array(e)}}),isInstanced:!0})}}(0,n.Z)(g,"layerName","PointCloudLayer"),(0,n.Z)(g,"defaultProps",p)},3121:(t,e,i)=>{i.d(e,{Z:()=>p});var n=i(4572),o=i(8918),s=i(744),r=i(8550),a=i(1435),l=i(2112),c=i(9890),d=i(8452);const u=[0,0,0,255],h={stroked:!0,filled:!0,extruded:!1,elevationScale:1,wireframe:!1,_normalize:!0,_windingOrder:"CW",lineWidthUnits:"meters",lineWidthScale:1,lineWidthMinPixels:0,lineWidthMaxPixels:Number.MAX_SAFE_INTEGER,lineJointRounded:!1,lineMiterLimit:4,getPolygon:{type:"accessor",value:t=>t.polygon},getFillColor:{type:"accessor",value:[0,0,0,255]},getLineColor:{type:"accessor",value:u},getLineWidth:{type:"accessor",value:1},getElevation:{type:"accessor",value:1e3},material:!0};class p extends o.Z{initializeState(){this.state={paths:[]},this.props.getLineDashArray&&s.Z.removed("getLineDashArray","PathStyleExtension")()}updateState({changeFlags:t}){const e=t.dataChanged||t.updateTriggersChanged&&(t.updateTriggersChanged.all||t.updateTriggersChanged.getPolygon);if(e&&Array.isArray(t.dataChanged)){const e=this.state.paths.slice(),i=t.dataChanged.map((t=>(0,d.b)({data:e,getIndex:t=>t.__source.index,dataRange:t,replace:this._getPaths(t)})));this.setState({paths:e,pathsDiff:i})}else e&&this.setState({paths:this._getPaths(),pathsDiff:null})}_getPaths(t={}){const{data:e,getPolygon:i,positionFormat:n,_normalize:o}=this.props,s=[],a="XY"===n?2:3,{startRow:l,endRow:d}=t,{iterable:u,objectInfo:h}=(0,r.jB)(e,l,d);for(const t of u){h.index++;let e=i(t,h);o&&(e=c.Fv(e,a));const{holeIndices:n}=e,r=e.positions||e;if(n)for(let e=0;e<=n.length;e++){const i=r.slice(n[e-1]||0,n[e]||r.length);s.push(this.getSubLayerRow({path:i},t,h.index))}else s.push(this.getSubLayerRow({path:r},t,h.index))}return s}renderLayers(){const{data:t,_dataDiff:e,stroked:i,filled:n,extruded:o,wireframe:s,_normalize:r,_windingOrder:c,elevationScale:d,transitions:h,positionFormat:p}=this.props,{lineWidthUnits:g,lineWidthScale:f,lineWidthMinPixels:m,lineWidthMaxPixels:v,lineJointRounded:y,lineMiterLimit:_,lineDashJustified:x}=this.props,{getFillColor:w,getLineColor:P,getLineWidth:b,getLineDashArray:S,getElevation:C,getPolygon:M,updateTriggers:T,material:L}=this.props,{paths:A,pathsDiff:Z}=this.state,E=this.getSubLayerClass("fill",a.Z),z=this.getSubLayerClass("stroke",l.Z),I=this.shouldRenderSubLayer("fill",A)&&new E({_dataDiff:e,extruded:o,elevationScale:d,filled:n,wireframe:s,_normalize:r,_windingOrder:c,getElevation:C,getFillColor:w,getLineColor:o&&s?P:u,material:L,transitions:h},this.getSubLayerProps({id:"fill",updateTriggers:T&&{getPolygon:T.getPolygon,getElevation:T.getElevation,getFillColor:T.getFillColor,lineColors:o&&s,getLineColor:T.getLineColor}}),{data:t,positionFormat:p,getPolygon:M});return[!o&&I,!o&&i&&this.shouldRenderSubLayer("stroke",A)&&new z({_dataDiff:Z&&(()=>Z),widthUnits:g,widthScale:f,widthMinPixels:m,widthMaxPixels:v,jointRounded:y,miterLimit:_,dashJustified:x,_pathType:"loop",transitions:h&&{getWidth:h.getLineWidth,getColor:h.getLineColor,getPath:h.getPolygon},getColor:this.getSubLayerAccessor(P),getWidth:this.getSubLayerAccessor(b),getDashArray:this.getSubLayerAccessor(S)},this.getSubLayerProps({id:"stroke",updateTriggers:T&&{getWidth:T.getLineWidth,getColor:T.getLineColor,getDashArray:T.getLineDashArray}}),{data:A,positionFormat:p,getPath:t=>t.path}),o&&I]}}(0,n.Z)(p,"layerName","PolygonLayer"),(0,n.Z)(p,"defaultProps",h)},8569:(t,e,i)=>{i.d(e,{Z:()=>h});var n=i(4572),o=i(4185),s=i(3844),r=i(3117),a=i(4088),l=i(9769),c=i(3982);const d=[0,0,0,255],u={radiusUnits:"meters",radiusScale:{type:"number",min:0,value:1},radiusMinPixels:{type:"number",min:0,value:0},radiusMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},lineWidthUnits:"meters",lineWidthScale:{type:"number",min:0,value:1},lineWidthMinPixels:{type:"number",min:0,value:0},lineWidthMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},stroked:!1,filled:!0,billboard:!1,antialiasing:!0,getPosition:{type:"accessor",value:t=>t.position},getRadius:{type:"accessor",value:1},getFillColor:{type:"accessor",value:d},getLineColor:{type:"accessor",value:d},getLineWidth:{type:"accessor",value:1},strokeWidth:{deprecatedFor:"getLineWidth"},outline:{deprecatedFor:"stroked"},getColor:{deprecatedFor:["getFillColor","getLineColor"]}};class h extends o.Z{getShaders(){return super.getShaders({vs:"#define SHADER_NAME scatterplot-layer-vertex-shader\n\nattribute vec3 positions;\n\nattribute vec3 instancePositions;\nattribute vec3 instancePositions64Low;\nattribute float instanceRadius;\nattribute float instanceLineWidths;\nattribute vec4 instanceFillColors;\nattribute vec4 instanceLineColors;\nattribute vec3 instancePickingColors;\n\nuniform float opacity;\nuniform float radiusScale;\nuniform float radiusMinPixels;\nuniform float radiusMaxPixels;\nuniform float lineWidthScale;\nuniform float lineWidthMinPixels;\nuniform float lineWidthMaxPixels;\nuniform float stroked;\nuniform bool filled;\nuniform bool antialiasing;\nuniform bool billboard;\nuniform int radiusUnits;\nuniform int lineWidthUnits;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying vec2 unitPosition;\nvarying float innerUnitRadius;\nvarying float outerRadiusPixels;\n\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n\n  // Multiply out radius and clamp to limits\n  outerRadiusPixels = clamp(\n    project_size_to_pixel(radiusScale * instanceRadius, radiusUnits),\n    radiusMinPixels, radiusMaxPixels\n  );\n  \n  // Multiply out line width and clamp to limits\n  float lineWidthPixels = clamp(\n    project_size_to_pixel(lineWidthScale * instanceLineWidths, lineWidthUnits),\n    lineWidthMinPixels, lineWidthMaxPixels\n  );\n\n  // outer radius needs to offset by half stroke width\n  outerRadiusPixels += stroked * lineWidthPixels / 2.0;\n\n  // Expand geometry to accomodate edge smoothing\n  float edgePadding = antialiasing ? (outerRadiusPixels + SMOOTH_EDGE_RADIUS) / outerRadiusPixels : 1.0;\n\n  // position on the containing square in [-1, 1] space\n  unitPosition = edgePadding * positions.xy;\n  geometry.uv = unitPosition;\n  geometry.pickingColor = instancePickingColors;\n\n  innerUnitRadius = 1.0 - stroked * lineWidthPixels / outerRadiusPixels;\n  \n  if (billboard) {\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\n    vec3 offset = edgePadding * positions * outerRadiusPixels;\n    DECKGL_FILTER_SIZE(offset, geometry);\n    gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\n  } else {\n    vec3 offset = edgePadding * positions * project_pixel_size(outerRadiusPixels);\n    DECKGL_FILTER_SIZE(offset, geometry);\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset, geometry.position);\n  }\n\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  // Apply opacity to instance color, or return instance picking color\n  vFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * opacity);\n  DECKGL_FILTER_COLOR(vFillColor, geometry);\n  vLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * opacity);\n  DECKGL_FILTER_COLOR(vLineColor, geometry);\n}\n",fs:"#define SHADER_NAME scatterplot-layer-fragment-shader\n\nprecision highp float;\n\nuniform bool filled;\nuniform float stroked;\nuniform bool antialiasing;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying vec2 unitPosition;\nvarying float innerUnitRadius;\nvarying float outerRadiusPixels;\n\nvoid main(void) {\n  geometry.uv = unitPosition;\n\n  float distToCenter = length(unitPosition) * outerRadiusPixels;\n  float inCircle = antialiasing ? \n    smoothedge(distToCenter, outerRadiusPixels) : \n    step(distToCenter, outerRadiusPixels);\n\n  if (inCircle == 0.0) {\n    discard;\n  }\n\n  if (stroked > 0.5) {\n    float isLine = antialiasing ? \n      smoothedge(innerUnitRadius * outerRadiusPixels, distToCenter) :\n      step(innerUnitRadius * outerRadiusPixels, distToCenter);\n\n    if (filled) {\n      gl_FragColor = mix(vFillColor, vLineColor, isLine);\n    } else {\n      if (isLine == 0.0) {\n        discard;\n      }\n      gl_FragColor = vec4(vLineColor.rgb, vLineColor.a * isLine);\n    }\n  } else if (filled) {\n    gl_FragColor = vFillColor;\n  } else {\n    discard;\n  }\n\n  gl_FragColor.a *= inCircle;\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",modules:[s.Z,r.Z]})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceRadius:{size:1,transition:!0,accessor:"getRadius",defaultValue:1},instanceFillColors:{size:this.props.colorFormat.length,transition:!0,normalized:!0,type:5121,accessor:"getFillColor",defaultValue:[0,0,0,255]},instanceLineColors:{size:this.props.colorFormat.length,transition:!0,normalized:!0,type:5121,accessor:"getLineColor",defaultValue:[0,0,0,255]},instanceLineWidths:{size:1,transition:!0,accessor:"getLineWidth",defaultValue:1}})}updateState(t){if(super.updateState(t),t.changeFlags.extensionsChanged){var e;const{gl:t}=this.context;null===(e=this.state.model)||void 0===e||e.delete(),this.state.model=this._getModel(t),this.getAttributeManager().invalidateAll()}}draw({uniforms:t}){const{radiusUnits:e,radiusScale:i,radiusMinPixels:n,radiusMaxPixels:o,stroked:s,filled:r,billboard:l,antialiasing:c,lineWidthUnits:d,lineWidthScale:u,lineWidthMinPixels:h,lineWidthMaxPixels:p}=this.props;this.state.model.setUniforms(t).setUniforms({stroked:s?1:0,filled:r,billboard:l,antialiasing:c,radiusUnits:a.iI[e],radiusScale:i,radiusMinPixels:n,radiusMaxPixels:o,lineWidthUnits:a.iI[d],lineWidthScale:u,lineWidthMinPixels:h,lineWidthMaxPixels:p}).draw()}_getModel(t){return new l.Z(t,{...this.getShaders(),id:this.props.id,geometry:new c.Z({drawMode:6,vertexCount:4,attributes:{positions:{size:3,value:new Float32Array([-1,-1,0,1,-1,0,1,1,0,-1,1,0])}}}),isInstanced:!0})}}(0,n.Z)(h,"defaultProps",u),(0,n.Z)(h,"layerName","ScatterplotLayer")},9890:(t,e,i)=>{i.d(e,{Fv:()=>p,Gd:()=>d,k8:()=>c,mD:()=>g});var n=i(9187),o=i.n(n),s=i(5215);const r=s.wG.CLOCKWISE,a=s.wG.COUNTER_CLOCKWISE,l={isClosed:!0};function c(t){return"positions"in t?t.positions:t}function d(t){return"holeIndices"in t?t.holeIndices:null}function u(t,e,i,n,o){let r=e;const a=i.length;for(let e=0;e<a;e++)for(let o=0;o<n;o++)t[r++]=i[e][o]||0;if(!function(t){const e=t[0],i=t[t.length-1];return e[0]===i[0]&&e[1]===i[1]&&e[2]===i[2]}(i))for(let e=0;e<n;e++)t[r++]=i[0][e]||0;return l.start=e,l.end=r,l.size=n,(0,s.Ny)(t,o,l),r}function h(t,e,i,n,o=0,r,a){const c=(r=r||i.length)-o;if(c<=0)return e;let d=e;for(let e=0;e<c;e++)t[d++]=i[o+e];if(!function(t,e,i,n){for(let o=0;o<e;o++)if(t[i+o]!==t[n-e+o])return!1;return!0}(i,n,o,r))for(let e=0;e<n;e++)t[d++]=i[o+e];return l.start=e,l.end=d,l.size=n,(0,s.Ny)(t,a,l),d}function p(t,e){!function(t){if(t=t&&t.positions||t,!Array.isArray(t)&&!ArrayBuffer.isView(t))throw new Error("invalid polygon")}(t);const i=[],n=[];if("positions"in t){const{positions:o,holeIndices:s}=t;if(s){let t=0;for(let l=0;l<=s.length;l++)t=h(i,t,o,e,s[l-1],s[l],0===l?r:a),n.push(t);return n.pop(),{positions:i,holeIndices:n}}t=o}if(!function(t){return Array.isArray(t[0])}(t))return h(i,0,t,e,0,i.length,r),i;if(!function(t){return t.length>=1&&t[0].length>=2&&Number.isFinite(t[0][0])}(t)){let o=0;for(const[s,l]of t.entries())o=u(i,o,l,e,0===s?r:a),n.push(o);return n.pop(),{positions:i,holeIndices:n}}return u(i,0,t,e,r),i}function g(t,e,i){let n=d(t);n&&(n=n.map((t=>t/e)));let s=c(t);if(i){const t=s.length;s=s.slice();const n=[];for(let o=0;o<t;o+=e){n[0]=s[o],n[1]=s[o+1];const t=i(n);s[o]=t[0],s[o+1]=t[1]}}return o()(s,n,e)}},1435:(t,e,i)=>{i.d(e,{Z:()=>S});var n=i(4572),o=i(4185),s=i(3844),r=i(7287),a=i(3117),l=i(4088),c=i(4211),d=i(6948),u=i(9769),h=i(3982),p=i(9890),g=i(8005),f=i(5215);class m extends g.Z{constructor(t){const{fp64:e,IndexType:i=Uint32Array}=t;super({...t,attributes:{positions:{size:3,type:e?Float64Array:Float32Array},vertexValid:{type:Uint8ClampedArray,size:1},indices:{type:i,size:1}}})}get(t){const{attributes:e}=this;return"indices"===t?e.indices&&e.indices.subarray(0,this.vertexCount):e[t]}updateGeometry(t){super.updateGeometry(t);const e=this.buffers.indices;if(e)this.vertexCount=(e.value||e).length;else if(this.data&&!this.getGeometry)throw new Error("missing indices buffer")}normalizeGeometry(t){if(this.normalize){const e=p.Fv(t,this.positionSize);return this.opts.resolution?(0,f.WZ)(p.k8(e),p.Gd(e),{size:this.positionSize,gridResolution:this.opts.resolution,edgeTypes:!0}):this.opts.wrapLongitude?(0,f.GU)(p.k8(e),p.Gd(e),{size:this.positionSize,maxLatitude:86,edgeTypes:!0}):e}return t}getGeometrySize(t){if(v(t)){let e=0;for(const i of t)e+=this.getGeometrySize(i);return e}return p.k8(t).length/this.positionSize}getGeometryFromBuffer(t){return this.normalize||!this.buffers.indices?super.getGeometryFromBuffer(t):null}updateGeometryAttributes(t,e){if(t&&v(t))for(const i of t){const t=this.getGeometrySize(i);e.geometrySize=t,this.updateGeometryAttributes(i,e),e.vertexStart+=t,e.indexStart=this.indexStarts[e.geometryIndex+1]}else this._updateIndices(t,e),this._updatePositions(t,e),this._updateVertexValid(t,e)}_updateIndices(t,{geometryIndex:e,vertexStart:i,indexStart:n}){const{attributes:o,indexStarts:s,typedArrayManager:r}=this;let a=o.indices;if(!a||!t)return;let l=n;const c=p.mD(t,this.positionSize,this.opts.preproject);a=r.allocate(a,n+c.length,{copy:!0});for(let t=0;t<c.length;t++)a[l++]=c[t]+i;s[e+1]=n+c.length,o.indices=a}_updatePositions(t,{vertexStart:e,geometrySize:i}){const{attributes:{positions:n},positionSize:o}=this;if(!n||!t)return;const s=p.k8(t);for(let t=e,r=0;r<i;t++,r++){const e=s[r*o],i=s[r*o+1],a=o>2?s[r*o+2]:0;n[3*t]=e,n[3*t+1]=i,n[3*t+2]=a}}_updateVertexValid(t,{vertexStart:e,geometrySize:i}){const{positionSize:n}=this,o=this.attributes.vertexValid,s=t&&p.Gd(t);if(t&&t.edgeTypes?o.set(t.edgeTypes,e):o.fill(1,e,e+i),s)for(let t=0;t<s.length;t++)o[e+s[t]/n-1]=0;o[e+i-1]=0}}function v(t){return Array.isArray(t)&&t.length>0&&!Number.isFinite(t[0])}const y="\nattribute vec2 vertexPositions;\nattribute float vertexValid;\n\nuniform bool extruded;\nuniform bool isWireframe;\nuniform float elevationScale;\nuniform float opacity;\n\nvarying vec4 vColor;\n\nstruct PolygonProps {\n  vec4 fillColors;\n  vec4 lineColors;\n  vec3 positions;\n  vec3 nextPositions;\n  vec3 pickingColors;\n  vec3 positions64Low;\n  vec3 nextPositions64Low;\n  float elevations;\n};\n\nvec3 project_offset_normal(vec3 vector) {\n  if (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT ||\n    project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT_OFFSETS) {\n    // normals generated by the polygon tesselator are in lnglat offsets instead of meters\n    return normalize(vector * project_uCommonUnitsPerWorldUnit);\n  }\n  return project_normal(vector);\n}\n\nvoid calculatePosition(PolygonProps props) {\n#ifdef IS_SIDE_VERTEX\n  if(vertexValid < 0.5){\n    gl_Position = vec4(0.);\n    return;\n  }\n#endif\n\n  vec3 pos;\n  vec3 pos64Low;\n  vec3 normal;\n  vec4 colors = isWireframe ? props.lineColors : props.fillColors;\n\n  geometry.worldPosition = props.positions;\n  geometry.worldPositionAlt = props.nextPositions;\n  geometry.pickingColor = props.pickingColors;\n\n#ifdef IS_SIDE_VERTEX\n  pos = mix(props.positions, props.nextPositions, vertexPositions.x);\n  pos64Low = mix(props.positions64Low, props.nextPositions64Low, vertexPositions.x);\n#else\n  pos = props.positions;\n  pos64Low = props.positions64Low;\n#endif\n\n  if (extruded) {\n    pos.z += props.elevations * vertexPositions.y * elevationScale;\n  }\n  gl_Position = project_position_to_clipspace(pos, pos64Low, vec3(0.), geometry.position);\n\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  if (extruded) {\n  #ifdef IS_SIDE_VERTEX\n    normal = vec3(\n      props.positions.y - props.nextPositions.y + (props.positions64Low.y - props.nextPositions64Low.y),\n      props.nextPositions.x - props.positions.x + (props.nextPositions64Low.x - props.positions64Low.x),\n      0.0);\n    normal = project_offset_normal(normal);\n  #else\n    normal = project_normal(vec3(0.0, 0.0, 1.0));\n  #endif\n    geometry.normal = normal;\n    vec3 lightColor = lighting_getLightColor(colors.rgb, project_uCameraPosition, geometry.position.xyz, normal);\n    vColor = vec4(lightColor, colors.a * opacity);\n  } else {\n    vColor = vec4(colors.rgb, colors.a * opacity);\n  }\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n",_="#define SHADER_NAME solid-polygon-layer-vertex-shader\n\nattribute vec3 positions;\nattribute vec3 positions64Low;\nattribute float elevations;\nattribute vec4 fillColors;\nattribute vec4 lineColors;\nattribute vec3 pickingColors;\n\n".concat(y,"\n\nvoid main(void) {\n  PolygonProps props;\n\n  props.positions = positions;\n  props.positions64Low = positions64Low;\n  props.elevations = elevations;\n  props.fillColors = fillColors;\n  props.lineColors = lineColors;\n  props.pickingColors = pickingColors;\n\n  calculatePosition(props);\n}\n"),x="#define SHADER_NAME solid-polygon-layer-vertex-shader-side\n#define IS_SIDE_VERTEX\n\n\nattribute vec3 instancePositions;\nattribute vec3 nextPositions;\nattribute vec3 instancePositions64Low;\nattribute vec3 nextPositions64Low;\nattribute float instanceElevations;\nattribute vec4 instanceFillColors;\nattribute vec4 instanceLineColors;\nattribute vec3 instancePickingColors;\n\n".concat(y,"\n\nvoid main(void) {\n  PolygonProps props;\n\n  #if RING_WINDING_ORDER_CW == 1\n    props.positions = instancePositions;\n    props.positions64Low = instancePositions64Low;\n    props.nextPositions = nextPositions;\n    props.nextPositions64Low = nextPositions64Low;\n  #else\n    props.positions = nextPositions;\n    props.positions64Low = nextPositions64Low;\n    props.nextPositions = instancePositions;\n    props.nextPositions64Low = instancePositions64Low;\n  #endif\n  props.elevations = instanceElevations;\n  props.fillColors = instanceFillColors;\n  props.lineColors = instanceLineColors;\n  props.pickingColors = instancePickingColors;\n\n  calculatePosition(props);\n}\n"),w=[0,0,0,255],P={filled:!0,extruded:!1,wireframe:!1,_normalize:!0,_windingOrder:"CW",elevationScale:{type:"number",min:0,value:1},getPolygon:{type:"accessor",value:t=>t.polygon},getElevation:{type:"accessor",value:1e3},getFillColor:{type:"accessor",value:w},getLineColor:{type:"accessor",value:w},material:!0},b={enter:(t,e)=>e.length?e.subarray(e.length-t.length):t};class S extends o.Z{constructor(...t){super(...t),(0,n.Z)(this,"state",void 0)}getShaders(t){return super.getShaders({vs:"top"===t?_:x,fs:"#define SHADER_NAME solid-polygon-layer-fragment-shader\n\nprecision highp float;\n\nvarying vec4 vColor;\n\nvoid main(void) {\n  gl_FragColor = vColor;\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",defines:{RING_WINDING_ORDER_CW:this.props._normalize||"CCW"!==this.props._windingOrder?1:0},modules:[s.Z,r.N,a.Z]})}get wrapLongitude(){return!1}initializeState(){const{gl:t,viewport:e}=this.context;let{coordinateSystem:i}=this.props;e.isGeospatial&&i===l.Df.DEFAULT&&(i=l.Df.LNGLAT),this.setState({numInstances:0,polygonTesselator:new m({preproject:i===l.Df.LNGLAT&&e.projectFlat.bind(e),fp64:this.use64bitPositions(),IndexType:!t||(0,c.ag)(t,d.h.ELEMENT_INDEX_UINT32)?Uint32Array:Uint16Array})});const n=this.getAttributeManager(),o=!0;n.remove(["instancePickingColors"]),n.add({indices:{size:1,isIndexed:!0,update:this.calculateIndices,noAlloc:o},positions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:b,accessor:"getPolygon",update:this.calculatePositions,noAlloc:o,shaderAttributes:{positions:{vertexOffset:0,divisor:0},instancePositions:{vertexOffset:0,divisor:1},nextPositions:{vertexOffset:1,divisor:1}}},vertexValid:{size:1,divisor:1,type:5121,update:this.calculateVertexValid,noAlloc:o},elevations:{size:1,transition:b,accessor:"getElevation",shaderAttributes:{elevations:{divisor:0},instanceElevations:{divisor:1}}},fillColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,transition:b,accessor:"getFillColor",defaultValue:w,shaderAttributes:{fillColors:{divisor:0},instanceFillColors:{divisor:1}}},lineColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,transition:b,accessor:"getLineColor",defaultValue:w,shaderAttributes:{lineColors:{divisor:0},instanceLineColors:{divisor:1}}},pickingColors:{size:3,type:5121,accessor:(t,{index:e,target:i})=>this.encodePickingColor(t&&t.__source?t.__source.index:e,i),shaderAttributes:{pickingColors:{divisor:0},instancePickingColors:{divisor:1}}}})}getPickingInfo(t){const e=super.getPickingInfo(t),{index:i}=e,{data:n}=this.props;return n[0]&&n[0].__source&&(e.object=n.find((t=>t.__source.index===i))),e}disablePickingIndex(t){const{data:e}=this.props;if(e[0]&&e[0].__source)for(let i=0;i<e.length;i++)e[i].__source.index===t&&this._disablePickingIndex(i);else this._disablePickingIndex(t)}draw({uniforms:t}){const{extruded:e,filled:i,wireframe:n,elevationScale:o}=this.props,{topModel:s,sideModel:r,polygonTesselator:a}=this.state,l={...t,extruded:Boolean(e),elevationScale:o};r&&(r.setInstanceCount(a.instanceCount-1),r.setUniforms(l),n&&(r.setDrawMode(3),r.setUniforms({isWireframe:!0}).draw()),i&&(r.setDrawMode(6),r.setUniforms({isWireframe:!1}).draw())),s&&(s.setVertexCount(a.vertexCount),s.setUniforms(l).draw())}updateState(t){super.updateState(t),this.updateGeometry(t);const{props:e,oldProps:i,changeFlags:n}=t,o=this.getAttributeManager();var s;(n.extensionsChanged||e.filled!==i.filled||e.extruded!==i.extruded)&&(null===(s=this.state.models)||void 0===s||s.forEach((t=>t.delete())),this.setState(this._getModels(this.context.gl)),o.invalidateAll())}updateGeometry({props:t,oldProps:e,changeFlags:i}){if(i.dataChanged||i.updateTriggersChanged&&(i.updateTriggersChanged.all||i.updateTriggersChanged.getPolygon)){const{polygonTesselator:e}=this.state,n=t.data.attributes||{};e.updateGeometry({data:t.data,normalize:t._normalize,geometryBuffer:n.getPolygon,buffers:n,getGeometry:t.getPolygon,positionFormat:t.positionFormat,wrapLongitude:t.wrapLongitude,resolution:this.context.viewport.resolution,fp64:this.use64bitPositions(),dataChanged:i.dataChanged}),this.setState({numInstances:e.instanceCount,startIndices:e.vertexStarts}),i.dataChanged||this.getAttributeManager().invalidateAll()}}_getModels(t){const{id:e,filled:i,extruded:n}=this.props;let o,s;if(i){const i=this.getShaders("top");i.defines.NON_INSTANCED_MODEL=1,o=new u.Z(t,{...i,id:"".concat(e,"-top"),drawMode:4,attributes:{vertexPositions:new Float32Array([0,1])},uniforms:{isWireframe:!1,isSideVertex:!1},vertexCount:0,isIndexed:!0})}return n&&(s=new u.Z(t,{...this.getShaders("side"),id:"".concat(e,"-side"),geometry:new h.Z({drawMode:1,vertexCount:4,attributes:{vertexPositions:{size:2,value:new Float32Array([1,0,0,0,0,1,1,1])}}}),instanceCount:0,isInstanced:1}),s.userData.excludeAttributes={indices:!0}),{models:[s,o].filter(Boolean),topModel:o,sideModel:s}}calculateIndices(t){const{polygonTesselator:e}=this.state;t.startIndices=e.indexStarts,t.value=e.get("indices")}calculatePositions(t){const{polygonTesselator:e}=this.state;t.startIndices=e.vertexStarts,t.value=e.get("positions")}calculateVertexValid(t){t.value=this.state.polygonTesselator.get("vertexValid")}}(0,n.Z)(S,"defaultProps",P),(0,n.Z)(S,"layerName","SolidPolygonLayer")},1290:(t,e,i)=>{i.d(e,{Z:()=>a});var n=i(4572),o=i(744),s=i(6867);const r=[];class a extends s.Z{constructor(...t){super(...t),(0,n.Z)(this,"state",void 0)}getShaders(){return{...super.getShaders(),fs:"#define SHADER_NAME multi-icon-layer-fragment-shader\n\nprecision highp float;\n\nuniform float opacity;\nuniform sampler2D iconsTexture;\nuniform float gamma;\nuniform bool sdf;\nuniform float alphaCutoff;\nuniform float buffer;\nuniform float outlineBuffer;\nuniform vec4 outlineColor;\n\nvarying vec4 vColor;\nvarying vec2 vTextureCoords;\nvarying vec2 uv;\n\nvoid main(void) {\n  geometry.uv = uv;\n\n  if (!picking_uActive) {\n    float alpha = texture2D(iconsTexture, vTextureCoords).a;\n    vec4 color = vColor;\n\n    // if enable sdf (signed distance fields)\n    if (sdf) {\n      float distance = alpha;\n      alpha = smoothstep(buffer - gamma, buffer + gamma, distance);\n\n      if (outlineBuffer > 0.0) {\n        float inFill = alpha;\n        float inBorder = smoothstep(outlineBuffer - gamma, outlineBuffer + gamma, distance);\n        color = mix(outlineColor, vColor, inFill);\n        alpha = inBorder;\n      }\n    }\n\n    // Take the global opacity and the alpha from color into account for the alpha component\n    float a = alpha * color.a;\n    \n    if (a < alphaCutoff) {\n      discard;\n    }\n\n    gl_FragColor = vec4(color.rgb, a * opacity);\n  }\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n"}}initializeState(){super.initializeState();this.getAttributeManager().addInstanced({instanceOffsets:{size:2,accessor:"getIconOffsets"},instancePickingColors:{type:5121,size:3,accessor:(t,{index:e,target:i})=>this.encodePickingColor(e,i)}})}updateState(t){super.updateState(t);const{props:e,oldProps:i}=t;let{outlineColor:n}=e;n!==i.outlineColor&&(n=n.map((t=>t/255)),n[3]=Number.isFinite(n[3])?n[3]:1,this.setState({outlineColor:n})),!e.sdf&&e.outlineWidth&&o.Z.warn("".concat(this.id,": fontSettings.sdf is required to render outline"))()}draw(t){const{sdf:e,smoothing:i,outlineWidth:n}=this.props,{outlineColor:o}=this.state;t.uniforms={...t.uniforms,buffer:.75,outlineBuffer:n?Math.max(i,.75*(1-n)):-1,gamma:i,sdf:Boolean(e),outlineColor:o},super.draw(t)}getInstanceOffset(t){return t?Array.from(t).flatMap((t=>super.getInstanceOffset(t))):r}getInstanceColorMode(t){return 1}getInstanceIconFrame(t){return t?Array.from(t).flatMap((t=>super.getInstanceIconFrame(t))):r}}(0,n.Z)(a,"defaultProps",{getIconOffsets:{type:"accessor",value:t=>t.offsets},alphaCutoff:.001,smoothing:.1,outlineWidth:0,outlineColor:{type:"color",value:[0,0,0,255]}}),(0,n.Z)(a,"layerName","MultiIconLayer")},1130:(t,e,i)=>{i.d(e,{Z:()=>u});var n=i(4572),o=i(4185),s=i(3844),r=i(3117),a=i(4088),l=i(9769),c=i(3982);const d={billboard:!0,sizeScale:1,sizeUnits:"pixels",sizeMinPixels:0,sizeMaxPixels:Number.MAX_SAFE_INTEGER,padding:{type:"array",value:[0,0,0,0]},getPosition:{type:"accessor",value:t=>t.position},getSize:{type:"accessor",value:1},getAngle:{type:"accessor",value:0},getPixelOffset:{type:"accessor",value:[0,0]},getBoundingRect:{type:"accessor",value:[0,0,0,0]},getFillColor:{type:"accessor",value:[0,0,0,255]},getLineColor:{type:"accessor",value:[0,0,0,255]},getLineWidth:{type:"accessor",value:1}};class u extends o.Z{constructor(...t){super(...t),(0,n.Z)(this,"state",void 0)}getShaders(){return super.getShaders({vs:"#define SHADER_NAME text-background-layer-vertex-shader\n\nattribute vec2 positions;\n\nattribute vec3 instancePositions;\nattribute vec3 instancePositions64Low;\nattribute vec4 instanceRects;\nattribute float instanceSizes;\nattribute float instanceAngles;\nattribute vec2 instancePixelOffsets;\nattribute float instanceLineWidths;\nattribute vec4 instanceFillColors;\nattribute vec4 instanceLineColors;\nattribute vec3 instancePickingColors;\n\nuniform bool billboard;\nuniform float opacity;\nuniform float sizeScale;\nuniform float sizeMinPixels;\nuniform float sizeMaxPixels;\nuniform vec4 padding;\nuniform int sizeUnits;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying float vLineWidth;\nvarying vec2 uv;\nvarying vec2 dimensions;\n\nvec2 rotate_by_angle(vec2 vertex, float angle) {\n  float angle_radian = radians(angle);\n  float cos_angle = cos(angle_radian);\n  float sin_angle = sin(angle_radian);\n  mat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);\n  return rotationMatrix * vertex;\n}\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n  geometry.uv = positions;\n  geometry.pickingColor = instancePickingColors;\n  uv = positions;\n  vLineWidth = instanceLineWidths;\n\n  // convert size in meters to pixels, then scaled and clamp\n\n  // project meters to pixels and clamp to limits\n  float sizePixels = clamp(\n    project_size_to_pixel(instanceSizes * sizeScale, sizeUnits),\n    sizeMinPixels, sizeMaxPixels\n  );\n\n  dimensions = instanceRects.zw * sizePixels + padding.xy + padding.zw;\n\n  vec2 pixelOffset = (positions * instanceRects.zw + instanceRects.xy) * sizePixels + mix(-padding.xy, padding.zw, positions);\n  pixelOffset = rotate_by_angle(pixelOffset, instanceAngles);\n  pixelOffset += instancePixelOffsets;\n  pixelOffset.y *= -1.0;\n\n  if (billboard)  {\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\n    vec3 offset = vec3(pixelOffset, 0.0);\n    DECKGL_FILTER_SIZE(offset, geometry);\n    gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\n  } else {\n    vec3 offset_common = vec3(project_pixel_size(pixelOffset), 0.0);\n    DECKGL_FILTER_SIZE(offset_common, geometry);\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset_common, geometry.position);\n  }\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  // Apply opacity to instance color, or return instance picking color\n  vFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * opacity);\n  DECKGL_FILTER_COLOR(vFillColor, geometry);\n  vLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * opacity);\n  DECKGL_FILTER_COLOR(vLineColor, geometry);\n}\n",fs:"#define SHADER_NAME text-background-layer-fragment-shader\n\nprecision highp float;\n\nuniform bool stroked;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying float vLineWidth;\nvarying vec2 uv;\nvarying vec2 dimensions;\n\nvoid main(void) {\n  geometry.uv = uv;\n\n  vec2 pixelPosition = uv * dimensions;\n  if (stroked) {\n    float distToEdge = min(\n      min(pixelPosition.x, dimensions.x - pixelPosition.x),\n      min(pixelPosition.y, dimensions.y - pixelPosition.y)\n    );\n    float isBorder = smoothedge(distToEdge, vLineWidth);\n    gl_FragColor = mix(vFillColor, vLineColor, isBorder);\n  } else {\n    gl_FragColor = vFillColor;\n  }\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",modules:[s.Z,r.Z]})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceSizes:{size:1,transition:!0,accessor:"getSize",defaultValue:1},instanceAngles:{size:1,transition:!0,accessor:"getAngle"},instanceRects:{size:4,accessor:"getBoundingRect"},instancePixelOffsets:{size:2,transition:!0,accessor:"getPixelOffset"},instanceFillColors:{size:4,transition:!0,normalized:!0,type:5121,accessor:"getFillColor",defaultValue:[0,0,0,255]},instanceLineColors:{size:4,transition:!0,normalized:!0,type:5121,accessor:"getLineColor",defaultValue:[0,0,0,255]},instanceLineWidths:{size:1,transition:!0,accessor:"getLineWidth",defaultValue:1}})}updateState(t){super.updateState(t);const{changeFlags:e}=t;if(e.extensionsChanged){var i;const{gl:t}=this.context;null===(i=this.state.model)||void 0===i||i.delete(),this.state.model=this._getModel(t),this.getAttributeManager().invalidateAll()}}draw({uniforms:t}){const{billboard:e,sizeScale:i,sizeUnits:n,sizeMinPixels:o,sizeMaxPixels:s,getLineWidth:r}=this.props;let{padding:l}=this.props;l.length<4&&(l=[l[0],l[1],l[0],l[1]]),this.state.model.setUniforms(t).setUniforms({billboard:e,stroked:Boolean(r),padding:l,sizeUnits:a.iI[n],sizeScale:i,sizeMinPixels:o,sizeMaxPixels:s}).draw()}_getModel(t){return new l.Z(t,{...this.getShaders(),id:this.props.id,geometry:new c.Z({drawMode:6,vertexCount:4,attributes:{positions:{size:2,value:new Float32Array([0,0,1,0,1,1,0,1])}}}),isInstanced:!0})}}(0,n.Z)(u,"defaultProps",d),(0,n.Z)(u,"layerName","TextBackgroundLayer")},5555:(t,e,i)=>{i.d(e,{Z:()=>T});var n=i(4572),o=i(8918),s=i(8550),r=i(1290),a=i(9296),l=i.n(a),c=i(744);const d=[];function u(t,e,i,n){let o=0;for(let r=e;r<i;r++){var s;o+=(null===(s=n[t[r]])||void 0===s?void 0:s.width)||0}return o}function h(t,e,i,n,o,s){let r=e,a=0;for(let l=e;l<i;l++){const e=u(t,l,l+1,o);a+e>n&&(r<l&&s.push(l),r=l,a=0),a+=e}return a}function p(t,e,i,n,o=0,s){void 0===s&&(s=t.length);const r=[];return"break-all"===e?h(t,o,s,i,n,r):function(t,e,i,n,o,s){let r=e,a=e,l=e,c=0;for(let d=e;d<i;d++)if(" "===t[d]?l=d+1:" "!==t[d+1]&&d+1!==i||(l=d+1),l>a){let e=u(t,a,l,o);c+e>n&&(r<a&&(s.push(a),r=a,c=0),e>n&&(e=h(t,a,l,n,o,s),r=s[s.length-1])),a=l,c+=e}}(t,o,s,i,n,r),r}function g(t,e,i,n,o,s){let r=0,a=0;for(let s=e;s<i;s++){const e=t[s],i=n[e];i?(a||(a=i.height),o[s]=r+i.width/2,r+=i.width):(c.Z.warn("Missing character: ".concat(e," (").concat(e.codePointAt(0),")"))(),o[s]=r,r+=32)}s[0]=r,s[1]=a}function f(t,e,i,n,o){const s=Array.from(t),r=s.length,a=new Array(r),l=new Array(r),c=new Array(r),u=("break-word"===i||"break-all"===i)&&isFinite(n)&&n>0,h=[0,0],f=[0,0];let m=0,v=0,y=0;for(let t=0;t<=r;t++){const _=s[t];if("\n"!==_&&t!==r||(y=t),y>v){const t=u?p(s,i,n,o,v,y):d;for(let i=0;i<=t.length;i++){const n=0===i?v:t[i-1],r=i<t.length?t[i]:y;g(s,n,r,o,a,f);for(let t=n;t<r;t++)l[t]=m+f[1]/2,c[t]=f[0];m+=f[1]*e,h[0]=Math.max(h[0],f[0])}v=y}"\n"===_&&(a[v]=0,l[v]=0,c[v]=0,v++)}return h[1]=m,{x:a,y:l,rowWidth:c,size:h}}class m{constructor(t=5){(0,n.Z)(this,"limit",void 0),(0,n.Z)(this,"_cache",{}),(0,n.Z)(this,"_order",[]),this.limit=t}get(t){const e=this._cache[t];return e&&(this._deleteOrder(t),this._appendOrder(t)),e}set(t,e){this._cache[t]?(this.delete(t),this._cache[t]=e,this._appendOrder(t)):(Object.keys(this._cache).length===this.limit&&this.delete(this._order[0]),this._cache[t]=e,this._appendOrder(t))}delete(t){this._cache[t]&&(delete this._cache[t],this._deleteOrder(t))}_deleteOrder(t){const e=this._order.indexOf(t);e>=0&&this._order.splice(e,1)}_appendOrder(t){this._order.push(t)}}const v={fontFamily:"Monaco, monospace",fontWeight:"normal",characterSet:function(){const t=[];for(let e=32;e<128;e++)t.push(String.fromCharCode(e));return t}(),fontSize:64,buffer:4,sdf:!1,cutoff:.25,radius:12,smoothing:.1};let y=new m(3);function _(t,e){for(let i=0;i<t.length;i++)e.data[4*i+3]=t[i]}function x(t,e,i,n){t.font="".concat(n," ").concat(i,"px ").concat(e),t.fillStyle="#000",t.textBaseline="alphabetic",t.textAlign="left"}class w{constructor(){(0,n.Z)(this,"props",{...v}),(0,n.Z)(this,"_key",void 0),(0,n.Z)(this,"_atlas",void 0)}get texture(){return this._atlas}get mapping(){return this._atlas&&this._atlas.mapping}get scale(){return 1.2}setProps(t={}){Object.assign(this.props,t);const e=this._key;this._key=this._getKey();const i=function(t,e){let i;i="string"==typeof e?new Set(Array.from(e)):new Set(e);const n=y.get(t);if(!n)return i;for(const t in n.mapping)i.has(t)&&i.delete(t);return i}(this._key,this.props.characterSet),n=y.get(this._key);if(n&&0===i.size)return void(this._key!==e&&(this._atlas=n));const o=this._generateFontAtlas(this._key,i,n);this._atlas=o,y.set(this._key,o)}_generateFontAtlas(t,e,i){const{fontFamily:n,fontWeight:o,fontSize:s,buffer:r,sdf:a,radius:c,cutoff:d}=this.props;let u=i&&i.data;u||(u=document.createElement("canvas"),u.width=1024);const h=u.getContext("2d");x(h,n,s,o);const{mapping:p,canvasHeight:g,xOffset:f,yOffset:m}=function({characterSet:t,getFontWidth:e,fontHeight:i,buffer:n,maxCanvasWidth:o,mapping:s={},xOffset:r=0,yOffset:a=0}){let l=0,c=r;for(const r of t)if(!s[r]){const t=e(r);c+t+2*n>o&&(c=0,l++),s[r]={x:c+n,y:a+l*(i+2*n)+n,width:t,height:i},c+=t+2*n}const d=i+2*n;return{mapping:s,xOffset:c,yOffset:a+l*d,canvasHeight:(u=a+(l+1)*d,Math.pow(2,Math.ceil(Math.log2(u))))};var u}({getFontWidth:t=>h.measureText(t).width,fontHeight:1.2*s,buffer:r,characterSet:e,maxCanvasWidth:1024,...i&&{mapping:i.mapping,xOffset:i.xOffset,yOffset:i.yOffset}});if(u.height!==g){const t=h.getImageData(0,0,u.width,u.height);u.height=g,h.putImageData(t,0,0)}if(x(h,n,s,o),a){const t=new(l())(s,r,c,d,n,o),i=h.getImageData(0,0,t.size,t.size);for(const n of e)_(t.draw(n),i),h.putImageData(i,p[n].x-r,p[n].y+r)}else for(const t of e)h.fillText(t,p[t].x,p[t].y+.9*s);return{xOffset:f,yOffset:m,mapping:p,data:u,width:u.width,height:u.height}}_getKey(){const{fontFamily:t,fontWeight:e,fontSize:i,buffer:n,sdf:o,radius:s,cutoff:r}=this.props;return o?"".concat(t," ").concat(e," ").concat(i," ").concat(n," ").concat(s," ").concat(r):"".concat(t," ").concat(e," ").concat(i," ").concat(n)}}var P=i(1130);const b={start:1,middle:0,end:-1},S={top:1,center:0,bottom:-1},C=[0,0,0,255],M={billboard:!0,sizeScale:1,sizeUnits:"pixels",sizeMinPixels:0,sizeMaxPixels:Number.MAX_SAFE_INTEGER,background:!1,getBackgroundColor:{type:"accessor",value:[255,255,255,255]},getBorderColor:{type:"accessor",value:C},getBorderWidth:{type:"accessor",value:0},backgroundPadding:{type:"array",value:[0,0,0,0]},characterSet:{type:"object",value:v.characterSet},fontFamily:v.fontFamily,fontWeight:v.fontWeight,lineHeight:1,outlineWidth:{type:"number",value:0,min:0},outlineColor:{type:"color",value:C},fontSettings:{},wordBreak:"break-word",maxWidth:{type:"number",value:-1},getText:{type:"accessor",value:t=>t.text},getPosition:{type:"accessor",value:t=>t.position},getColor:{type:"accessor",value:C},getSize:{type:"accessor",value:32},getAngle:{type:"accessor",value:0},getTextAnchor:{type:"accessor",value:"middle"},getAlignmentBaseline:{type:"accessor",value:"center"},getPixelOffset:{type:"accessor",value:[0,0]},backgroundColor:{deprecatedFor:["background","getBackgroundColor"]}};class T extends o.Z{constructor(...t){super(...t),(0,n.Z)(this,"state",void 0),(0,n.Z)(this,"getBoundingRect",((t,e)=>{const i=this.state.fontAtlasManager.mapping,n=this.state.getText,{wordBreak:o,maxWidth:s,lineHeight:r,getTextAnchor:a,getAlignmentBaseline:l}=this.props,c=n(t,e)||"",{size:[d,u]}=f(c,r,o,s,i);return[(b["function"==typeof a?a(t,e):a]-1)*d/2,(S["function"==typeof l?l(t,e):l]-1)*u/2,d,u]})),(0,n.Z)(this,"getIconOffsets",((t,e)=>{const i=this.state.fontAtlasManager.mapping,n=this.state.getText,{wordBreak:o,maxWidth:s,lineHeight:r,getTextAnchor:a,getAlignmentBaseline:l}=this.props,c=n(t,e)||"",{x:d,y:u,rowWidth:h,size:[p,g]}=f(c,r,o,s,i),m=b["function"==typeof a?a(t,e):a],v=S["function"==typeof l?l(t,e):l],y=d.length,_=new Array(2*y);let x=0;for(let t=0;t<y;t++){const e=(1-m)*(p-h[t])/2;_[x++]=(m-1)*p/2+e+d[t],_[x++]=(v-1)*g/2+u[t]}return _}))}initializeState(){this.state={styleVersion:0,fontAtlasManager:new w}}updateState(t){const{props:e,oldProps:i,changeFlags:n}=t;(n.dataChanged||n.updateTriggersChanged&&(n.updateTriggersChanged.all||n.updateTriggersChanged.getText))&&this._updateText();(this._updateFontAtlas()||e.lineHeight!==i.lineHeight||e.wordBreak!==i.wordBreak||e.maxWidth!==i.maxWidth)&&this.setState({styleVersion:this.state.styleVersion+1})}getPickingInfo({info:t}){return t.object=t.index>=0?this.props.data[t.index]:null,t}_updateFontAtlas(){const{fontSettings:t,fontFamily:e,fontWeight:i}=this.props,{fontAtlasManager:n,characterSet:o}=this.state,s={...t,characterSet:o,fontFamily:e,fontWeight:i};if(!n.mapping)return n.setProps(s),!0;for(const t in s)if(s[t]!==n.props[t])return n.setProps(s),!0;return!1}_updateText(){var t;const{data:e,characterSet:i}=this.props,n=null===(t=e.attributes)||void 0===t?void 0:t.getText;let o,{getText:r}=this.props,a=e.startIndices;const l="auto"===i&&new Set;if(n&&a){const{texts:t,characterCount:i}=function({value:t,length:e,stride:i,offset:n,startIndices:o,characterSet:s}){const r=t.BYTES_PER_ELEMENT,a=i?i/r:1,l=n?n/r:0,c=o[e]||Math.ceil((t.length-l)/a),d=s&&new Set,u=new Array(e);let h=t;if(a>1||l>0){h=new(0,t.constructor)(c);for(let e=0;e<c;e++)h[e]=t[e*a+l]}for(let t=0;t<e;t++){const e=o[t],i=o[t+1]||c,n=h.subarray(e,i);u[t]=String.fromCodePoint.apply(null,n),d&&n.forEach(d.add,d)}if(d)for(const t of d)s.add(String.fromCodePoint(t));return{texts:u,characterCount:c}}({...ArrayBuffer.isView(n)?{value:n}:n,length:e.length,startIndices:a,characterSet:l});o=i,r=(e,{index:i})=>t[i]}else{const{iterable:t,objectInfo:i}=(0,s.jB)(e);a=[0],o=0;for(const e of t){i.index++;const t=Array.from(r(e,i)||"");l&&t.forEach(l.add,l),o+=t.length,a.push(o)}}this.setState({getText:r,startIndices:a,numInstances:o,characterSet:l||i})}renderLayers(){const{startIndices:t,numInstances:e,getText:i,fontAtlasManager:{scale:n,texture:o,mapping:s},styleVersion:a}=this.state,{data:l,_dataDiff:c,getPosition:d,getColor:u,getSize:h,getAngle:p,getPixelOffset:g,getBackgroundColor:f,getBorderColor:m,getBorderWidth:y,backgroundPadding:_,background:x,billboard:w,fontSettings:b,outlineWidth:S,outlineColor:C,sizeScale:M,sizeUnits:T,sizeMinPixels:L,sizeMaxPixels:A,transitions:Z,updateTriggers:E}=this.props,z=this.getSubLayerClass("characters",r.Z),I=this.getSubLayerClass("background",P.Z);return[x&&new I({getFillColor:f,getLineColor:m,getLineWidth:y,padding:_,getPosition:d,getSize:h,getAngle:p,getPixelOffset:g,billboard:w,sizeScale:M/this.state.fontAtlasManager.props.fontSize,sizeUnits:T,sizeMinPixels:L,sizeMaxPixels:A,transitions:Z&&{getPosition:Z.getPosition,getAngle:Z.getAngle,getSize:Z.getSize,getFillColor:Z.getBackgroundColor,getLineColor:Z.getBorderColor,getLineWidth:Z.getBorderWidth,getPixelOffset:Z.getPixelOffset}},this.getSubLayerProps({id:"background",updateTriggers:{getPosition:E.getPosition,getAngle:E.getAngle,getSize:E.getSize,getFillColor:E.getBackgroundColor,getLineColor:E.getBorderColor,getLineWidth:E.getBorderWidth,getPixelOffset:E.getPixelOffset,getBoundingRect:{getText:E.getText,getTextAnchor:E.getTextAnchor,getAlignmentBaseline:E.getAlignmentBaseline,styleVersion:a}}}),{data:l.attributes&&l.attributes.background?{length:l.length,attributes:l.attributes.background}:l,_dataDiff:c,autoHighlight:!1,getBoundingRect:this.getBoundingRect}),new z({sdf:b.sdf,smoothing:Number.isFinite(b.smoothing)?b.smoothing:v.smoothing,outlineWidth:S,outlineColor:C,iconAtlas:o,iconMapping:s,getPosition:d,getColor:u,getSize:h,getAngle:p,getPixelOffset:g,billboard:w,sizeScale:M*n,sizeUnits:T,sizeMinPixels:L*n,sizeMaxPixels:A*n,transitions:Z&&{getPosition:Z.getPosition,getAngle:Z.getAngle,getColor:Z.getColor,getSize:Z.getSize,getPixelOffset:Z.getPixelOffset}},this.getSubLayerProps({id:"characters",updateTriggers:{getIcon:E.getText,getPosition:E.getPosition,getAngle:E.getAngle,getColor:E.getColor,getSize:E.getSize,getPixelOffset:E.getPixelOffset,getIconOffsets:{getText:E.getText,getTextAnchor:E.getTextAnchor,getAlignmentBaseline:E.getAlignmentBaseline,styleVersion:a}}}),{data:l,_dataDiff:c,startIndices:t,numInstances:e,getIconOffsets:this.getIconOffsets,getIcon:i})]}static set fontAtlasCacheLimit(t){!function(t){c.Z.assert(Number.isFinite(t)&&t>=3,"Invalid cache limit"),y=new m(t)}(t)}}(0,n.Z)(T,"defaultProps",M),(0,n.Z)(T,"layerName","TextLayer")},8452:(t,e,i)=>{function n({data:t,getIndex:e,dataRange:i,replace:n}){const{startRow:o=0,endRow:s=1/0}=i,r=t.length;let a=r,l=r;for(let i=0;i<r;i++){const n=e(t[i]);if(a>i&&n>=o&&(a=i),n>=s){l=i;break}}let c=a;const d=l-a!==n.length?t.slice(l):void 0;for(let e=0;e<n.length;e++)t[c++]=n[e];if(d){for(let e=0;e<d.length;e++)t[c++]=d[e];t.length=c}return{startRow:a,endRow:a+n.length}}i.d(e,{b:()=>n})},1956:(t,e,i)=>{i.r(e),i.d(e,{ScenegraphLayer:()=>o.Z,SimpleMeshLayer:()=>n.Z});var n=i(3989),o=i(5547)},5547:(t,e,i)=>{i.d(e,{Z:()=>v});var n=i(4572),o=i(4185),s=i(3844),r=i(3117),a=i(744),l=i(9450),c=i(4080),d=i(4522),u=i(7397),h=i(7103);async function p(t){const e=[];return t.scenes.forEach((t=>{t.traverse((t=>{Object.values(t.model.getUniforms()).forEach((t=>{!1===t.loaded&&e.push(t)}))}))})),await async function(t){for(;t();)await new Promise((t=>requestAnimationFrame(t)))}((()=>e.some((t=>!t.loaded))))}var g=i(7805);const f=[255,255,255,255],m={scenegraph:{type:"object",value:null,async:!0},getScene:t=>t&&t.scenes?"object"==typeof t.scene?t.scene:t.scenes[t.scene||0]:t,getAnimator:t=>t&&t.animator,_animations:null,sizeScale:{type:"number",value:1,min:0},sizeMinPixels:{type:"number",min:0,value:0},sizeMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},getPosition:{type:"accessor",value:t=>t.position},getColor:{type:"accessor",value:f},_lighting:"flat",_imageBasedLightingEnvironment:null,getOrientation:{type:"accessor",value:[0,0,0]},getScale:{type:"accessor",value:[1,1,1]},getTranslation:{type:"accessor",value:[0,0,0]},getTransformMatrix:{type:"accessor",value:[]},loaders:[h.E]};class v extends o.Z{constructor(...t){super(...t),(0,n.Z)(this,"state",void 0)}getShaders(){const t=[s.Z,r.Z];return"pbr"===this.props._lighting&&t.push(c.b),{vs:"#version 300 es\n\n// Instance attributes\nin vec3 instancePositions;\nin vec3 instancePositions64Low;\nin vec4 instanceColors;\nin vec3 instancePickingColors;\nin mat3 instanceModelMatrix;\nin vec3 instanceTranslation;\n\n// Uniforms\nuniform float sizeScale;\nuniform float sizeMinPixels;\nuniform float sizeMaxPixels;\nuniform mat4 sceneModelMatrix;\nuniform bool composeModelMatrix;\n\n// Attributes\nin vec4 POSITION;\n\n#ifdef HAS_UV\n  in vec2 TEXCOORD_0;\n#endif\n\n#ifdef MODULE_PBR\n  #ifdef HAS_NORMALS\n    in vec4 NORMAL;\n  #endif\n#endif\n\n// Varying\nout vec4 vColor;\n\n// MODULE_PBR contains all the varying definitions needed\n#ifndef MODULE_PBR\n  #ifdef HAS_UV\n    out vec2 vTEXCOORD_0;\n  #endif\n#endif\n\n// Main\nvoid main(void) {\n  #if defined(HAS_UV) && !defined(MODULE_PBR)\n    vTEXCOORD_0 = TEXCOORD_0;\n    geometry.uv = vTEXCOORD_0;\n  #endif\n\n  geometry.worldPosition = instancePositions;\n  geometry.pickingColor = instancePickingColors;\n\n  vec3 normal = vec3(0.0, 0.0, 1.0);\n  #ifdef MODULE_PBR\n    #ifdef HAS_NORMALS\n      normal = instanceModelMatrix * (sceneModelMatrix * vec4(NORMAL.xyz, 0.0)).xyz;\n    #endif\n  #endif\n\n  float originalSize = project_size_to_pixel(sizeScale);\n  float clampedSize = clamp(originalSize, sizeMinPixels, sizeMaxPixels);\n\n  vec3 pos = (instanceModelMatrix * (sceneModelMatrix * POSITION).xyz) * sizeScale * (clampedSize / originalSize) + instanceTranslation;\n  if(composeModelMatrix) {\n    DECKGL_FILTER_SIZE(pos, geometry);\n    // using instancePositions as world coordinates\n    // when using globe mode, this branch does not re-orient the model to align with the surface of the earth\n    // call project_normal before setting position to avoid rotation\n    geometry.normal = project_normal(normal);\n    gl_Position = project_position_to_clipspace(pos + instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\n  }\n  else {\n    pos = project_size(pos);\n    DECKGL_FILTER_SIZE(pos, geometry);\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, pos, geometry.position);\n    geometry.normal = project_normal(normal);\n  }\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  #ifdef MODULE_PBR\n    // set PBR data\n    pbr_vPosition = geometry.position.xyz;\n    #ifdef HAS_NORMALS\n      pbr_vNormal = geometry.normal;\n    #endif\n\n    #ifdef HAS_UV\n      pbr_vUV = TEXCOORD_0;\n    #else\n      pbr_vUV = vec2(0., 0.);\n    #endif\n    geometry.uv = pbr_vUV;\n  #endif\n\n  vColor = instanceColors;\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#version 300 es\n\n// Uniforms\nuniform float opacity;\n\n// Varying\nin vec4 vColor;\n\nout vec4 fragmentColor;\n\n// MODULE_PBR contains all the varying definitions needed\n#ifndef MODULE_PBR\n  #if defined(HAS_UV) && defined(HAS_BASECOLORMAP)\n    in vec2 vTEXCOORD_0;\n    uniform sampler2D u_BaseColorSampler;\n  #endif\n#endif\n\nvoid main(void) {\n  #ifdef MODULE_PBR\n    fragmentColor = vColor * pbr_filterColor(vec4(0));\n    geometry.uv = pbr_vUV;\n  #else\n    #if defined(HAS_UV) && defined(HAS_BASECOLORMAP)\n      fragmentColor = vColor * texture2D(u_BaseColorSampler, vTEXCOORD_0);\n      geometry.uv = vTEXCOORD_0;\n    #else\n      fragmentColor = vColor;\n    #endif\n  #endif\n\n  fragmentColor.a *= opacity;\n  DECKGL_FILTER_COLOR(fragmentColor, geometry);\n}\n",modules:t}}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:5130,fp64:this.use64bitPositions(),accessor:"getPosition",transition:!0},instanceColors:{type:5121,size:this.props.colorFormat.length,accessor:"getColor",normalized:!0,defaultValue:f,transition:!0},instanceModelMatrix:g.P})}updateState(t){super.updateState(t);const{props:e,oldProps:i}=t;e.scenegraph!==i.scenegraph?this._updateScenegraph():e._animations!==i._animations&&this._applyAnimationsProp(this.state.scenegraph,this.state.animator,e._animations)}finalizeState(t){super.finalizeState(t),this._deleteScenegraph()}_updateScenegraph(){const t=this.props,{gl:e}=this.context;let i=null;if(t.scenegraph instanceof d.Z)i={scenes:[t.scenegraph]};else if(t.scenegraph&&!t.scenegraph.gltf){const n=t.scenegraph,o=(0,u.Z)(e,n,this._getModelOptions());i={gltf:n,...o},p(o).then((()=>this.setNeedsRedraw()))}else t.scenegraph&&(a.Z.deprecated("ScenegraphLayer.props.scenegraph","Use GLTFLoader instead of GLTFScenegraphLoader")(),i=t.scenegraph);const n={layer:this,gl:e},o=t.getScene(i,n),s=t.getAnimator(i,n);o instanceof d.Z?(this._deleteScenegraph(),this._applyAllAttributes(o),this._applyAnimationsProp(o,s,t._animations),this.setState({scenegraph:o,animator:s})):null!==o&&a.Z.warn("invalid scenegraph:",o)()}_applyAllAttributes(t){if(this.state.attributesAvailable){const e=this.getAttributeManager().getAttributes();t.traverse((t=>{this._setModelAttributes(t.model,e)}))}}_applyAnimationsProp(t,e,i){if(!t||!e||!i)return;const n=e.getAnimations();Object.keys(i).sort().forEach((t=>{const e=i[t];if("*"===t)n.forEach((t=>{Object.assign(t,e)}));else if(Number.isFinite(Number(t))){const i=Number(t);i>=0&&i<n.length?Object.assign(n[i],e):a.Z.warn("animation ".concat(t," not found"))()}else{const i=n.find((({name:e})=>e===t));i?Object.assign(i,e):a.Z.warn("animation ".concat(t," not found"))()}}))}_deleteScenegraph(){const{scenegraph:t}=this.state;t instanceof d.Z&&t.delete()}_getModelOptions(){const{_imageBasedLightingEnvironment:t}=this.props;let e=null;return t&&(e="function"==typeof t?t({gl:this.context.gl,layer:this}):t),{gl:this.context.gl,waitForFullLoad:!0,imageBasedLightingEnvironment:e,modelOptions:{isInstanced:!0,transpileToGLSL100:!(0,l.D0)(this.context.gl),...this.getShaders()},useTangents:!1}}updateAttributes(t){this.setState({attributesAvailable:!0}),this.state.scenegraph&&this.state.scenegraph.traverse((e=>{this._setModelAttributes(e.model,t)}))}draw({moduleParameters:t=null,parameters:e={},context:i}){if(!this.state.scenegraph)return;this.props._animations&&this.state.animator&&(this.state.animator.animate(i.timeline.getTime()),this.setNeedsRedraw());const{viewport:n}=this.context,{sizeScale:o,sizeMinPixels:s,sizeMaxPixels:r,opacity:a,coordinateSystem:l}=this.props,c=this.getNumInstances();this.state.scenegraph.traverse(((i,{worldMatrix:d})=>{i.model.setInstanceCount(c),i.updateModuleSettings(t),i.draw({parameters:e,uniforms:{sizeScale:o,opacity:a,sizeMinPixels:s,sizeMaxPixels:r,composeModelMatrix:(0,g.X)(n,l),sceneModelMatrix:d,u_Camera:i.model.getUniforms().project_uCameraPosition}})}))}}(0,n.Z)(v,"defaultProps",m),(0,n.Z)(v,"layerName","ScenegraphLayer")},3989:(t,e,i)=>{i.d(e,{Z:()=>_});var n=i(4572),o=i(744),s=i(4185),r=i(3844),a=i(7287),l=i(3117),c=i(3982),d=i(9450),u=i(4912),h=i(9769),p=i(4211),g=i(6948),f=i(7805);function m(t,e){(t.COLOR_0||t.colors)&&e||(t.colors={constant:!0,value:new Float32Array([1,1,1])}),o.Z.assert(t.positions||t.POSITION,'no "postions" or "POSITION" attribute in mesh')}function v(t,e){if(t.attributes)return m(t.attributes,e),t instanceof c.Z?t:new c.Z(t);if(t.positions||t.POSITION)return m(t,e),new c.Z({attributes:t});throw Error("Invalid mesh")}const y={mesh:{type:"object",value:null,async:!0},texture:{type:"image",value:null,async:!0},sizeScale:{type:"number",value:1,min:0},_useMeshColors:{type:"boolean",value:!1},_instanced:!0,wireframe:!1,material:!0,getPosition:{type:"accessor",value:t=>t.position},getColor:{type:"accessor",value:[0,0,0,255]},getOrientation:{type:"accessor",value:[0,0,0]},getScale:{type:"accessor",value:[1,1,1]},getTranslation:{type:"accessor",value:[0,0,0]},getTransformMatrix:{type:"accessor",value:[]}};class _ extends s.Z{constructor(...t){super(...t),(0,n.Z)(this,"state",void 0)}getShaders(){const t=!(0,d.D0)(this.context.gl),e={};return(0,p.U6)(this.context.gl,g.h.GLSL_DERIVATIVES)&&(e.DERIVATIVES_AVAILABLE=1),super.getShaders({vs:"#version 300 es\n#define SHADER_NAME simple-mesh-layer-vs\n\n// Scale the model\nuniform float sizeScale;\nuniform bool composeModelMatrix;\n\n// Primitive attributes\nin vec3 positions;\nin vec3 normals;\nin vec3 colors;\nin vec2 texCoords;\n\n// Instance attributes\nin vec3 instancePositions;\nin vec3 instancePositions64Low;\nin vec4 instanceColors;\nin vec3 instancePickingColors;\nin mat3 instanceModelMatrix;\nin vec3 instanceTranslation;\n\n// Outputs to fragment shader\nout vec2 vTexCoord;\nout vec3 cameraPosition;\nout vec3 normals_commonspace;\nout vec4 position_commonspace;\nout vec4 vColor;\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n  geometry.uv = texCoords;\n  geometry.pickingColor = instancePickingColors;\n\n  vTexCoord = texCoords;\n  cameraPosition = project_uCameraPosition;\n  vColor = vec4(colors * instanceColors.rgb, instanceColors.a);\n\n  vec3 pos = (instanceModelMatrix * positions) * sizeScale + instanceTranslation;\n\n  if (composeModelMatrix) {\n    DECKGL_FILTER_SIZE(pos, geometry);\n    // using instancePositions as world coordinates\n    // when using globe mode, this branch does not re-orient the model to align with the surface of the earth\n    // call project_normal before setting position to avoid rotation\n    normals_commonspace = project_normal(instanceModelMatrix * normals);\n    gl_Position = project_position_to_clipspace(pos + instancePositions, instancePositions64Low, vec3(0.0), position_commonspace);\n    geometry.position = position_commonspace;\n  }\n  else {\n    pos = project_size(pos);\n    DECKGL_FILTER_SIZE(pos, geometry);\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, pos, position_commonspace);\n    geometry.position = position_commonspace;\n    normals_commonspace = project_normal(instanceModelMatrix * normals);\n  }\n\n  geometry.normal = normals_commonspace;\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#version 300 es\n#define SHADER_NAME simple-mesh-layer-fs\n\nprecision highp float;\n\nuniform bool hasTexture;\nuniform sampler2D sampler;\nuniform bool flatShading;\nuniform float opacity;\n\nin vec2 vTexCoord;\nin vec3 cameraPosition;\nin vec3 normals_commonspace;\nin vec4 position_commonspace;\nin vec4 vColor;\n\nout vec4 fragColor;\n\nvoid main(void) {\n  geometry.uv = vTexCoord;\n\n  vec3 normal;\n  if (flatShading) {\n\n// NOTE(Tarek): This is necessary because\n// headless.gl reports the extension as\n// available but does not support it in\n// the shader.\n#ifdef DERIVATIVES_AVAILABLE\n    normal = normalize(cross(dFdx(position_commonspace.xyz), dFdy(position_commonspace.xyz)));\n#else\n    normal = vec3(0.0, 0.0, 1.0);\n#endif\n  } else {\n    normal = normals_commonspace;\n  }\n\n  vec4 color = hasTexture ? texture(sampler, vTexCoord) : vColor;\n  vec3 lightColor = lighting_getLightColor(color.rgb, cameraPosition, position_commonspace.xyz, normal);\n  fragColor = vec4(lightColor, color.a * opacity);\n\n  DECKGL_FILTER_COLOR(fragColor, geometry);\n}\n",modules:[r.Z,a.s,l.Z],transpileToGLSL100:t,defines:e})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{transition:!0,type:5130,fp64:this.use64bitPositions(),size:3,accessor:"getPosition"},instanceColors:{type:5121,transition:!0,size:this.props.colorFormat.length,normalized:!0,accessor:"getColor",defaultValue:[0,0,0,255]},instanceModelMatrix:f.P}),this.setState({emptyTexture:new u.Z(this.context.gl,{data:new Uint8Array(4),width:1,height:1})})}updateState(t){super.updateState(t);const{props:e,oldProps:i,changeFlags:n}=t;if(e.mesh!==i.mesh||n.extensionsChanged){var o;if(null===(o=this.state.model)||void 0===o||o.delete(),e.mesh){this.state.model=this.getModel(e.mesh);const t=e.mesh.attributes||e.mesh;this.setState({hasNormals:Boolean(t.NORMAL||t.normals)})}this.getAttributeManager().invalidateAll()}e.texture!==i.texture&&this.setTexture(e.texture),this.state.model&&this.state.model.setDrawMode(this.props.wireframe?3:4)}finalizeState(t){super.finalizeState(t),this.state.emptyTexture.delete()}draw({uniforms:t}){if(!this.state.model)return;const{viewport:e}=this.context,{sizeScale:i,coordinateSystem:n,_instanced:o}=this.props;this.state.model.setUniforms(t).setUniforms({sizeScale:i,composeModelMatrix:!o||(0,f.X)(e,n),flatShading:!this.state.hasNormals}).draw()}getModel(t){const e=new h.Z(this.context.gl,{...this.getShaders(),id:this.props.id,geometry:v(t,this.props._useMeshColors),isInstanced:!0}),{texture:i}=this.props,{emptyTexture:n}=this.state;return e.setUniforms({sampler:i||n,hasTexture:Boolean(i)}),e}setTexture(t){const{emptyTexture:e,model:i}=this.state;i&&i.setUniforms({sampler:t||e,hasTexture:Boolean(t)})}}(0,n.Z)(_,"defaultProps",y),(0,n.Z)(_,"layerName","SimpleMeshLayer")},7805:(t,e,i)=>{i.d(e,{P:()=>d,X:()=>u});var n=i(8550),o=i(4088);const s=Math.PI/180,r=new Float32Array(16),a=new Float32Array(12);function l(t,e,i){const n=e[0]*s,o=e[1]*s,r=e[2]*s,a=Math.sin(r),l=Math.sin(n),c=Math.sin(o),d=Math.cos(r),u=Math.cos(n),h=Math.cos(o),p=i[0],g=i[1],f=i[2];t[0]=p*h*u,t[1]=p*c*u,t[2]=p*-l,t[3]=g*(-c*d+h*l*a),t[4]=g*(h*d+c*l*a),t[5]=g*u*a,t[6]=f*(c*a+h*l*d),t[7]=f*(-h*a+c*l*d),t[8]=f*u*d}function c(t){return t[0]=t[0],t[1]=t[1],t[2]=t[2],t[3]=t[4],t[4]=t[5],t[5]=t[6],t[6]=t[8],t[7]=t[9],t[8]=t[10],t[9]=t[12],t[10]=t[13],t[11]=t[14],t.subarray(0,12)}const d={size:12,accessor:["getOrientation","getScale","getTranslation","getTransformMatrix"],shaderAttributes:{instanceModelMatrix__LOCATION_0:{size:3,elementOffset:0},instanceModelMatrix__LOCATION_1:{size:3,elementOffset:3},instanceModelMatrix__LOCATION_2:{size:3,elementOffset:6},instanceTranslation:{size:3,elementOffset:9}},update(t,{startRow:e,endRow:i}){const{data:o,getOrientation:s,getScale:d,getTranslation:u,getTransformMatrix:h}=this.props,p=Array.isArray(h),g=p&&16===h.length,f=Array.isArray(d),m=Array.isArray(s),v=Array.isArray(u),y=g||!p&&Boolean(h(o[0]));t.constant=y?g:m&&f&&v;const _=t.value;if(t.constant){let e;if(y)r.set(h),e=c(r);else{e=a;l(e,s,d),e.set(u,9)}t.value=new Float32Array(e)}else{let p=e*t.size;const{iterable:x,objectInfo:w}=(0,n.jB)(o,e,i);for(const t of x){let e;if(w.index++,y)r.set(g?h:h(t,w)),e=c(r);else{e=a;l(e,m?s:s(t,w),f?d:d(t,w)),e.set(v?u:u(t,w),9)}_[p++]=e[0],_[p++]=e[1],_[p++]=e[2],_[p++]=e[3],_[p++]=e[4],_[p++]=e[5],_[p++]=e[6],_[p++]=e[7],_[p++]=e[8],_[p++]=e[9],_[p++]=e[10],_[p++]=e[11]}}}};function u(t,e){return e===o.Df.CARTESIAN||e===o.Df.METER_OFFSETS||e===o.Df.DEFAULT&&!t.isGeospatial}},6024:(t,e,i)=>{i.d(e,{Z:()=>m});var n=i(7294),o=i(8289);const s="undefined"!=typeof window?n.useLayoutEffect:n.useEffect;function r(t,e){for(;t;){if(t===e)return!0;t=Object.getPrototypeOf(t)}return!1}var a=i(4897),l=i(4185);const c={position:"absolute",zIndex:-1};function d(t,e){if("function"==typeof t)return t(e);if(Array.isArray(t))return t.map((t=>d(t,e)));if(u(t)){if(function(t){const e=t.type,i=e&&e.defaultProps;return i&&i.mapStyle}(t))return e.style=c,(0,n.cloneElement)(t,e);if(function(t){const e=t.type;return e&&e.deckGLViewProps}(t))return(0,n.cloneElement)(t,e)}return t}function u(t){return t&&"object"==typeof t&&"type"in t||!1}function h(t){if("function"==typeof t)return(0,n.createElement)(a.Z,{},t);if(Array.isArray(t))return t.map(h);if(u(t)){if(t.type===n.Fragment)return h(t.props.children);if(r(t.type,a.Z))return t}return t}const p={mixBlendMode:null};function g(t){t.redrawReason&&(t.deck._drawLayers(t.redrawReason),t.redrawReason=null)}const f=(0,n.forwardRef)(((t,e)=>{const[i,c]=(0,n.useState)(0),f=(0,n.useRef)({control:null,version:i,forceUpdate:()=>c((t=>t+1))}).current,m=(0,n.useRef)(null),v=(0,n.useRef)(null),y=(0,n.useMemo)((()=>function({children:t,layers:e=[],views:i=null}){const o=[],s=[],c={};return n.Children.forEach(h(t),(t=>{if(u(t)){const e=t.type;if(r(e,l.Z)){const i=function(t,e){const i={},n=t.defaultProps||{};for(const t in e)n[t]!==e[t]&&(i[t]=e[t]);return new t(i)}(e,t.props);s.push(i)}else o.push(t);if(r(e,a.Z)&&e!==a.Z&&t.props.id){const i=new e(t.props);c[i.id]=i}}else t&&o.push(t)})),Object.keys(c).length>0&&(Array.isArray(i)?i.forEach((t=>{c[t.id]=t})):i&&(c[i.id]=i),i=Object.values(c)),{layers:e=s.length>0?[...s,...e]:e,children:o,views:i}}(t)),[t.layers,t.views,t.children]);let _=!0;const x=e=>{var i;return _&&t.viewState?(f.viewStateUpdateRequested=e,null):(f.viewStateUpdateRequested=null,null===(i=t.onViewStateChange)||void 0===i?void 0:i.call(t,e))},w=e=>{var i;_?f.interactionStateUpdateRequested=e:(f.interactionStateUpdateRequested=null,null===(i=t.onInteractionStateChange)||void 0===i||i.call(t,e))},P=(0,n.useMemo)((()=>{const e={...t,style:null,width:"100%",height:"100%",parent:m.current,canvas:v.current,layers:y.layers,views:y.views,onViewStateChange:x,onInteractionStateChange:w};return delete e._customRender,f.deck&&f.deck.setProps(e),e}),[t]);(0,n.useEffect)((()=>{const e=t.Deck||o.Z;return f.deck=function(t,e,i){const n=new e({...i,_customRender:e=>{t.redrawReason=e;const i=n.getViewports();t.lastRenderedViewports!==i?t.forceUpdate():g(t)}});return n}(f,e,{...P,parent:m.current,canvas:v.current}),()=>{var t;return null===(t=f.deck)||void 0===t?void 0:t.finalize()}}),[]),s((()=>{g(f);const{viewStateUpdateRequested:t,interactionStateUpdateRequested:e}=f;t&&x(t),e&&w(e)})),(0,n.useImperativeHandle)(e,(()=>function(t){return{get deck(){return t.deck},pickObject:e=>t.deck.pickObject(e),pickMultipleObjects:e=>t.deck.pickMultipleObjects(e),pickObjects:e=>t.deck.pickObjects(e)}}(f)),[]);const b=f.deck&&f.deck.isInitialized?f.deck.getViewports():void 0,{ContextProvider:S,width:C,height:M,id:T,style:L}=t,{containerStyle:A,canvasStyle:Z}=(0,n.useMemo)((()=>function({width:t,height:e,style:i}){const n={position:"absolute",zIndex:0,left:0,top:0,width:t,height:e},o={left:0,top:0};if(i)for(const t in i)t in p?o[t]=i[t]:n[t]=i[t];return{containerStyle:n,canvasStyle:o}}({width:C,height:M,style:L})),[C,M,L]);if(!f.viewStateUpdateRequested&&f.lastRenderedViewports===b||f.version!==i){f.lastRenderedViewports=b,f.version=i;const t=function({children:t,deck:e,ContextProvider:i}){const{viewManager:o}=e||{};if(!o||!o.views.length)return[];const s={},l=o.views[0].id;for(const e of t){let t=l,i=e;u(e)&&r(e.type,a.Z)&&(t=e.props.id||l,i=e.props.children);const n=o.getViewport(t),c=o.getViewState(t);if(n){c.padding=n.padding;const{x:e,y:o,width:r,height:a}=n;i=d(i,{x:e,y:o,width:r,height:a,viewport:n,viewState:c}),s[t]||(s[t]={viewport:n,children:[]}),s[t].children.push(i)}}return Object.keys(s).map((t=>{const{viewport:o,children:r}=s[t],{x:a,y:l,width:c,height:d}=o,u={position:"absolute",left:a,top:l,width:c,height:d},h="view-".concat(t),p=(0,n.createElement)("div",{key:h,id:h,style:u},...r);if(i){const s={viewport:o,container:e.canvas.offsetParent,eventManager:e.eventManager,onViewStateChange:i=>{i.viewId=t,e._onViewStateChange(i)}};return(0,n.createElement)(i,{key:h,value:s},p)}return p}))}({children:y.children,deck:f.deck,ContextProvider:S}),e=(0,n.createElement)("canvas",{key:"canvas",id:T||"deckgl-overlay",ref:v,style:Z});f.control=(0,n.createElement)("div",{id:"".concat(T||"deckgl","-wrapper"),ref:m,style:A},[e,t])}return _=!1,f.control}));f.defaultProps=o.Z.defaultProps;const m=f}}]);