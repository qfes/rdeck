<%#
  template for generating a function to add deck.gl layers to a map.
  data is expected with the following form:
  data = {
    type: "H3HexagonLayer",
    name: "h3_hexagon_layer",
    props: [{
      name: "get_hexagon",
      default: "hexagon",
      type: "accessor"
    }]
  }
-%>
#' @name <%- name %>
#' @autoglobal
#' @export
add_<%- name -%> <- function(rdeck,
                            ...,
                            id = NULL,
                            name = "<%- type -%>",
                            group_name = NULL,
                            <% for (const p of props) { -%>
                              <%- p.name -%> = <%- p.value ?? "NULL" -%>,
                            <% } -%>
                            blending_mode = "normal",
                            visibility_toggle = TRUE,
                            tooltip = FALSE) {
    check_dots(...)
    # construct layer object
    <%- name -%> <- layer(
        type = "<%- type -%>",
        ...,
        id = id %||% uuid::UUIDgenerate(),
        name = name,
        group_name = group_name,
        <% for (const p of props) { -%>
            <%
              const value = p.type === "accessor"
                ? p.scalable
                  ? `accessor_scale(rlang::enquo(${p.name}), data)`
                  : `accessor(rlang::enquo(${p.name}), data)`
                : p.name;
            -%>
            <%- p.name -%> = <%- value ?? "NULL" -%>,
        <% } -%>
        blending_mode = blending_mode,
        visibility_toggle = visibility_toggle,
        tooltip = eval_tooltip(rlang::enquo(tooltip), data)
    )
    # validate layer props
    validate_id(<%- name -%>)
    validate_name(<%- name -%>)
    validate_group_name(<%- name -%>)
    <% for (const p of props) { -%>
      validate_<%- p.name -%>(<%- name -%>)
    <% } -%>
    validate_blending_mode(<%- name -%>)
    validate_visibility_toggle(<%- name -%>)
    # add layer to map
    add_layer(rdeck, <%- name -%>)
}
