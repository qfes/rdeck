<%#
  template for generating a function to add deck.gl layers to a map.
  data is expected with the following form:
  data = {
    layer: {
      type: "H3HexagonLayer",
      name: "h3_hexagon_layer",
      props: [{
        name: "get_hexagon",
        default: "hexagon",
        type: "accessor"
      }]
    }
  }
-%>
#' @name <%- layer.name %>
#' @autoglobal
#' @export
add_<%- layer.name -%> <- function(rdeck,
                                   ...,
                                   <%-
                                     layer.props
                                       .map((p) => `${p.name} = ${p.value ?? "NULL"}`)
                                       .join(",\n");
                                   -%>) {
  rlang::check_required(rdeck)
  check_dots(...)

  <%# diffuse accessors %>
  <%-
    layer.props
      .filter((p) => p.type === "accessor" || p.name === "tooltip")
      .map((p) => `${p.name} <- rlang::enquo(${p.name})`)
      .join("\n");
  %>

  <%# construct layer object %>
  <% const dataType = layer.dataType != null ? JSON.stringify(layer.dataType) : "NULL" -%>
  <%- layer.name -%> <- rlang::try_fetch(
    layer(
      type = "<%- layer.typeName -%>",
      ...,
      <%-
        layer.props
          .map((p) => {
            if (p.type === "accessor") return `${p.name} = accessor(${p.name}, data, ${dataType})`;
            if (p.name === "tooltip") return `${p.name} = eval_tooltip(${p.name}, data, ${dataType})`;

            return `${p.name} = ${p.name}`;
          })
          .join(",\n")
      %>
    ),
    error = function(err) {
      rlang::abort(
        "Failed to create <%- layer.name -%>",
        class = "rdeck_error",
        parent = err
      )
    }
  )
  <%# validate params %>
  <%- layer.props.map((p) => `validate_${p.name}(${layer.name})`).join("\n"); %>
  <%# add layer %>
  add_layer(rdeck, <%- layer.name %>)
}
